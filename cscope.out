cscope 15 $HOME/Code/stdlib               0000482575
	@houseofmadness/matrix.h

9 #i‚de‡
MATRIX_H


10 
	#MATRIX_H


	)

13 
	~<°dio.h
>

14 
	~<m©h.h
>

16 
	~"øndom.h
"

18 #i‚de‡
m_Æloc


19 
	~<°dlib.h
>

20 
	#m_Æloc
 
mÆloc


	)

21 
	#m_ªÆloc
 
ªÆloc


	)

22 
	#m_‰ì
 
‰ì


	)

27 
ªluf
(
x
);

28 
sigmoidf
(
x
);

31 
	sM©rix
 {

32 
size_t
 
	mrows
;

33 
size_t
 
	mcﬁs
;

34 * 
	mV
;

35 } 
	tM©rix
;

37 
	#M©rixAT
(
m
, 
i
, 
j
Ë((m).
V
[(iË* m.
cﬁs
 + (j)])

	)

39 
M©rix
 
M©rixAŒoc
(
size_t
 
rows
, size_à
cﬁs
, *);

41 
	#M©rixAª«AŒoc
(
¨ía
, 
i
, 
j
Ë(
	`M©rixAŒoc
((i), (j), 
	`PushAºay
◊ª«, , (iË* (j))))

	)

43 
M©rix
 
M©rixMÆloc
(
size_t
 
rows
, size_à
cﬁs
);

44 
M©rixFªe
(
M©rix
 
a
);

45 
M©rixPröt_
(
M©rix
 
a
, c⁄° * 
«me
);

47 
	#M©rixPröt
(
m
Ë
	`M©rixPröt_
(m, #m)

	)

49 
M©rixR™domize
(
R™domSîõs
* 
£rõs
, 
M©rix
 
a
, 
low
, 
high
);

50 
M©rixFûl
(
M©rix
, );

52 
M©rix
 
M©rixRow
(M©rix, 
size_t
);

53 
M©rixC›y
(
M©rix
, Matrix);

55 
M©rixAddSˇœr
(
M©rix
, Matrix, );

56 
M©rixAddM©rix
(
M©rix
, Matrix, Matrix);

57 
M©rixSubSˇœr
(
M©rix
, Matrix, );

58 
M©rixSubM©rix
(
M©rix
, Matrix, Matrix);

59 
M©rixDŸ
(
M©rix
, Matrix, Matrix);

61 
M©rixSum
(
M©rix
, Matrix);

62 
M©rixTøn•o£
(
M©rix
, Matrix);

64 
M©rixAµly
(
M©rix
, (*)());

65 
	`M©rixSigmoid
(
M©rix
);

69 #ifde‡
MATRIX_IMPLEMENTATION


72 
	$sigmoidf
(
x
)

76  1.‡/ (1.‡+ 
	`expf
(-
x
));

77 
	}
}

80 
	$ªluf
(
x
)

82  
x
 ? x > 0 : 0;

83 
	}
}

91 
M©rix


92 
	$M©rixAŒoc
(
size_t
 
rows
, size_à
cﬁs
, * 
V
)

94 
M©rix
 
ªs
;

96 
ªs
.
rows
 =Ñows;

97 
ªs
.
cﬁs
 = cols;

98 
ªs
.
V
 = V;

100  
ªs
;

101 
	}
}

103 
M©rix


104 
	$M©rixMÆloc
(
size_t
 
rows
, size_à
cﬁs
)

106 
M©rix
 
ªs
;

108 
ªs
.
rows
 =Ñows;

109 
ªs
.
cﬁs
 = cols;

110 
ªs
.
V
 = (*)
	`m_Æloc
((Ë* 
rows
 * 
cﬁs
);

111 
	`As£π
((!
ªs
.
V
) && "Malloc failed during Matrix Allocation.");

113  
ªs
;

114 
	}
}

117 
	$M©rixFªe
(
M©rix
 
a
)

119 i‡(
a
.
V
)

121 
	`m_‰ì
(
a
.
V
);

123 
	}
}

126 
	$M©rixPröt_
(
M©rix
 
a
, c⁄° * 
«me
)

128 
	`¥ötf
("%†[\n", 
«me
);

129 
size_t
 
i
 = 0;

130 
i
 < 
a
.
rows
;

131 
i
++)

133 
size_t
 
j
 = 0;

134 
j
 < 
a
.
cﬁs
;

135 
j
++)

137 
	`¥ötf
("\t%‡", 
	`M©rixAT
(
a
, 
i
, 
j
));

139 
	`¥ötf
("\n");

141 
	`¥ötf
("]\n");

142 
	}
}

144 
M©rix


145 
	$M©rixRow
(
M©rix
 
a
, 
size_t
 
row
)

147  (
M©rix
) {

148 .
rows
 = 1,

149 .
cﬁs
 = 
a
.cols,

150 .
V
 = &
	`M©rixAT
(
a
, 
row
, 0),

152 
	}
}

155 
	$M©rixR™domize
(
R™domSîõs
* 
£rõs
, 
M©rix
 
a
, 
low
, 
high
)

157 
size_t
 
i
 = 0;

158 
i
 < 
a
.
rows
;

159 
i
++)

161 
size_t
 
j
 = 0;

162 
j
 < 
a
.
cﬁs
;

163 
j
++)

165 
	`M©rixAT
(
a
, 
i
, 
j
Ë
	`R™domBëwìn
(
£rõs
, 
low
, 
high
);

168 
	}
}

171 
	$M©rixC›y
(
M©rix
 
b
, M©rix 
a
)

173 
	`As£π
(
a
.
rows
 =
b
.rows);

174 
	`As£π
(
a
.
cﬁs
 =
b
.cols);

175 
size_t
 
i
 = 0; i < 
b
.
rows
; i++) {

176 
size_t
 
j
 = 0; j < 
b
.
cﬁs
; j++) {

177 
	`M©rixAT
(
b
, 
i
, 
j
ËM©rixAT(
a
, i, j);

181 
	}
}

184 
	$M©rixFûl
(
M©rix
 
a
, 
x
)

186 
size_t
 
i
 = 0; i < 
a
.
rows
; i++) {

187 
size_t
 
j
 = 0; j < 
a
.
cﬁs
; j++) {

188 
	`M©rixAT
(
a
, 
i
, 
j
Ë
x
;

191 
	}
}

194 
	$M©rixAddSˇœr
(
M©rix
 
b
, M©rix 
a
, 
x
)

196 
size_t
 
i
 = 0; i < 
a
.
rows
; i++) {

197 
size_t
 
j
 = 0; j < 
a
.
cﬁs
; j++) {

199 
	`M©rixAT
(
b
, 
i
, 
j
ËM©rixAT(
a
, i, jË+ 
x
;

202 
	}
}

205 
	$M©rixAddM©rix
(
M©rix
 
c
, M©rix 
a
, M©rix 
b
)

207 
	`As£π
(
a
.
rows
 =
b
.rows);

208 
	`As£π
(
a
.
cﬁs
 =
b
.cols);

210 
size_t
 
i
 = 0; i < 
a
.
rows
; i++) {

211 
size_t
 
j
 = 0; j < 
b
.
cﬁs
; j++) {

215 
	`M©rixAT
(
c
, 
i
, 
j
) =

216 
	`M©rixAT
(
a
, 
i
, 
j
Ë+ M©rixAT(
b
, i, j);

219 
	}
}

222 
	$M©rixSum
(
M©rix
 
b
, M©rix 
a
)

224 
	`As£π
(
b
.
rows
 =
a
.rows);

225 
	`As£π
(
b
.
cﬁs
 =
a
.cols);

226 
size_t
 
i
 = 0; i < 
a
.
rows
; i++) {

227 
size_t
 
j
 = 0; j < 
b
.
cﬁs
; j++) {

228 
	`M©rixAT
(
b
, 
i
, 
j
Ë+M©rixAT(
a
, i, j);

231 
	}
}

234 
	$M©rixSubSˇœr
(
M©rix
 
b
, M©rix 
a
, 
x
)

236 
size_t
 
i
 = 0; i < 
a
.
rows
; i++) {

237 
size_t
 
j
 = 0; j < 
a
.
cﬁs
; j++) {

239 
	`M©rixAT
(
b
, 
i
, 
j
ËM©rixAT(
a
, i, jË- 
x
;

242 
	}
}

245 
	$M©rixSubM©rix
(
M©rix
 
c
, M©rix 
a
, M©rix 
b
)

247 
size_t
 
i
 = 0; i < 
a
.
rows
; i++) {

248 
size_t
 
j
 = 0; j < 
b
.
cﬁs
; j++) {

250 
	`M©rixAT
(
c
, 
i
, 
j
ËM©rixAT(
a
, i, jË- M©rixAT(
b
, i, j);

253 
	}
}

256 
	$M©rixDŸ
(
M©rix
 
c
, M©rix 
a
, M©rix 
b
)

259 
	`As£π
(
a
.
cﬁs
 =
b
.
rows
);

260 
	`As£π
(
a
.
rows
 =
c
.rows);

261 
	`As£π
(
c
.
cﬁs
 =
b
.cols);

263 
size_t
 
i
 = 0; i < 
a
.
rows
; i++) {

264 
size_t
 
j
 = 0; j < 
b
.
cﬁs
; j++) {

265 
	`M©rixAT
(
c
, 
i
, 
j
) = 0;

266 
size_t
 
k
 = 0; k < 
b
.
rows
; k++) {

267 
	`M©rixAT
(
c
, 
i
, 
j
Ë+M©rixAT(
a
, i, 
k
Ë* M©rixAT(
b
, k, j);

271 
	}
}

274 
	$M©rixAµly
(
M©rix
 
a
, (*
fun
)())

276 
size_t
 
i
 = 0; i < 
a
.
rows
; i++) {

277 
size_t
 
j
 = 0; j < 
a
.
cﬁs
; j++) {

278 
a
.
V
[
i
 *á.
cﬁs
 + 
j
] = (*
fun
)(a.V[i *á.cols + j]);

281 
	}
}

284 
	$M©rixTøn•o£
(
M©rix
 
b
, M©rix 
a
)

286 
size_t
 
i
 = 0; i < 
b
.
rows
; i++) {

287 
size_t
 
j
 = 0; j < 
b
.
cﬁs
; j++) {

289 
	`M©rixAT
(
b
, 
i
, 
j
ËM©rixAT(
a
, j, i);

291 
	`¥ötf
("\n");

293 
	}
}

296 
	$M©rixSigmoid
(
M©rix
 
a
)

303 
	`M©rixAµly
(
a
, 
sigmoidf
);

304 
	}
}

307 
	$M©rixReLU
(
M©rix
 
a
)

309 
	`M©rixAµly
(
a
, 
ªluf
);

310 
	}
}

	@houseofmadness/parser.h

1 #i‚de‡
PARSER_H


2 
	#PARSER_H


	)

4 
ölöe
 

5 
	$Ch¨IsS∑˚
(
c
)

7 i‡(
c
 == ' ' || c == '\t' || \

8 
c
 == '\n' || c == '\r')  1;

10 
	}
}

12 
ölöe
 

13 
	$Ch¨IsAÕha
(
c
)

15 i‡((
c
 >= 'A' && c <= 'Z') || \

16 (
c
 >= 'a' && c <= 'z'))  1;

18 
	}
}

20 
ölöe
 

21 
	$Ch¨IsDigô
(
c
)

23 i‡–
c
 >= '0' && c <= '9' )  1;

25 
	}
}

27 
ölöe
 

28 
	$Ch¨IsSymbﬁ
(
c
)

30 i‡((
c
 >= '!' && c <= '/') || \

31 (
c
 >= ':' && c <= '@') || \

32 (
c
 >= '[' && c <= '`') || \

33 (
c
 >= '{' && c <= '~'))  1;

35 
	}
}

	@src/base/arena.c

1 
	~"¨ía.h
"

4 
	$Aª«FûlZîo
(
mem‹y_ödex
 
size
, *
±r
)

6 
uöt8
* 
byã
 = (uöt8*Ë
±r
;

7 
size
--) {

8 *
byã
++ = 0;

10 
	}
}

13 
	$Aª«SëMöimumBlockSize
(
Aª«
* 
¨ía
, 
mem‹y_ödex
 
möimumBlockSize
)

15 
¨ía
->
möimumBlockSize
 = minimumBlockSize;

16 
	}
}

18 
mem‹y_ödex


19 
	$Aª«GëAlignmítOff£t
(
Aª«
* 
¨ía
, 
mem‹y_ödex
 
Æignmít
)

21 
mem‹y_ödex
 
ÆignmítOff£t
 = 0;

23 
mem‹y_ödex
 
ªsPoöãr
 = (mem‹y_ödex)
¨ía
->
ba£
 +áª«->
pos
;

24 
mem‹y_ödex
 
ÆignmítMask
 = 
Æignmít
 - 1;

25 i‡(
ªsPoöãr
 & 
ÆignmítMask
)

27 
ÆignmítOff£t
 = 
Æignmít
 - (
ªsPoöãr
 & 
ÆignmítMask
);

30 (
ÆignmítOff£t
);

31 
	}
}

33 
mem‹y_ödex


34 
	$Aª«GëRemaöögSize
(
Aª«
* 
¨ía
, 
mem‹y_ödex
 
Æignmít
)

36 
mem‹y_ödex
 
ªs
 = 
¨ía
->
size
 - (¨ía->
pos
 + 
	`Aª«GëAlignmítOff£t
◊ª«, 
Æignmít
));

37 (
ªs
);

38 
	}
}

40 
mem‹y_ödex


41 
	$Aª«GëEf„˘iveSize
(
Aª«
* 
¨ía
, 
mem‹y_ödex
 
sizeInô
, mem‹y_ödex 
Æignmít
)

43 
mem‹y_ödex
 
size
 = 
sizeInô
;

45 
mem‹y_ödex
 
ÆignmítOff£t
 = 
	`Aª«GëAlignmítOff£t
(
¨ía
, 
Æignmít
);

46 
size
 +
ÆignmítOff£t
;

48 (
size
);

49 
	}
}

51 
boﬁ32


52 
	$Aª«C™St‹eSize
(
Aª«
* 
¨ía
, 
mem‹y_ödex
 
sizeInô
, mem‹y_ödex 
Æignmít
)

54 i‡(!
Æignmít
ËÆignmíà
DEFAULT_ALIGNMENT
;

56 
mem‹y_ödex
 
size
 = 
	`Aª«GëEf„˘iveSize
(
¨ía
, 
sizeInô
, 
Æignmít
);

57 
boﬁ32
 
ªs
 = (
¨ía
->
pos
 + 
size
 <=árena->size);

59 (
ªs
);

60 
	}
}

62 
Aª«FoŸî
*

63 
	$GëFoŸî
(
Aª«
* 
¨ía
)

65 
Aª«FoŸî
 *
ªs
 = (Aª«FoŸî*)(
¨ía
->
ba£
 +áª«->
size
);

67 (
ªs
);

68 
	}
}

71 
	$Aª«Push
(
Aª«
* 
¨ía
, 
mem‹y_ödex
 
sizeInô
, mem‹y_ödex 
Æignmít
)

73 i‡(!
Æignmít
ËÆignmíà
DEFAULT_ALIGNMENT
;

76 
mem‹y_ödex
 
size
 = 
	`Aª«GëEf„˘iveSize
(
¨ía
, 
sizeInô
, 
Æignmít
);

79 i‡((
¨ía
->
pos
 + 
size
) >árena->size)

82 i‡(!
¨ía
->
möimumBlockSize
)

85 
¨ía
->
möimumBlockSize
 = 
DEFAULT_BLOCKSIZE
;

88 
Aª«FoŸî
 
ßve
 = {0};

89 
ßve
.
ba£
 = 
¨ía
->base;

90 
ßve
.
size
 = 
¨ía
->size;

91 
ßve
.
pos
 = 
¨ía
->pos;

94 
size
 = 
sizeInô
;

95 
mem‹y_ödex
 
blockSize
 = 
	`Max
(
size
 + (
mem‹y_¨ía_foŸî
), 
¨ía
->
möimumBlockSize
);

96 
¨ía
->
size
 = 
blockSize
 - (
mem‹y_¨ía_foŸî
);

97 
¨ía
->
ba£
 = (
uöt8
*)
	`AŒoˇãMem‹y
(
blockSize
);

98 
¨ía
->
pos
 = 0;

99 
¨ía
->
blockCou¡
++;

101 
Aª«FoŸî
* 
foŸî
 = 
	`GëFoŸî
(
¨ía
);

102 *
foŸî
 = 
ßve
;

104 
	`As£π
(((
¨ía
->
pos
 + 
size
) <=árena->size) && "newállocation of dynamicárena somehow failed...");

106 
mem‹y_ödex
 
ÆignmítOff£t
 = 
	`Aª«GëAlignmítOff£t
(
¨ía
, 
Æignmít
);

107 * 
ªs
 = (*)(
¨ía
->
ba£
 +áª«->
pos
 - 
ÆignmítOff£t
);

108 
¨ía
->
pos
 +
size
;

110 
	`As£π
((
size
 >
sizeInô
) && "requestedállocÉxceedsárena sizeáfterálignment.");

112 (
ªs
);

113 
	}
}

116 
	$Aª«C›y
(
mem‹y_ödex
 
size
, * 
§c
, * 
d°
)

118 
uöt8
* 
§cPos
 = (uöt8*)
§c
;

119 
uöt8
* 
d°Pos
 = (uöt8*)
d°
;

120 
size
--)

122 *
d°Pos
++ = *
§cPos
++;

124 (
d°
);

125 
	}
}

128 
	$SubAª«
(
Aª«
* 
subAª«
, Aª«* 
¨ía
, 
mem‹y_ödex
 
size
, mem‹y_ödex 
Æignmít
)

130 i‡(!
Æignmít
ËÆignmíà
DEFAULT_ALIGNMENT
;

132 
subAª«
->
size
 = size;

133 
subAª«
->
ba£
 = (
uöt8
*)
	`PushSizeAlign
(
¨ía
, 
size
, 
Æignmít
);

134 
subAª«
->
pos
 = 0;

135 
subAª«
->
ãmpCou¡
 = 0;

136 
	}
}

140 
	$Aª«P›
(
Aª«
* 
¨ía
, 
mem‹y_ödex
 
size
)

142 i‡((
¨ía
->
size
 - size) > 0)

144 
¨ía
->
size
 -= size;

146 { 
¨ía
->
size
 = 0; }

147 
	}
}

151 
	$Aª«CÀ¨
(
Aª«
 *
¨ía
)

153 
¨ía
->
blockCou¡
)

155 
	`Aª«FªeCuºítBlock
(
¨ía
);

157 
	}
}

160 
Aª«Temp


161 
	$Aª«TempBegö
(
Aª«
 *
¨ía
)

163 
Aª«Temp
 
ªs
;

165 
ªs
.
¨ía
 =árena;

166 
ªs
.
ba£
 = 
¨ía
->base;

167 
ªs
.
pos
 = 
¨ía
->pos;

169 
¨ía
->
ãmpCou¡
++;

171 (
ªs
);

172 
	}
}

175 
	$Aª«FªeCuºítBlock
(
Aª«
* 
¨ía
)

177 * 
‰ìdBlock
 = 
¨ía
->
ba£
;

178 
mem‹y_ödex
 
‰ìdBlockSize
 = 
¨ía
->
size
;

180 
Aª«FoŸî
* 
foŸî
 = 
	`GëFoŸî
(
¨ía
);

182 
¨ía
->
ba£
 = 
foŸî
->base;

183 
¨ía
->
size
 = 
foŸî
->size;

184 
¨ía
->
pos
 = 
foŸî
->pos;

186 
	`DóŒoˇãMem‹y
(
‰ìdBlock
, 
‰ìdBlockSize
);

188 
¨ía
->
blockCou¡
--;

189 
	}
}

192 
	$Aª«TempEnd
(
Aª«Temp
 
ãmp
)

194 
Aª«
* 
¨ía
 = 
ãmp
.arena;

196 
¨ía
->
ba£
 !
ãmp
.base)

198 
	`Aª«FªeCuºítBlock
(
¨ía
);

201 
	`As£π
((
¨ía
->
pos
 >
ãmp
.pos) && "ArenaÖosition isÜessÅhanÅemporary memory'sÖosition. Likely user-codedÉrror.");

202 
¨ía
->
pos
 = 
ãmp
.pos;

204 
	`As£π
((
¨ía
->
ãmpCou¡
 > 0) && "AttemptÅo decrement Arena'sÅemporary memory count when it isálready 0.");

205 
¨ía
->
ãmpCou¡
--;

206 
	}
}

212 
	$Aª«TempCheck
(
Aª«
* 
¨ía
)

214 
	`As£π
(
¨ía
->
ãmpCou¡
 == 0);

215 
	}
}

217 
Aª«Temp


218 
	$Aª«S¸©chCª©e
(
Aª«
* 
¨ía
)

221 
	`As£π
((
¨ía
->
pos
 + (
Aª«Temp
Ë<¨ía->
size
) && "requestedÅempállocÉxceedsárena size.");

223 
Aª«Temp
 
ãmp
 = 
	`Aª«TempBegö
(
¨ía
);

224  
ãmp
;

225 
	}
}

	@src/base/arena.h

8 #i‚de‡
ARENA_H


9 
	#ARENA_H


	)

19 
	~"def.h
"

20 
	~"os/mem‹y.h
"

22 
	#DEFAULT_ALIGNMENT
 (*)

	)

23 
	#DEFAULT_BLOCKSIZE
 
	`Kûobyãs
(16)

	)

26 #i‡
__STDC_VERSION__
 < 201112L && (
deföed
(
COMPILER_GCC
Ë|| deföed(
COMPILER_TCC
))

27 
	#_Alig«s
(
t
Ë
	`__©åibuã__
((
	`__Æig√d__
—)))

	)

28 
	#_Alignof
(
t
Ë
	`__Æignof__
—)

	)

31 
	#Æig«s
 
_Alig«s


	)

32 
	#Æignof
 
_Alignof


	)

35 
	smem‹y_¨ía_foŸî
 {

36 
uöt8
* 
	mba£
;

37 
mem‹y_ödex
 
	msize
;

38 
mem‹y_ödex
 
	mpos
;

39 
mem‹y_ödex
 
	m∑ddög
;

40 } 
	tAª«FoŸî
;

42 
	smem‹y_¨ía
 {

43 
uöt8
* 
	mba£
;

44 
mem‹y_ödex
 
	msize
;

45 
mem‹y_ödex
 
	mpos
;

47 
mem‹y_ödex
 
	mmöimumBlockSize
;

49 
uöt32
 
	mblockCou¡
;

50 
uöt32
 
	mãmpCou¡
;

51 } 
	tAª«
;

53 
	smem‹y_¨ía_ãmp
 {

54 
Aª«
* 
	m¨ía
;

55 
uöt8
* 
	mba£
;

56 
mem‹y_ödex
 
	mpos
;

57 
mem‹y_ödex
 
	m∑ddög
;

58 } 
	tAª«Temp
;

60 * 
Aª«Push
(
Aª«
*, 
mem‹y_ödex
, memory_index);

61 
Aª«P›
(
Aª«
* 
¨ía
, 
mem‹y_ödex
 
size
);

62 * 
Aª«C›y
(
mem‹y_ödex
, *, *);

63 
Aª«FoŸî
* 
GëFoŸî
(
Aª«
* 
¨ía
);

65 
mem‹y_ödex
 
Aª«GëEf„˘iveSize
(
Aª«
* 
¨ía
, mem‹y_ödex 
sizeInô
, mem‹y_ödex 
Æignmít
);

66 
mem‹y_ödex
 
Aª«GëAlignmítOff£t
(
Aª«
* 
¨ía
, mem‹y_ödex 
Æignmít
);

67 
mem‹y_ödex
 
Aª«GëRemaöögSize
(
Aª«
* 
¨ía
, mem‹y_ödex 
Æignmít
);

69 
Aª«FªeCuºítBlock
(
Aª«
* 
¨ía
);

72 
	#PushAºay
(
¨ía
, 
t
, 
c
Ë—*)
	`Aª«Push
(◊ª«),—)*(c), 
	`Æignof
—))

	)

73 
	#PushSåu˘
(
¨ía
, 
t
Ë
	`PushAºay
◊ª«,Å, 1)

	)

74 
	#PushSize
(
¨ía
, 
s
Ë
	`Aª«Push
(◊ª«), (s), 
	`Æignof
(s))

	)

75 
	#PushC›y
(
¨ía
, 
s
, 
§c
Ë
	`Aª«C›y
(s, src, 
	`Aª«Push
◊ª«, s, 
	`Æignof
(s)))

	)

78 
	#PushAºayAlign
(
¨ía
, 
t
, 
c
, ...Ë—*)
	`Aª«Push
(◊ª«),—)*(c), ## 
__VA_ARGS__
)

	)

79 
	#PushSåu˘Align
(
¨ía
, 
t
, ...Ë
	`PushAºay
◊ª«,Å, ## 
__VA_ARGS__
)

	)

80 
	#PushSizeAlign
(
¨ía
, 
s
, ...Ë
	`Aª«Push
(◊ª«), (s), ## 
__VA_ARGS__
)

	)

81 
	#PushC›yAlign
(
¨ía
, 
s
, 
§c
, ...Ë
	`Aª«C›y
(s, src, 
	`Aª«Push
◊ª«, s, ## 
__VA_ARGS__
))

	)

82 
Aª«FûlZîo
(
mem‹y_ödex
 
size
, *
±r
);

84 
uöt64
 
Aª«GëPos
(
Aª«
*);

86 
Aª«SëMöimumBlockSize
(
Aª«
* 
¨ía
, 
mem‹y_ödex
 
möimumBlockSize
);

87 
Aª«SëPos
(
Aª«
*, 
mem‹y_ödex
);

88 
Aª«CÀ¨
(
Aª«
*);

89 
	#Aª«Fªe
(
¨ía
Ë
	`Aª«CÀ¨
◊ª«);

	)

91 
SubAª«
(
Aª«
* 
subAª«
, Aª«* 
¨ía
, 
mem‹y_ödex
 
size
, mem‹y_ödex 
Æignmít
);

93 
Aª«Temp
 
Aª«TempBegö
(
Aª«
*);

94 
Aª«TempEnd
(
Aª«Temp
);

95 
Aª«TempCheck
(
Aª«
*);

97 
Aª«Temp
 
Aª«S¸©chCª©e
(
Aª«
*);

98 
	#Aª«S¸©chFªe
(
t
Ë
	`Aª«TempEnd
—)

	)

100 
	#ZîoSåu˘
(
ö
Ë
	`Aª«FûlZîo
((ö), &(ö))

	)

101 
	#ZîoAºay
(
n
, 
±r
Ë
	`Aª«FûlZîo
(“)*(’å)[0]), (±r))

	)

	@src/base/base.c

2 
	~"ba£.h
"

3 
	~"°rög.h
"

6 
	$maö
()

8 
Aª«
 
loˇl_¨ía
 = {0};

15 
	`¥ötf
("New Ch¨ Lowî o‡g: %c\n", 
	`Ch¨Lowî
('g'));

16 
	`¥ötf
("New Ch¨ Uµî o‡p: %c\n", 
	`Ch¨Uµî
('p'));

18 
SåögD©a
 
sdd
 = {0};

19 
	`SåögNew
(&
sdd
, "abcdefghijklmnopqrstuvwxyz");

22 
SåögD©a
 
√w_s
 = {0};

38 
SåögLi°
 
¶l
 = {0};

40 
	`SåögLi°Push
(&
loˇl_¨ía
, &
¶l
, 
√w_s
);

41 
	`SåögLi°Push
(&
loˇl_¨ía
, &
¶l
, 
sdd
);

50 
SåögD©a
 
s_ﬁd√ws
 = {0};

51 
	`SåögNew
(&
s_ﬁd√ws
, "This, is, definitely, old,Çew.");

63 
SåögLi°
 
∆l
 = 
	`SåögS∂ô
(&
loˇl_¨ía
, 
s_ﬁd√ws
, ",");

64 
	`SåögLi°Pröén
(
∆l
);

66 
	`¥ötf
("[Character Conversion]:\n");

68 
uöt8
 
utf8_ã°
[4];

70 
	`SåögEncodeUTF8
(
utf8_ã°
, 0x2603);

71 
	`¥ötf
("UTF8 conversion:");

72 
mem‹y_ödex
 
i
 = 0; i < 4 && 
utf8_ã°
[i] != 0; i++)

74 
	`¥ötf
(" %02x", 
utf8_ã°
[
i
]);

76 
	`putc
('\n', 
°dout
);

77 
uöt32
 
decoded
 = 0;

78 
uöt32
 
size
 = 
	`SåögDecodeUTF8
(&
decoded
, 
utf8_ã°
);

79 
	`¥ötf
("decoded: U+%04x\n", 
decoded
);

80 
	`¥ötf
("decoded size: %u\n", 
size
);

82 
	`¥ötf
("UTF16 conversion:");

83 
uöt16
 
utf16_ã°
[2];

84 
	`SåögEncodeUTF16
(
utf16_ã°
, 0x1f60);

85 
mem‹y_ödex
 
i
 = 0; i < 2 && 
utf16_ã°
[i] != 0; i++)

87 
	`¥ötf
(" %02x", 
utf16_ã°
[
i
]);

89 
	`putc
('\n', 
°dout
);

90 
uöt32
 
decoded2
 = 0;

91 
uöt32
 
size2
 = 
	`SåögDecodeUTF16
(&
decoded2
, 
utf16_ã°
);

92 
	`¥ötf
("decoded: U+%04x\n", 
decoded2
);

93 
	`¥ötf
("decoded size: %u\n", 
size2
);

96 
	`¥ötf
("[String utf8 Conversion]\n");

98 
SåögD©a
 
°Ωª
 = {0};

99 
	`SåögNew
(&
°Ωª
, "Howdy!");

101 
	`¥ötf
("strpre: ");

102 
	`SåögPröä
(
°Ωª
);

103 
	`¥ötf
("sizêo‡°Ωª: %lu\n", 
°Ωª
.
size
);

105 
Såög32D©a
 
°rc⁄v
 = 
	`SåögC⁄vît32
(&
loˇl_¨ía
, 
°Ωª
);

107 
	`¥ötf
("hex valueáfter conversion:");

108 
i
 = 0; i < 
°rc⁄v
.
size
 && såc⁄v.
buf
[i] != 0; i++)

110 
	`¥ötf
(" %02x", *(
°rc⁄v
.
buf
 + 
i
));

112 
	`putc
('\n', 
°dout
);

113 
	`¥ötf
("c⁄vîsi⁄ bu‡size: %lu\n", 
°rc⁄v
.
size
);

115 
SåögD©a
 
°Ωo°
 = 
	`Såög32C⁄vît
(&
loˇl_¨ía
, 
°rc⁄v
);

117 
	`¥ötf
("strpost: ");

118 
	`SåögPröä
(
°Ωo°
);

119 
	`¥ötf
("sizêo‡°Ωo°: %lu\n", 
°Ωo°
.
size
);

121 
	`¥ötf
("[String utf16 Conversion]\n");

123 
SåögD©a
 
°r16¥e
 = {0};

124 
	`SåögNew
(&
°r16¥e
, "Hola!");

126 
	`¥ötf
("str16pre: ");

127 
	`SåögPröä
(
°r16¥e
);

129 
Såög16D©a
 
°r16c⁄v
 = 
	`SåögC⁄vît16
(&
loˇl_¨ía
, 
°r16¥e
);

131 
	`¥ötf
("hex valueáfter conversion:");

132 
i
 = 0; i < 
°r16c⁄v
.
size
 && så16c⁄v.
buf
[i] != 0; i++)

134 
	`¥ötf
(" %02x", *(
°r16c⁄v
.
buf
 + 
i
));

136 
	`putc
('\n', 
°dout
);

137 
	`¥ötf
("c⁄vîsi⁄ bu‡size: %lu\n", 
°r16c⁄v
.
size
);

139 
SåögD©a
 
°r16po°
 = 
	`Såög16C⁄vît
(&
loˇl_¨ía
, 
°r16c⁄v
);

141 
	`¥ötf
("str16post: ");

142 
	`SåögPröä
(
°r16po°
);

143 
	`¥ötf
("sizêo‡°Ωo°: %lu\n", 
°r16po°
.
size
);

151 
	`Aª«Fªe
(&
loˇl_¨ía
);

153 
	}
}

	@src/base/base.h

1 #i‚de‡
BASE_H


2 
	#BASE_H


	)

5 
	~"def.h
"

6 
	~"¨ía.h
"

7 
	~"m©h.h
"

8 
	~"øndom.h
"

9 
	~"°rög.h
"

	@src/base/def.h

1 #i‚de‡
DEFINES_H


2 
	#DEFINES_H


	)

4 
	~<°dio.h
>

5 
	~<°döt.h
>

9 #i‡
deföed
(
_WIN32
Ë|| deföed(
_WIN64
)

10 
	#OS_WINDOWS
 1

	)

11 #ñi‡
deföed
(
__löux__
Ë|| deföed(
__gnu_löux__
)

12 
	#OS_LINUX
 1

	)

13 #ñi‡
deföed
(
__APPLE__
Ë&& deföed(
__MACH__
)

19 #i‡
deföed
(
__M_AMD64
Ë|| deföed(
__amd64__
)

20 
	#ARCH_X64
 1

	)

21 #ñi‡
deföed
(
__M_I86
Ë|| deföed(
__i386__
)

22 
	#ARCH_X86
 1

	)

23 #ñi‡
deföed
(
__M_ARM
Ë|| deföed(
__¨m__
)

24 
	#ARCH_ARM
 1

	)

25 #ñi‡
deföed
(
__Ørch64__
)

26 
	#ARCH_ARM64
 1

	)

31 #i‡
deföed
(
__˛™g__
)

32 
	#COMPILER_CLANG
 1

	)

33 #ñi‡
deföed
(
__GNUC__
)

34 
	#COMPILER_GCC
 1

	)

35 #ñi‡
deföe
(
__TINYC__
)

36 
	#COMPILER_TCC
 1

	)

41 #i‡
deföed
(
OS_WINDOWS
)

42 
	#CLEAR
 
	`sy°em
("˛s")

	)

43 #ñi‡
deföed
(
OS_LINUX
Ë|| deföed(
OS_MAC
)

44 
	#CLEAR
 
	`sy°em
("˛ór")

	)

46 
	#CLEAR
 0

	)

49 #i‡
deföed
(
COMPILER_CLANG
)

50 
	#FILE_NAME
 
__FILE_NAME__


	)

51 
	#thªadv¨
 
__thªad


	)

53 
	#FILE_NAME
 
__FILE__


	)

57 
	#globÆ
 

	)

58 
	#loˇl
 

	)

61 
	#c_lökage_begö
 "C" {

	)

62 
	#c_lökage_íd
 }

	)

63 
	#c_lökage
 "C"

	)

66 
	#AND
 &&

	)

67 
	#OR
 ||

	)

68 
	#NOT
 !

	)

69 
	#ñif
 

	)

71 
	#åue
 1

	)

72 
	#Ál£
 0

	)

74 
	#nuŒ
 0

	)

76 
uöt8_t
 
	tuöt8
;

77 
uöt16_t
 
	tuöt16
;

78 
uöt32_t
 
	tuöt32
;

79 
uöt64_t
 
	tuöt64
;

81 
öt8_t
 
	töt8
;

82 
öt16_t
 
	töt16
;

83 
öt32_t
 
	töt32
;

84 
öt64_t
 
	töt64
;

86 
uöt8
 
	tu8
;

87 
uöt16
 
	tu16
;

88 
uöt32
 
	tu32
;

89 
uöt64
 
	tu64
;

91 
öt8
 
	ti8
;

92 
öt16
 
	ti16
;

93 
öt32
 
	ti32
;

94 
öt64
 
	ti64
;

96 
	tÊﬂt32
;

97 
	tÊﬂt64
;

98 
öt32
 
	tboﬁ32
;

99 
size_t
 
	tmem‹y_ödex
;

101 
	tVoidFunc
();

104 
≠_öt
(
a
, 
b
);

105 
≠_Êﬂt
(
a
, 
b
);

106 
	#OVERLOADING


	)

107 #ifde‡ 
OVERLOADING


108 
	#≠
(
a
, 
b
Ë
	`_Gíîic
((a), \

109 : 
	`≠_öt
((
a
), (
b
)), \

110 : 
	`≠_Êﬂt
((
a
), (
b
)) \

111 )

	)

115 
	#Sw≠
(
a
, 
b
Ë((◊Ë^(b)), ((bË^◊)), (◊Ë^(b)))

	)

116 
	#Mö
(
a
, 
b
Ë(◊Ë< (bË? (aË: (b))

	)

117 
	#Max
(
a
, 
b
Ë(◊Ë> (bË? (aË: (b))

	)

118 
	#Limô
(
a
, 
x
, 
b
Ë((xË(xË< (aË? (aË: (xË> (bË? (bË: (x))

	)

119 
	#CœmpUp
(
a
, 
b
Ë
	`Max
◊, b)

	)

120 
	#CœmpDown
(
a
, 
b
Ë
	`Mö
◊, b)

	)

122 
	#AºayCou¡
(
a
Ë(◊)/(*◊)))

	)

123 
	#IsPowîOfTwo
(
n
Ë((“Ë& (“Ë- 1)Ë=0)

	)

125 
	#Kûobyãs
(
V
Ë((V)*1024LL)

	)

126 
	#Megabyãs
(
V
Ë(
	`Kûobyãs
(V)*1024LL)

	)

127 
	#Gigabyãs
(
V
Ë(
	`Megabyãs
(V)*1024LL)

	)

128 
	#Tîabyãs
(
V
Ë(
	`Gigabyãs
(V)*1024LL)

	)

130 
	#Sèãmít
(
S
Ëdo{ S }0)

	)

132 
	#Såögify_
(
S
Ë#S

	)

133 
	#Såögify
(
S
Ë
	`Såögify_
(S)

	)

134 
	#Glue_
(
A
,
B
ËA##
	)
B

135 
	#Glue
(
A
,
B
Ë
	`Glue_
(A,B)

	)

137 
	#I¡FromPå
(
p
Ë()((*Ì - (*)0)

	)

138 
	#PåFromI¡
(
n
Ë(*)((*)0 + (n))

	)

141 #i‡!
deföed
(
As£πBªak
)

142 
	~<°dlib.h
>

143 
	#As£πBªak
(
c
Ë{ 
	`Ârötf
(
°dîr
, "%s:%d: faûedás£πi⁄ '%s'\n.", 
__FILE__
, 
__LINE__
, #c); 
	`exô
(1); }

	)

147 
	#ENABLE_DEBUG


	)

148 #ifde‡ 
ENABLE_DEBUG


149 
	#As£π
(
c
Ëi‡(!(c)Ë{ 
	`Sèãmít
(
	`As£πBªak
(c);); }

	)

151 
	#Throw
(
msg
Ë{ 
	`Ârötf
(
°dîr
, "[*] <THROW>áàlöê%d: %s\n", 
__LINE__
, #msg); 
	`Sèãmít
(
	`As£πBªak
();); }

	)

153 
	~<°dlib.h
>

154 
	#ASSERT
(
c
,
msg
)

	)

155 
	#Throw
(
msg
Ë{ 
	`exô
(1); }

	)

	@src/base/math.c

2 
	~"def.h
"

3 
	~"m©h.h
"

4 
	~<m©h.h
>

6 
Êﬂt32


7 
	$InfFlﬂt32
()

9 uni⁄{ 
Êﬂt32
 
f
; 
uöt32
 
u
; } 
r
;

10 
r
.
u
 = 0x7f800000;

11 (
r
.
f
);

12 
	}
}

14 
Êﬂt32


15 
	$InfNeg©iveFlﬂt32
()

17 uni⁄{ 
Êﬂt32
 
f
; 
uöt32
 
u
; } 
r
;

18 
r
.
u
 = 0xff800000;

19 (
r
.
f
);

20 
	}
}

22 
Êﬂt64


23 
	$InfFlﬂt64
()

25 uni⁄{ 
Êﬂt64
 
f
; 
uöt64
 
u
; } 
r
;

26 
r
.
u
 = 0x7ff0000000000000;

27 (
r
.
f
);

28 
	}
}

30 
Êﬂt64


31 
	$InfNeg©iveFlﬂt64
()

33 uni⁄{ 
Êﬂt64
 
f
; 
uöt64
 
u
; } 
r
;

34 
r
.
u
 = 0xfff0000000000000;

35 (
r
.
f
);

36 
	}
}

38 
öt32


39 
	$PowI¡32
(
öt32
 
ba£
, i¡32 
exp
)

41 
öt32
 
ªs
 = 1;

44 i‡(
exp
 & 1Ë{ 
ªs
 *
ba£
; }

45 
exp
 >>= 1;

46 i‡(!
exp
) { ; }

47 
ba£
 *= base;

49 (
ªs
);

50 
	}
}

52 
Êﬂt32


53 
	$AbsFlﬂt32
(
Êﬂt32
 
x
)

55 uni⁄{ 
Êﬂt32
 
f
; 
uöt32
 
u
; } 
r
;

56 
r
.
f
 = 
x
;

57 
r
.
u
 &= 0x7fffffff;

58 (
r
.
f
);

59 
	}
}

61 
Êﬂt32


62 
	$AbsFlﬂt64
(
Êﬂt32
 
x
)

64 uni⁄{ 
Êﬂt32
 
f
; 
uöt32
 
u
; } 
r
;

65 
r
.
f
 = 
x
;

66 
r
.
u
 &= 0x7fffffffffffffff;

67 (
r
.
f
);

68 
	}
}

71 
Êﬂt32


72 
	$SqπFlﬂt32
(
Êﬂt32
 
x
)

75 
öt32
 
°¨t
 = 0, 
íd
 = 
x
;

76 
öt32
 
mid
;

78 
Êﬂt32
 
ªs
;

80 
°¨t
 <
íd
)

82 
mid
 = (
°¨t
 + 
íd
) / 2;

84 i‡(
mid
 * mid =
x
)

86 
ªs
 = 
mid
;

90 i‡(
mid
 * mid < 
x
)

92 
ªs
 = 
°¨t
;

94 
°¨t
 = 
mid
 + 1;

96 { 
íd
 = 
mid
 - 1; }

99 
Êﬂt32
 
öc
 = 0.1f;

100 
öt8
 
i
 = 0; i < 5; i++)

102 
ªs
 *Ñe†<
x
)

104 
ªs
 +
öc
;

107 
ªs
 =Ñe†- 
öc
;

108 
öc
 = inc / 10;

111 (
ªs
);

112 
	}
}

116 
Êﬂt32


117 
	$SöFlﬂt32
(
Êﬂt32
 
x
)

120  
	`söf
(
x
);

121 
	}
}

123 
Êﬂt32


124 
	$CosFlﬂt32
(
Êﬂt32
 
x
)

126  
	`cosf
(
x
);

127 
	}
}

129 
Êﬂt32


130 
	$T™Flﬂt32
(
Êﬂt32
 
x
)

132  
	`ènf
(
x
);

133 
	}
}

135 
Êﬂt64


136 
	$SqπFlﬂt64
(
Êﬂt64
 
x
)

139 
öt64
 
°¨t
 = 0, 
íd
 = 
x
;

140 
öt64
 
mid
;

142 
Êﬂt64
 
ªs
;

144 
°¨t
 <
íd
)

146 
mid
 = (
°¨t
 + 
íd
) / 2;

148 i‡(
mid
 * mid =
x
)

150 
ªs
 = 
mid
;

154 i‡(
mid
 * mid < 
x
)

156 
ªs
 = 
°¨t
;

158 
°¨t
 = 
mid
 + 1;

160 { 
íd
 = 
mid
 - 1; }

163 
Êﬂt64
 
öc
 = 0.1f;

164 
öt8
 
i
 = 0; i < 5; i++)

166 
ªs
 *Ñe†<
x
)

168 
ªs
 +
öc
;

171 
ªs
 =Ñe†- 
öc
;

172 
öc
 = inc / 10;

175 (
ªs
);

176 
	}
}

178 
Êﬂt64


179 
	$SöFlﬂt64
(
Êﬂt64
 
x
)

181  
	`söf
(
x
);

182 
	}
}

184 
Êﬂt64


185 
	$CosFlﬂt64
(
Êﬂt64
 
x
)

187  
	`cosf
(
x
);

188 
	}
}

190 
Êﬂt64


191 
	$T™Flﬂt64
(
Êﬂt64
 
x
)

193  
	`ènf
(
x
);

194 
	}
}

196 
Êﬂt32


197 
	$Lîp
(
Êﬂt32
 
a
, flﬂt32 
t
, flﬂt32 
b
)

199 
Êﬂt32
 
ªs
 = 
a
 + (
b
 -áË* 
t
;

201 (
ªs
);

202 
	}
}

204 
Êﬂt32


205 
	$U∆îp
(
Êﬂt32
 
a
, flﬂt32 
x
, flﬂt32 
b
)

207 
Êﬂt32
 
ªs
 = 0.f;

208 i‡(
a
 !
b
)

210 
ªs
 = (
x
 - 
a
Ë/ (
b
 -á);

213 (
ªs
);

214 
	}
}

	@src/base/math.h

1 #i‚de‡
BASE_MATH_H


2 
	#BASE_MATH_H


	)

4 
	~<°dio.h
>

5 
	~"def.h
"

6 
	~<m©h.h
>

9 #¥agm®
GCC
 
dügno°ic
 
push


10 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wunused-variable"

11 
globÆ
 
öt8
 
	göt8_mö
 = (int8) 0x00;

12 
globÆ
 
öt16
 
	göt16_mö
 = (int16) 0x0000;

13 
globÆ
 
öt32
 
	göt32_mö
 = (int32) 0x00000000;

14 
globÆ
 
öt64
 
	göt64_mö
 = (int64) 0x0000000000000000ll;

16 
globÆ
 
öt8
 
	göt8_max
 = (int8) 0x8f;

17 
globÆ
 
öt16
 
	göt16_max
 = (int16) 0x7fff;

18 
globÆ
 
öt32
 
	göt32_max
 = (int32) 0x7fffffff;

19 
globÆ
 
öt64
 
	göt64_max
 = (int64) 0x7fffffffffffffffll;

21 
globÆ
 
uöt8
 
	guöt8_mö
 = (uint8) 0x00;

22 
globÆ
 
uöt16
 
	guöt16_mö
 = (uint16) 0x0000;

23 
globÆ
 
uöt32
 
	guöt32_mö
 = (uint32) 0x00000000;

24 
globÆ
 
uöt64
 
	guöt64_mö
 = (uint64) 0x0000000000000000llu;

26 
globÆ
 
uöt8
 
	guöt8_max
 = (uint8) 0x8f;

27 
globÆ
 
uöt16
 
	guöt16_max
 = (uint16) 0x7fff;

28 
globÆ
 
uöt32
 
	guöt32_max
 = (uint32) 0x7fffffff;

29 
globÆ
 
uöt64
 
	guöt64_max
 = (uint64) 0x7fffffffffffffffllu;

31 
globÆ
 
Êﬂt32
 
	gÊﬂt32_max
 = (float32) 1.1920929e-7f;

32 
globÆ
 
Êﬂt32
 
	gÊﬂt32_pi
 = 3.14159265359f;

33 
globÆ
 
Êﬂt32
 
	gÊﬂt32_e
 = 2.71828182846f;

35 
globÆ
 
Êﬂt64
 
	gÊﬂt64_max
 = (float64) 2.220446e-16f;

36 
globÆ
 
Êﬂt64
 
	gÊﬂt64_pi
 = 3.14159265359;

37 
globÆ
 
Êﬂt64
 
	gÊﬂt64_e
 = 2.71828182846;

38 #¥agm®
GCC
 
dügno°ic
 
p›


41 
Êﬂt32
 
InfFlﬂt32
();

42 
Êﬂt32
 
InfNeg©iveFlﬂt32
();

43 
Êﬂt64
 
InfFlﬂt64
();

44 
Êﬂt64
 
InfNeg©iveFlﬂt64
();

46 
öt32
 
PowI¡32
(öt32 
ba£
, i¡32 
exp
);

48 
Êﬂt32
 
AbsFlﬂt32
(Êﬂt32 
x
);

49 
Êﬂt32
 
AbsFlﬂt64
(Êﬂt32 
x
);

51 
Êﬂt32
 
SqπFlﬂt32
(Êﬂt32 
x
);

52 
Êﬂt64
 
SqπFlﬂt64
(Êﬂt64 
x
);

54 
Êﬂt32
 
SöFlﬂt32
(Êﬂt32 
x
);

55 
Êﬂt32
 
CosFlﬂt32
(Êﬂt32 
x
);

56 
Êﬂt32
 
T™Flﬂt32
(Êﬂt32 
x
);

58 
Êﬂt64
 
SöFlﬂt64
(Êﬂt64 
x
);

59 
Êﬂt64
 
CosFlﬂt64
(Êﬂt64 
x
);

60 
Êﬂt64
 
T™Flﬂt64
(Êﬂt64 
x
);

62 
Êﬂt32
 
Lîp
(Êﬂt32 
a
, flﬂt32 
t
, flﬂt32 
b
);

63 
Êﬂt32
 
U∆îp
(Êﬂt32 
a
, flﬂt32 
x
, flﬂt32 
b
);

	@src/base/random.c

2 
	~"øndom.h
"

4 
ölöe
 
R™domSîõs


5 
	$R™domSìd
(
uöt32
 
vÆue
)

7 
R™domSîõs
 
£rõs
;

8 
£rõs
.
ödex
 = 
vÆue
 * 1103515245 + 
R™domSÆt
;

10 (
£rõs
);

11 
	}
}

13 
ölöe
 
uöt32


14 
	$R™domNextI¡
(
R™domSîõs
* 
£rõs
)

17 
uöt32
 
ªs
 = (uöt32)(
£rõs
->
ödex
/65536);

18 
£rõs
->
ödex
 *1103515245 + 
R™domSÆt
;

20 (
ªs
);

21 
	}
}

23 
ölöe
 
uöt32


24 
	$R™domChoi˚
(
R™domSîõs
* 
£rõs
, 
uöt32
 
N
)

28 
uöt32
 
ªs
 = (
	`R™domNextI¡
(
£rõs
Ë% 
N
);

30 (
ªs
);

31 
	}
}

33 
ölöe
 
Êﬂt32


34 
	$R™domUnû©îÆ
(
R™domSîõs
* 
£rõs
)

37 
Êﬂt32
 
div
 = 1.0‡/ (Êﬂt32)
MaxR™domNumbî
;

38 
Êﬂt32
 
ªs
 = 
div
 * (Êﬂt32)
	`R™domNextI¡
(
£rõs
);

40 (
ªs
);

41 
	}
}

43 
ölöe
 
Êﬂt32


44 
	$R™domBû©îÆ
(
R™domSîõs
* 
£rõs
)

47 
Êﬂt32
 
ªs
 = 2.0‡* 
	`R™domUnû©îÆ
(
£rõs
) - 1.0f;

49 (
ªs
);

50 
	}
}

52 
ölöe
 
Êﬂt32


53 
	$R™domBëwìn
(
R™domSîõs
* 
£rõs
, 
Êﬂt32
 
mö
, flﬂt32 
max
)

57 
Êﬂt32
 
ªs
 = 
	`Lîp
(
mö
, 
	`R™domUnû©îÆ
(
£rõs
), 
max
);

59 (
ªs
);

60 
	}
}

	@src/base/random.h

8 #i‚de‡
RANDOM_H


9 
	#RANDOM_H


	)

11 
	~"def.h
"

12 
	~"m©h.h
"

14 c⁄° 
uöt32
 
	gMaxR™domNumbî
 = 32768;

15 c⁄° 
uöt32
 
	gR™domSÆt
 = 12345;

17 
	søndom_£rõs
 {

18 
uöt32
 
	mödex
;

19 } 
	tR™domSîõs
;

21 
R™domSîõs
 
R™domSìd
(
uöt32
 
vÆue
);

22 
uöt32
 
R™domNextI¡
(
R™domSîõs
* 
£rõs
);

23 
uöt32
 
R™domChoi˚
(
R™domSîõs
* 
£rõs
, uöt32 
N
);

24 
Êﬂt32
 
R™domUnû©îÆ
(
R™domSîõs
* 
£rõs
);

25 
Êﬂt32
 
R™domBû©îÆ
(
R™domSîõs
* 
£rõs
);

26 
Êﬂt32
 
R™domBëwìn
(
R™domSîõs
* 
£rõs
, flﬂt32 
mö
, flﬂt32 
max
);

	@src/base/string.c

2 
	~"m©h.h
"

3 
	~"°rög.h
"

4 
	~<°d¨g.h
>

7 
	$Mem‹yC›y
(*
d°
, *
§c
, 
mem‹y_ödex
 
size
)

9 
uöt8
 *
cd
 = (uöt8*)
d°
;

10 
uöt8
 *
cs
 = (uöt8*)
§c
;

11 
mem‹y_ödex
 
i
 = 0; i < 
size
; i++)

13 *(
cd
++Ë*(
cs
++);

15 
	}
}

17 
ölöe
 
mem‹y_ödex


18 
	$SåögLígth
(
uöt8
 *
°r
)

20 
mem‹y_ödex
 
size
 = 0;

22 *(
°r
 + 
size
) != '\0') { size++; }

24 (
size
);

25 
	}
}

27 
ölöe
 
uöt8


28 
	$Ch¨Lowî
(
uöt8
 
c
)

30 i‡('A' <
c
 && c <= 'Z') { c = c - ('A' - 'a'); }

31 (
c
);

32 
	}
}

34 
ölöe
 
uöt8


35 
	$Ch¨Uµî
(
uöt8
 
c
)

37 i‡('a' <
c
 && c <= 'z') { c = c - ('a' - 'A'); }

38 (
c
);

39 
	}
}

43 
uöt8
*

44 
	$SåögNewLí
(
SåögD©a
* 
sd
, *
°r
, 
mem‹y_ödex
 
size
)

46 
sd
->
buf
 = (
°r
Ë? (
uöt8
 *)(str) : (uint8 *)"\0";

47 
sd
->
size
 = 
	`CœmpDown
(size, 
	`SåögLígth
((
uöt8
 *)
°r
));

50 (
sd
->
buf
);

51 
	}
}

53 
uöt8
*

54 
	$SåögNew
(
SåögD©a
* 
sd
, *
°r
)

56 
uöt8
 *
ªs
 = 
	`SåögNewLí
(
sd
, 
°r
, 
	`SåögLígth
(str));

58 (
ªs
);

59 
	}
}

61 
uöt8
*

62 
	$SåögNewR™ge
(
SåögD©a
 *
sd
, 
uöt8
 *
fú°
, uöt8 *
œ°_›ti⁄Æ
)

64 
sd
->
buf
 = 
fú°
;

65 
sd
->
size
 = (
mem‹y_ödex
)(
œ°_›ti⁄Æ
 - 
fú°
);

66 (
sd
->
buf
);

67 
	}
}

83 
	$SåögSli˚
(
SåögD©a
 *
d°
, SåögD©®
§c
, 
mem‹y_ödex
 
fú°
, mem‹y_ödex 
œ°
)

86 
mem‹y_ödex
 
ídSizeCœm≥d
 = 
	`CœmpDown
(
œ°
 + 1, 
§c
.
size
);

87 
mem‹y_ödex
 
°¨tSizeCœm≥d
 = 
	`CœmpDown
(
fú°
, 
ídSizeCœm≥d
);

88 
	`SåögNewLí
(
d°
, (
§c
.
buf
 + 
°¨tSizeCœm≥d
), 
ídSizeCœm≥d
 - startSizeClamped);

89 
	}
}

95 
	$SåögPªfix
(
SåögD©a
 *
d°
, SåögD©®
§c
, 
mem‹y_ödex
 
size
)

97 
mem‹y_ödex
 
sizeCœm≥d
 = 
	`CœmpDown
(
size
, 
§c
.size);

98 
	`SåögNewLí
(
d°
, 
§c
.
buf
, 
sizeCœm≥d
);

99 
	}
}

103 
	$SåögPo°fix
(
SåögD©a
 *
d°
, SåögD©®
§c
, 
mem‹y_ödex
 
size
)

105 
mem‹y_ödex
 
sizeCœm≥d
 = 
	`CœmpDown
(
size
, 
§c
.size);

106 
mem‹y_ödex
 
°¨tPos
 = 
§c
.
size
 - 
sizeCœm≥d
;

107 
	`SåögNewLí
(
d°
, (
§c
.
buf
 + 
°¨tPos
), 
sizeCœm≥d
);

108 
	}
}

112 
	$SåögSkùFr⁄t
(
SåögD©a
 *
d°
, SåögD©®
§c
, 
mem‹y_ödex
 
cou¡
)

114 
mem‹y_ödex
 
cou¡Cœm≥d
 = 
	`CœmpDown
(
cou¡
, 
§c
.
size
);

115 
	`SåögNewLí
(
d°
, (
§c
.
buf
 + 
cou¡Cœm≥d
), src.
size
);

116 
	}
}

120 
	$SåögSkùBack
(
SåögD©a
 *
d°
, SåögD©®
§c
, 
mem‹y_ödex
 
cou¡
)

122 
mem‹y_ödex
 
cou¡Cœm≥d
 = 
	`CœmpDown
(
§c
.
size
, 
cou¡
);

123 
mem‹y_ödex
 
ídPos
 = 
§c
.
size
 - 
cou¡Cœm≥d
;

124 
	`SåögNewLí
(
d°
, 
§c
.
buf
, 
ídPos
);

125 
	}
}

128 
	$SåögPröt_
(
SåögD©a
 
s
, 
FILE
 *
°ªam
)

130 
s
.
size
--)

132 
	`putc
(*(
s
.
buf
++), 
°ªam
);

134 
	}
}

137 
	$SåögPröt
(
SåögD©a
 
s
)

139 
	`SåögPröt_
(
s
, 
°dout
);

140 
	}
}

143 
	$SåögPröä
(
SåögD©a
 
s
)

145 
	`SåögPröt
(
s
);

146 
	`putc
('\n', 
°dout
);

147 
	}
}

150 
	$SåögLi°Pröt_
(
SåögLi°
 
l
, 
FILE
 *
°ªam
, 
íd
)

152 i‡(
l
.
fú°
 =l.
œ°
)

154 i‡(
l
.
fú°
)

156 
	`SåögPröt_
(
l
.
fú°
->
°r
, 
°ªam
);

157 
	`putc
(
íd
, 
°ªam
);

162 
SåögNode
 *
cuºít
 = 
l
.
fú°
;

163 
cuºít
 !
NULL
;

164 
cuºít
 = cuºít->
√xt
)

166 
	`SåögPröt_
(
cuºít
->
°r
, 
°ªam
);

167 
	`putc
(
íd
, 
°ªam
);

170 
	}
}

173 
	$SåögLi°Pröt
(
SåögLi°
 
l
)

175 
	`SåögLi°Pröt_
(
l
, 
°dout
, 
nuŒ
);

176 
	}
}

179 
	$SåögLi°Pröä
(
SåögLi°
 
l
)

181 
	`SåögLi°Pröt_
(
l
, 
°dout
, '\n');

182 
	`putc
('\n', 
°dout
);

183 
	}
}

186 
	$SåögLi°Pröén
(
SåögLi°
 
l
)

188 
	`SåögLi°Pröt
(
l
);

189 
	`putc
('\n', 
°dout
);

190 
	}
}

193 
	$SåögLi°M≠
(
SåögLi°
 
l
, (*
‚
)(
SåögD©a
))

195 i‡(
l
.
fú°
 =l.
œ°
)

197 i‡(
l
.
fú°
)

199 
	`‚
(
l
.
fú°
->
°r
);

204 
SåögNode
 *
cuºít
 = 
l
.
fú°
;

205 
cuºít
 !
NULL
;

206 
cuºít
 = cuºít->
√xt
)

208 
	`‚
(
cuºít
->
°r
);

211 
	}
}

216 
	$SåögLi°Push_
(
SåögLi°
 *
li°
, 
SåögD©a
 
sd
, 
SåögNode
 *
node_Ælo˚d
)

218 
node_Ælo˚d
->
°r
 = 
sd
;

220 i‡(
li°
->
fú°
 =li°->
œ°
)

223 i‡(!
li°
->
fú°
)

225 
li°
->
fú°
 = 
node_Ælo˚d
;

226 
li°
->
œ°
 = 
node_Ælo˚d
;

230 
li°
->
fú°
->
√xt
 = 
node_Ælo˚d
;

231 
li°
->
œ°
 = 
node_Ælo˚d
;

236 
SåögNode
 *
cuºít
 = 
li°
->
fú°
;

237 
cuºít
 !
li°
->
œ°
)

239 
cuºít
 = cuºít->
√xt
;

241 
cuºít
->
√xt
 = 
node_Ælo˚d
;

242 
li°
->
œ°
 = 
cuºít
->
√xt
;

244 
li°
->
nodeCou¡
++;

245 
li°
->
size
 +
sd
.size;

246 
	}
}

249 
	$SåögLi°Push
(
Aª«
 *
¨ía
, 
SåögLi°
 *
li°
, 
SåögD©a
 
sd
)

251 
SåögNode
* 
node
 = 
	`PushSåu˘
(
¨ía
, StringNode);

252 
	`SåögLi°Push_
(
li°
, 
sd
, 
node
);

253 
	}
}

255 
SåögD©a


256 
	$SåögLi°Joö
(
Aª«
 *
¨ía_a°mp
, 
SåögLi°
 *
li°
, 
SåögJoö
 *
joö_›ti⁄Æ
)

258 
loˇl
 
SåögJoö
 
joö_em±y
 = {};

259 
SåögJoö
 *
joö
 = 
joö_›ti⁄Æ
;

260 i‡(!
joö
)

262 
joö
 = &
joö_em±y
;

265 
mem‹y_ödex
 
size
 = (
joö
->
¥e
.size +

266 
joö
->
po°
.
size
 +

267 
joö
->
mid
.
size
 * (
li°
->
nodeCou¡
 - 1) +

268 
li°
->
size
);

270 
Aª«Temp
 
tmpAª«
 = 
	`Aª«S¸©chCª©e
(
¨ía_a°mp
);

272 
uöt8
 *
°r
 = 
	`PushAºay
(
¨ía_a°mp
, uöt8, 
size
 + 1);

273 
uöt8
 *
±r
 = 
°r
;

276 
	`Mem‹yC›y
(
±r
, 
joö
->
¥e
.
buf
, joö->¥e.
size
);

277 
±r
 +
joö
->
¥e
.
size
;

280 
boﬁ32
 
is_mid
 = 0;

281 
SåögNode
 *
node
 = 
li°
->
fú°
;

282 
node
 != 0;

283 
node
 =Çode->
√xt
)

285 i‡(
is_mid
)

287 
	`Mem‹yC›y
(
±r
, 
joö
->
mid
.
buf
, joö->mid.
size
);

288 
±r
 +
joö
->
mid
.
size
;

291 
	`Mem‹yC›y
(
±r
, 
node
->
°r
.
buf
,Çode->°r.
size
);

292 
±r
 +
node
->
°r
.
size
;

294 
is_mid
 = 1;

298 
	`Mem‹yC›y
(
±r
, 
joö
->
po°
.
buf
, joö->po°.
size
);

299 
±r
 +
joö
->
po°
.
size
;

301 *
±r
 = 0;

302 
SåögD©a
 
ªs
 = {0};

303 
	`SåögNewLí
(&
ªs
, 
°r
, 
size
);

304 
	`Aª«S¸©chFªe
(
tmpAª«
);

305 (
ªs
);

306 
	}
}

308 
SåögLi°


309 
	$SåögS∂ô
(
Aª«
 *
¨ía
, 
SåögD©a
 
sd
, *
•lô_evîy_ch¨s
)

311 
SåögLi°
 
ªs
 = {0};

312 
SåögD©a
 
buf
 = {0};

313 
mem‹y_ödex
 
œ°S∂ôIndex
 = 0;

314 
uöt32
 
cou¡
 = 
	`SåögLígth
((
uöt8
 *)
•lô_evîy_ch¨s
);

316 
mem‹y_ödex
 
p
 = 0;Ö < 
sd
.
size
;Ö++)

318 
uöt8
 
byã
 = *(
sd
.
buf
 + 
p
);

319 
uöt32
 
i
 = 0; i < 
cou¡
; i++)

321 i‡(
byã
 =
•lô_evîy_ch¨s
[
i
])

323 
	`SåögSli˚
(&
buf
, 
sd
, 
œ°S∂ôIndex
, 
p
 - 1);

324 
	`SåögLi°Push
(
¨ía
, &
ªs
, 
buf
);

325 
œ°S∂ôIndex
 = 
p
 + 1;

330 i‡(
œ°S∂ôIndex
 < 
sd
.
size
)

332 
	`SåögSkùFr⁄t
(&
buf
, 
sd
, 
œ°S∂ôIndex
);

333 
	`SåögLi°Push
(
¨ía
, &
ªs
, 
buf
);

336 (
ªs
);

337 
	}
}

339 
SåögD©a


340 
	$SåögPushfv
(
Aª«
 *
¨ía_a°mp
, *
fmt
, 
va_li°
 
¨gs
)

342 
va_li°
 
¨gs2
;

343 
	`va_c›y
(
¨gs2
, 
¨gs
);

345 
mem‹y_ödex
 
bufSize
 = 1024;

346 
Aª«Temp
 
tmp
 = 
	`Aª«S¸©chCª©e
(
¨ía_a°mp
);

348 
uöt8
 *
buf
 = 
	`PushAºay
(
¨ía_a°mp
, uöt8, 
bufSize
);

349 
mem‹y_ödex
 
a˘uÆSize
 = 
	`v¢¥ötf
((*)
buf
, 
bufSize
, 
fmt
, 
¨gs
);

351 
SåögD©a
 
ªs
 = {0};

352 i‡(
a˘uÆSize
 < 
bufSize
)

355 
	`SåögNewLí
(&
ªs
, 
buf
, 
a˘uÆSize
);

360 
uöt8
 *
fixedBuf
 = 
	`PushAºay
(
¨ía_a°mp
, uöt8, 
a˘uÆSize
 + 1);

361 
mem‹y_ödex
 
föÆSize
 = 
	`v¢¥ötf
((*)
fixedBuf
, 
a˘uÆSize
 + 1, 
fmt
, 
¨gs2
);

362 
	`SåögNewLí
(&
ªs
, 
fixedBuf
, 
föÆSize
);

365 
	`va_íd
(
¨gs2
);

367 
	`Aª«S¸©chFªe
(
tmp
);

368 (
ªs
);

369 
	}
}

371 
SåögD©a


372 
	$SåögPushf
(
Aª«
 *
¨ía_a°mp
, *
fmt
, ...)

374 
va_li°
 
¨gs
;

375 
	`va_°¨t
(
¨gs
, 
fmt
);

376 
SåögD©a
 
ªs
 = 
	`SåögPushfv
(
¨ía_a°mp
, 
fmt
, 
¨gs
);

377 
	`va_íd
(
¨gs
);

378 (
ªs
);

379 
	}
}

382 
	$SåögLi°Pushf
(
Aª«
 *
¨ía_a°mp
, 
SåögLi°
 *
li°
, *
fmt
, ...)

384 
va_li°
 
¨gs
;

385 
	`va_°¨t
(
¨gs
, 
fmt
);

386 
SåögD©a
 
°r
 = 
	`SåögPushfv
(
¨ía_a°mp
, 
fmt
, 
¨gs
);

387 
	`va_íd
(
¨gs
);

388 
	`SåögLi°Push
(
¨ía_a°mp
, 
li°
, 
°r
);

389 
	}
}

391 
boﬁ32


392 
	$SåögM©ch
(
SåögD©a
 
a
, SåögD©®
b
, 
SåögM©chFœgs
 
Êags_›ti⁄Æ
)

394 
boﬁ32
 
ªs
 = 
Ál£
;

396 i‡(
a
.
size
 =
b
.size)

398 
ªs
 = 
åue
;

399 
boﬁ32
 
ˇ£_£ns
 = ((
Êags_›ti⁄Æ
 & 
SåögM©chFœg_Ca£Sísôive
) != 0);

400 
mem‹y_ödex
 
i
 = 0;

401 
i
 < 
a
.
size
;

402 
i
++)

404 
uöt8
 
ac
 = 
a
.
buf
[
i
];

405 
uöt8
 
bc
 = 
b
.
buf
[
i
];

406 i‡(!
ˇ£_£ns
)

408 
ac
 = 
	`Ch¨Uµî
(ac);

409 
bc
 = 
	`Ch¨Uµî
(bc);

411 i‡(
ac
 !
bc
)

413 
ªs
 = 
Ál£
;

419 (
ªs
);

420 
	}
}

423 
uöt32


424 
	$SåögDecodeUTF8
(
uöt32
 *
d°
, 
uöt8
 *
§c
)

430 *
d°
 = 0;

431 
uöt32
 
ªs
 = 0;

433 i‡(
§c
[0] <= 0x7f)

436 *
d°
 = 
§c
[0];

437 
ªs
 = 1;

439 i‡((
§c
[0] & 0xE0) == 0xC0)

441 *
d°
 = (((
§c
[0] & 0x1F) << 6) |

442 (
§c
[1] & 0x3F));

443 
ªs
 = 2;

445 i‡((
§c
[0] & 0xF0) == 0xE0)

447 *
d°
 = (((
§c
[0] & 0x0F) << 12) |

448 ((
§c
[1] & 0x3F) << 6) |

449 (
§c
[2] & 0x3F));

450 
ªs
 = 3;

453 i‡((
§c
[0] & 0xF8) == 0xF0)

455 *
d°
 = (((
§c
[0] & 0x07) << 18) |

456 ((
§c
[1] & 0x3F) << 12) |

457 ((
§c
[2] & 0x3F) << 6) |

458 (
§c
[3] & 0x3F));

459 
ªs
 = 4;

461 (
ªs
);

462 
	}
}

464 
uöt32


465 
	$SåögEncodeUTF8
(
uöt8
 *
d°
, 
uöt32
 
codïoöt
)

472 
uöt32
 
ªs
 = 0;

473 i‡(
codïoöt
 <= 0x7f)

475 
d°
[0] = 
codïoöt
;

477 
ªs
 = 1;

479 i‡(
codïoöt
 <= 0x7ff)

481 
d°
[0] = 0xC0 | (
codïoöt
 >> 6);

482 
d°
[1] = 0x80 | (
codïoöt
 & 0x3F);

484 
ªs
 = 2;

486 i‡(
codïoöt
 <= 0xffff)

488 
d°
[0] = 0xE0 | (
codïoöt
 >> 12);

489 
d°
[1] = 0x80 | ((
codïoöt
 >> 6) & 0x3F);

490 
d°
[2] = 0x80 | (
codïoöt
 & 0x3F);

492 
ªs
 = 3;

494 i‡(
codïoöt
 <= 0x10ffff)

496 
d°
[0] = 0xF0 | (
codïoöt
 >> 18);

497 
d°
[1] = 0x80 | ((
codïoöt
 >> 12) & 0x3F);

498 
d°
[2] = 0x80 | ((
codïoöt
 >> 6) & 0x3F);

499 
d°
[3] = 0x80 | (
codïoöt
 & 0x3F);

501 
ªs
 = 4;

503 (
ªs
);

504 
	}
}

506 
uöt32


507 
	$SåögDecodeUTF16
(
uöt32
 *
d°
, 
uöt16
 *
§c
)

509 *
d°
 = 0;

510 
uöt32
 
ªs
 = 0;

511 
uöt16
 
x
 = 
§c
[0];

512 i‡(
x
 < 0xD800 || 0xDFFF < x)

514 *
d°
 = 
x
;

515 
ªs
 = 1;

519 
uöt16
 
y
 = 
§c
[1];

520 i‡(0xD800 <
x
 && x < 0xDC00 &&

521 0xDC00 <
y
 && y < 0xE000)

523 
uöt16
 
xj
 = 
x
 - 0xD800;

524 
uöt16
 
yj
 = 
y
 - 0xDC00;

525 
uöt32
 
xy
 = (
xj
 << 10Ë| 
yj
;

526 *
d°
 = 
xy
 + 0x10000;

527 
ªs
 = 2;

530 (
ªs
);

531 
	}
}

533 
uöt32


534 
	$SåögEncodeUTF16
(
uöt16
 *
d°
, 
uöt32
 
codïoöt
)

536 
uöt32
 
ªs
 = 0;

537 i‡(
codïoöt
 < 0x10000)

539 
d°
[0] = 
codïoöt
;

540 
ªs
 = 1;

544 
uöt32
 
˝j
 = 
codïoöt
 - 0x10000;

545 
d°
[0] = (
˝j
 >> 10) + 0xD800;

546 
d°
[1] = (
˝j
 & 0x3FF) + 0xDC00;

547 
ªs
 = 2;

549 (
ªs
);

550 
	}
}

554 
Såög32D©a


555 
	$SåögC⁄vît32
(
Aª«
 *
¨ía
, 
SåögD©a
 
sd
)

557 
mem‹y_ödex
 
Æloˇti⁄Size
 = 
sd
.
size
 + 1;

559 
uöt32
 *
mem
 = 
	`PushAºay
(
¨ía
, uöt32, 
Æloˇti⁄Size
);

561 
uöt32
 *
d±r
 = 
mem
;

562 
uöt8
 *
±r
 = 
sd
.
buf
;

563 
uöt8
 *
íd
 = 
sd
.
buf
 + sd.
size
;

564 
±r
 < 
íd
)

566 
uöt32
 
size
 = 
	`SåögDecodeUTF8
(
d±r
, 
±r
);

567 
d±r
 = d±∏+ 
size
;

568 
±r
++;

570 *
d±r
 = 0;

573 
mem‹y_ödex
 
°rögSize
 = (mem‹y_ödex)(
d±r
 - 
mem
);

574 
mem‹y_ödex
 
unu£dSize
 = 
Æloˇti⁄Size
 - 
°rögSize
 - 1;

576 
	`Aª«P›
(
¨ía
, 
unu£dSize
 * (*
mem
));

578 
Såög32D©a
 
ªs
 = {
°rögSize
, 
mem
};

579 (
ªs
);

580 
	}
}

582 
SåögD©a


583 
	$Såög32C⁄vît
(
Aª«
 *
¨ía
, 
Såög32D©a
 
sd
)

585 
mem‹y_ödex
 
Æloˇti⁄Size
 = 
sd
.
size
 * 4 + 1;

587 
uöt8
 *
mem
 = 
	`PushAºay
(
¨ía
, uöt8, 
Æloˇti⁄Size
);

589 
uöt8
 *
d±r
 = 
mem
;

590 
uöt32
 *
±r
 = 
sd
.
buf
;

591 
uöt32
 *
íd
 = 
sd
.
buf
 + sd.
size
;

592 
±r
 < 
íd
)

594 
uöt32
 
size
 = 
	`SåögEncodeUTF8
(
d±r
, *
±r
);

595 
d±r
 = d±∏+ 
size
;

596 
±r
++;

598 *
d±r
 = 0;

600 
mem‹y_ödex
 
°rögSize
 = (mem‹y_ödex)(
d±r
 - 
mem
);

601 
mem‹y_ödex
 
unu£dSize
 = 
Æloˇti⁄Size
 - 
°rögSize
 - 1;

603 
	`Aª«P›
(
¨ía
, 
unu£dSize
 * (*
mem
));

605 
SåögD©a
 
ªs
 = {
°rögSize
, 
mem
};

606 (
ªs
);

607 
	}
}

610 
Såög16D©a


611 
	$SåögC⁄vît16
(
Aª«
 *
¨ía
, 
SåögD©a
 
sd
)

613 
mem‹y_ödex
 
Æloˇti⁄Size
 = 
sd
.
size
 * 2 + 1;

615 
uöt16
 *
mem
 = 
	`PushAºay
(
¨ía
, uöt16, 
Æloˇti⁄Size
);

617 
uöt16
 *
d±r
 = 
mem
;

618 
uöt8
 *
±r
 = 
sd
.
buf
;

619 
uöt8
 *
íd
 = 
sd
.
buf
 + sd.
size
;

620 
±r
 < 
íd
)

623 
uöt32
 
buf
;

624 
	`SåögDecodeUTF8
(&
buf
, 
±r
);

625 
uöt32
 
size
 = 
	`SåögEncodeUTF16
(
d±r
, 
buf
);

626 
d±r
 = d±∏+ 
size
;

627 
±r
++;

629 *
d±r
 = 0;

632 
mem‹y_ödex
 
°rögSize
 = (mem‹y_ödex)(
d±r
 - 
mem
);

633 
mem‹y_ödex
 
unu£dSize
 = 
Æloˇti⁄Size
 - 
°rögSize
 - 1;

635 
	`Aª«P›
(
¨ía
, 
unu£dSize
 * (*
mem
));

637 
Såög16D©a
 
ªs
 = {
°rögSize
, 
mem
};

638 (
ªs
);

639 
	}
}

642 
SåögD©a


643 
	$Såög16C⁄vît
(
Aª«
 *
¨ía
, 
Såög16D©a
 
sd
)

645 
mem‹y_ödex
 
Æloˇti⁄Size
 = 
sd
.
size
 * 3 + 1;

647 
uöt8
 *
mem
 = 
	`PushAºay
(
¨ía
, uöt8, 
Æloˇti⁄Size
);

649 
uöt8
 *
d±r
 = 
mem
;

650 
uöt16
 *
±r
 = 
sd
.
buf
;

651 
uöt16
 *
íd
 = 
sd
.
buf
 + sd.
size
;

652 
±r
 < 
íd
)

654 
uöt32
 
buf
;

655 
	`SåögDecodeUTF16
(&
buf
, 
±r
);

656 
uöt32
 
size
 = 
	`SåögEncodeUTF8
(
d±r
, 
buf
);

657 
d±r
 = d±∏+ 
size
;

658 
±r
++;

660 *
d±r
 = 0;

662 
mem‹y_ödex
 
°rögSize
 = (mem‹y_ödex)(
d±r
 - 
mem
);

663 
mem‹y_ödex
 
unu£dSize
 = 
Æloˇti⁄Size
 - 
°rögSize
 - 1;

665 
	`Aª«P›
(
¨ía
, 
unu£dSize
 * (*
mem
));

667 
SåögD©a
 
ªs
 = {
°rögSize
, 
mem
};

668 (
ªs
);

669 
	}
}

	@src/base/string.h

1 #i‚de‡
STRING_H


2 
	#STRING_H


	)

5 
	~"¨ía.h
"

7 
	sSåögD©a
 {

11 
mem‹y_ödex
 
	msize
;

12 
uöt8
 *
	mbuf
;

13 } 
	tSåögD©a
;

15 
	sSåög16D©a
 {

16 
mem‹y_ödex
 
	msize
;

17 
uöt16
 *
	mbuf
;

18 } 
	tSåög16D©a
;

20 
	sSåög32D©a
 {

21 
mem‹y_ödex
 
	msize
;

22 
uöt32
 *
	mbuf
;

23 } 
	tSåög32D©a
;

25 
	sSåögNode
 {

26 
SåögNode
 *
	m√xt
;

27 
SåögD©a
 
	m°r
;

28 } 
	tSåögNode
;

30 
	sSåögLi°
 {

31 
SåögNode
 *
	mfú°
;

32 
SåögNode
 *
	mœ°
;

33 
mem‹y_ödex
 
	mnodeCou¡
;

34 
mem‹y_ödex
 
	msize
;

35 } 
	tSåögLi°
;

37 
	sSåögJoö
 {

38 
SåögD©a
 
	m¥e
;

39 
SåögD©a
 
	mmid
;

40 
SåögD©a
 
	mpo°
;

41 } 
	tSåögJoö
;

43 
uöt32
 
	tSåögM©chFœgs
;

45 
	mSåögM©chFœg_Ca£Sísôive
 = 1 << 0,

49 
Mem‹yC›y
(*
d°
, *
§c
, 
mem‹y_ödex
 
size
);

50 
mem‹y_ödex
 
SåögLígth
(
uöt8
 *
°r
);

51 
uöt8
 
Ch¨Uµî
(uöt8 
c
);

52 
uöt8
 
Ch¨Lowî
(uöt8 
c
);

54 
	#SåögLôîÆ
(
sd
Ë(sd.
buf
)

	)

59 
uöt8
* 
SåögNewLí
(
SåögD©a
 *
sd
, *
°r
, 
mem‹y_ödex
 
size
);

60 
uöt8
* 
SåögNew
(
SåögD©a
 *
sd
, *
°r
);

61 
uöt8
* 
SåögNewR™ge
(
SåögD©a
 *
sd
, uöt8 *
fú°
, uöt8 *
œ°_›ti⁄Æ
);

64 
SåögSli˚
(
SåögD©a
 *
d°
, SåögD©®
§c
, 
mem‹y_ödex
 
fú°
, mem‹y_ödex 
œ°
);

65 
SåögPªfix
(
SåögD©a
 *
d°
, SåögD©®
§c
, 
mem‹y_ödex
 
size
);

66 
SåögPo°fix
(
SåögD©a
 *
d°
, SåögD©®
§c
, 
mem‹y_ödex
 
size
);

67 
SåögSkùFr⁄t
(
SåögD©a
 *
d°
, SåögD©®
§c
, 
mem‹y_ödex
 
cou¡
);

68 
SåögSkùBack
(
SåögD©a
 *
d°
, SåögD©®
§c
, 
mem‹y_ödex
 
cou¡
);

71 
SåögPröt_
(
SåögD©a
 
s
, 
FILE
 *
°ªam
);

72 
SåögPröt
(
SåögD©a
 
s
);

73 
SåögPröä
(
SåögD©a
 
s
);

74 
SåögLi°Pröt_
(
SåögLi°
 
l
, 
FILE
 *
°ªam
, 
íd_›ti⁄Æ
);

75 
SåögLi°Pröt
(
SåögLi°
 
l
);

76 
SåögLi°Pröä
(
SåögLi°
 
l
);

77 
SåögLi°Pröén
(
SåögLi°
 
l
);

78 
SåögLi°M≠
(
SåögLi°
 
l
, (*
‚
)(
SåögD©a
));

81 
	`SåögLi°Push_
(
SåögLi°
 *
li°
, 
SåögD©a
 
sd
, 
SåögNode
 *
node_Ælo˚d
);

82 
	`SåögLi°Push
(
Aª«
 *
¨ía
, 
SåögLi°
 *
li°
, 
SåögD©a
 
sd
);

83 
SåögD©a
 
	`SåögLi°Joö
(
Aª«
 *
¨ía_a°mp
, 
SåögLi°
 *
li°
, 
SåögJoö
 *
joö_›ti⁄Æ
);

84 
SåögLi°
 
	`SåögS∂ô
(
Aª«
 *
¨ía
, 
SåögD©a
 
sd
, *
•lô_evîy_ch¨s
);

87 
SåögD©a
 
	`SåögPushfv
(
Aª«
 *
¨ía_a°mp
, *
fmt
, 
va_li°
 
¨gs
);

88 
SåögD©a
 
	`SåögPushf
(
Aª«
 *
¨ía_a°mp
, *
fmt
, ...);

89 
	`SåögLi°Pushf
(
Aª«
 *
¨ía_a°mp
, 
SåögLi°
 *
li°
, *
fmt
, ...);

91 
boﬁ32
 
	`SåögM©ch
(
SåögD©a
 
a
, SåögD©®
b
, 
SåögM©chFœgs
 
Êags_›ti⁄Æ
);

97 
uöt32
 
	`SåögDecodeUTF8
(uöt32 *
d°
, 
uöt8
 *
§c
);

98 
uöt32
 
	`SåögEncodeUTF8
(
uöt8
 *
d°
, uöt32 
codïoöt
);

100 
uöt32
 
	`SåögDecodeUTF16
(uöt32 *
d°
, 
uöt16
 *
§c
);

101 
uöt32
 
	`SåögEncodeUTF16
(
uöt16
 *
d°
, uöt32 
codïoöt
);

103 
Såög32D©a
 
	`SåögC⁄vît32
(
Aª«
 *
¨ía
, 
SåögD©a
 
sd
);

104 
SåögD©a
 
	`Såög32C⁄vît
(
Aª«
 *
¨ía
, 
Såög32D©a
 
sd
);

105 
Såög16D©a
 
	`SåögC⁄vît16
(
Aª«
 *
¨ía
, 
SåögD©a
 
sd
);

106 
SåögD©a
 
	`Såög16C⁄vît
(
Aª«
 *
¨ía
, 
Såög16D©a
 
sd
);

	@src/base/vector.h

8 #i‚de‡
VECTOR_H


9 
	#VECTOR_H


	)

11 
	~"def.h
"

12 
	~"m©h.h
"

14 
	sVe˘‹2
 {

15 
Êﬂt32
 
	mx
, 
	my
;

16 } 
	tVe˘‹2
;

18 
	sVe˘‹3
 {

19 
Êﬂt32
 
	mx
, 
	my
, 
	mz
;

20 } 
	tVe˘‹3
;

22 
Ve˘‹2
 
Ve˘‹2Add
(Ve˘‹2 
a
, Ve˘‹2 
b
);

23 
Ve˘‹2
 
Ve˘‹2Sub
(Ve˘‹2 
a
, Ve˘‹2 
b
);

24 
Ve˘‹2
 
Ve˘‹2Mul
(Ve˘‹2 
a
, 
Êﬂt32
 
b
);

25 
Ve˘‹2
 
Ve˘‹2Magnôude
(Ve˘‹2 
a
, Ve˘‹2 
b
);

26 
Ve˘‹2
 
Ve˘‹2DŸ
(Ve˘‹2 
a
, Ve˘‹2 
b
);

27 
Ve˘‹2
 
Ve˘‹2Cross
(Ve˘‹2 
a
, Ve˘‹2 
b
);

29 
Ve˘‹3
 
Ve˘‹3Add
(Ve˘‹3 
a
, Ve˘‹3 
b
);

30 
Ve˘‹3
 
Ve˘‹3Sub
(Ve˘‹3 
a
, Ve˘‹3 
b
);

31 
Ve˘‹3
 
Ve˘‹3Mul
(Ve˘‹3 
a
, 
Êﬂt32
 
b
);

32 
Ve˘‹3
 
Ve˘‹3Magnôude
(Ve˘‹3 
a
, Ve˘‹3 
b
);

33 
Ve˘‹3
 
Ve˘‹3DŸ
(Ve˘‹3 
a
, Ve˘‹3 
b
);

34 
Ve˘‹3
 
Ve˘‹3Cross
(Ve˘‹3 
a
, Ve˘‹3 
b
);

36 
ölöe
 
Ve˘‹2


37 
	$Ve˘‹2Add
(
Ve˘‹2
 
a
, Ve˘‹2 
b
)

39 
Ve˘‹2
 
ªs
 = {

40 .
x
 = 
a
.x + 
b
.x,

41 .
y
 = 
a
.y + 
b
.y

44 (
ªs
);

45 
	}
}

47 
ölöe
 
Ve˘‹2


48 
	$Ve˘‹2Sub
(
Ve˘‹2
 
a
, Ve˘‹2 
b
)

50 
Ve˘‹2
 
ªs
 = {

51 .
x
 = 
a
.x - 
b
.x,

52 .
y
 = 
a
.y - 
b
.y

55 (
ªs
);

56 
	}
}

58 
ölöe
 
Ve˘‹2


59 
	$Ve˘‹2Mul
(
Ve˘‹2
 
a
, 
Êﬂt32
 
b
)

61 
Ve˘‹2
 
ªs
 = {

62 .
x
 = 
a
.x * 
b
,

63 .
y
 = 
a
.y * 
b


66 (
ªs
);

67 
	}
}

69 
ölöe
 

70 
	$Ve˘‹2Magnôude
(
Ve˘‹2
 
a
)

72 
Êﬂt32
 
ªs
 = 
	`SqπFlﬂt32
(
a
.
x
 *á.x +á.
y
 *á.y);

74 (
ªs
);

75 
	}
}

78 
ölöe
 

79 
	$Ve˘‹2DŸ
(
Ve˘‹2
 
a
, Ve˘‹2 
b
)

81 
Êﬂt32
 
ªs
 = (
a
.
x
 * 
b
.xË+ (a.
y
 * b.y);

83 (
ªs
);

84 
	}
}

86 
ölöe
 

87 
	$Ve˘‹2Cross
(
Ve˘‹2
 
a
, Ve˘‹2 
b
)

89 
Êﬂt32
 
ªs
 = (
a
.
x
 * 
b
.
y
) - (a.y * b.x);

91 (
ªs
);

92 
	}
}

94 
ölöe
 
Ve˘‹3


95 
	$Ve˘‹3Add
(
Ve˘‹3
 
a
, Ve˘‹3 
b
)

97 
Ve˘‹3
 
ªs
 = {

98 .
x
 = 
a
.x + 
b
.x,

99 .
y
 = 
a
.y + 
b
.y,

100 .
z
 = 
a
.z + 
b
.z

103 (
ªs
);

104 
	}
}

106 
ölöe
 
Ve˘‹3


107 
	$Ve˘‹3Sub
(
Ve˘‹3
 
a
, Ve˘‹3 
b
)

109 
Ve˘‹3
 
ªs
 = {

110 .
x
 = 
a
.x - 
b
.x,

111 .
y
 = 
a
.y - 
b
.y,

112 .
z
 = 
a
.z - 
b
.z

115 (
ªs
);

116 
	}
}

118 
ölöe
 
Ve˘‹3


119 
	$Ve˘‹3Mul
(
Ve˘‹3
 
a
, 
Êﬂt32
 
b
)

121 
Ve˘‹3
 
ªs
 = {

122 .
x
 = 
a
.x * 
b
,

123 .
y
 = 
a
.y * 
b
,

124 .
z
 = 
a
.z * 
b


127 (
ªs
);

128 
	}
}

130 
ölöe
 

131 
	$Ve˘‹3DŸ
(
Ve˘‹3
 
a
, Ve˘‹3 
b
)

133 
Êﬂt32
 
ªs
 = (
a
.
x
 * 
b
.xË+ (a.
y
 * b.yË+ (a.
z
 * b.z);

135 (
ªs
);

136 
	}
}

138 
ölöe
 

139 
	$Ve˘‹3Cross
(
Ve˘‹3
 
a
, Ve˘‹3 
b
)

141 
Êﬂt32
 
ªs
 = (
a
.
y
 * 
b
.
z
 -á.z * b.yË+ (a.z * b.
x
 -á.x * b.z) + (a.x * b.y -á.y * b.x);

143 (
ªs
);

144 
	}
}

146 
ölöe
 

147 
	$Ve˘‹3Magnôude
(
Ve˘‹3
 
a
)

149 
Êﬂt32
 
ªs
 = 
	`SqπFlﬂt32
(
a
.
x
 *á.x +á.
y
 *á.y +á.
z
 *á.z);

151 (
ªs
);

152 
	}
}

	@src/os/dll_main.c

2 
	~"ba£/def.h
"

5 
uöt32


6 
	$sum
(
uöt32
 *
vÆs
, uöt32 
cou¡
)

8 
uöt32
 
ªs
 = 0;

9 
uöt32
 
i
 = 0; i < 
cou¡
; i++)

11 
ªs
 +
vÆs
[
i
];

13 (
ªs
);

14 
	}
}

	@src/os/file.h

1 #i‚de‡
FILE_H


2 
	#FILE_H


	)

4 
	~"ba£/°rög.h
"

5 
	~"ba£/¨ía.h
"

6 
	~"time.h
"

8 
uöt32
 
	tD©aAc˚ssFœgs
;

10 
	mD©aAc˚ssFœgs_Ród
 = (1 << 0),

11 
	mD©aAc˚ssFœgs_Wrôe
 = (1 << 1),

12 
	mD©aAc˚ssFœgs_Execuã
 = (1 << 2)

15 
uöt32
 
	tFûePr›îtyFœgs
;

17 
	mFûePr›îtyFœg_IsDú
 = (1 << 0)

20 
	sFûePr›îtõs
 {

21 
mem‹y_ödex
 
	msize
;

22 
FûePr›îtyFœgs
 
	mÊags
;

23 
Dí£Time
 
	mtime_¸óãd
;

24 
Dí£Time
 
	mtime_modifõd
;

25 
D©aAc˚ssFœgs
 
	mac˚ss
;

26 } 
	tFûePr›îtõs
;

28 
	sFûeIãøt‹
 {

29 
SåögD©a
 
	mroŸ
;

30 *
	mh™dÀ
;

31 } 
	tFûeIãøt‹
;

39 
SåögD©a
 
FûeRód
(
Aª«
 *
¨ía
, SåögD©®
Â©h
);

40 
boﬁ32
 
FûeWrôeLi°
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
, 
SåögLi°
 
d©a
);

41 
boﬁ32
 
FûeWrôe
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
, SåögD©®
d©a
);

42 
FûePr›îtõs
 
FûeRódPr›îtõs
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
);

44 
boﬁ32
 
FûeDñëe
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
);

45 
boﬁ32
 
FûeRíame
(
Aª«
 *
¨ía
, 
SåögD©a
 
ﬁd‚
, SåögD©®
√w‚
);

46 
boﬁ32
 
FûeMakeDúe˘‹y
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
);

47 
boﬁ32
 
FûeDñëeDúe˘‹y
(
Aª«
 *
¨ía
, 
SåögD©a
 
d∑th
);

49 
FûeIãøt‹
 
FûeIãrSèπ
(
SåögD©a
 
d∑th
);

50 
boﬁ32
 
FûeIãrNext
(
Aª«
 *
¨ía
, 
FûeIãøt‹
 
ôî
, 
SåögD©a
 *
d°
);

51 
FûeIãrEnd
(
FûeIãøt‹
 
ôî
);

	@src/os/file_linux.c

2 
	~<°dio.h
>

3 
	~<f˙é.h
>

4 
	~<uni°d.h
>

5 
	~<sys/°©.h
>

6 
	~<dúít.h
>

7 
	~"ba£/ba£.h
"

8 
	~"fûe.h
"

11 
SåögD©a


12 
	$FûeRód
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
)

14 
SåögD©a
 
ªs
 = {0};

16 
fûe
 = 
	`›í
((*)
	`SåögLôîÆ
(
Â©h
), 
O_RDONLY
);

17 i‡(
fûe
 == -1)

20 
	`≥º‹
("FailedÅo open file");

21 (
ªs
);

25 
mem‹y_ödex
 
fûeSize
 = 
	`l£ek
(
fûe
, 0, 
SEEK_END
);

26 
	`l£ek
(
fûe
, 0, 
SEEK_SET
);

28 
uöt8
 *
buf
 = 
	`PushAºay
(
¨ía
, uöt8, 
fûeSize
);

30 i‡(
	`ªad
(
fûe
, 
buf
, 
fûeSize
) == -1)

32 
	`≥º‹
("FailedÅoÑead file");

33 (
ªs
);

35 
	`SåögNew
(&
ªs
, 
buf
);

37 
	`˛o£
(
fûe
);

38 (
ªs
);

39 
	}
}

42 
boﬁ32


43 
	$FûeWrôeLi°
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
, 
SåögLi°
 
d©a
)

45 
boﬁ32
 
ªs
 = 
åue
;

47 
fûe
 = 
	`›í
((*)
	`SåögLôîÆ
(
Â©h
), 
O_WRONLY
 | 
O_CREAT
,

48 
S_IRUSR
 | 
S_IWUSR
 | 
S_IRGRP
 | 
S_IROTH
);

49 i‡(!
fûe
)

51 
ªs
 = 
Ál£
;

56 
ssize_t
 
sizeWrôãn
 = 0;

57 i‡(
d©a
.
fú°
 =d©a.
œ°
)

59 i‡(
d©a
.
fú°
)

61 
sizeWrôãn
 +
	`wrôe
(
fûe
, 
d©a
.
fú°
->
°r
.
buf
, d©a.fú°->°r.
size
);

66 
SåögNode
 *
cuºít
 = 
d©a
.
fú°
;

67 
cuºít
 !
NULL
;

68 
cuºít
 = cuºít->
√xt
)

70 
sizeWrôãn
 +
	`wrôe
(
fûe
, 
cuºít
->
°r
.
buf
, cuºít->°r.
size
);

74 i‡(
sizeWrôãn
 !
d©a
.
size
)

78 
	`≥º‹
("FailedÅo write file");

79 
ªs
 = 
Ál£
;

81 
	`˛o£
(
fûe
);

83 (
ªs
);

84 
	}
}

86 
boﬁ32


87 
	$FûeWrôe
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
, SåögD©®
d©a
)

89 
SåögNode
 
node
 = {};

90 
SåögLi°
 
li°
 = {};

91 
	`SåögLi°Push_
(&
li°
, 
d©a
, &
node
);

92 
boﬁ32
 
ªs
 = 
	`FûeWrôeLi°
(
¨ía
, 
Â©h
, 
li°
);

93 (
ªs
);

94 
	}
}

96 
FûePr›îtõs


97 
	$FûeRódPr›îtõs
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
)

99 
FûePr›îtõs
 
ªs
 = {0};

100 
°©
 
sb
;

102 
boﬁ32
 
îr
 = 
	`°©
((*)
	`SåögLôîÆ
(
Â©h
), &
sb
);

103 i‡(
îr
 == -1)

105 
	`≥º‹
("FailedÅoÑead fileÖroperties");

108 
ªs
.
size
 = 
sb
.
°_size
;

109 
ªs
.
ac˚ss
 = 
sb
.
°_mode
;

110 
ªs
.
time_¸óãd
 = 
sb
.
°_˘ime
;

111 
ªs
.
time_modifõd
 = 
sb
.
°_mtime
;

112 
ªs
.
Êags
 = 
	`S_ISDIR
(
sb
.
°_mode
);

114 (
ªs
);

115 
	}
}

117 
boﬁ32


118 
	$FûeDñëe
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
)

120 
boﬁ32
 
ªs
 = 
	`ªmove
((*)
	`SåögLôîÆ
(
Â©h
));

121 i‡(
ªs
 == -1)

123 
	`≥º‹
("FailedÅo delete file");

125 (
ªs
);

126 
	}
}

128 
boﬁ32


129 
	$FûeRíame
(
Aª«
 *
¨ía
, 
SåögD©a
 
ﬁdÂ
, SåögD©®
√wÂ
)

134 
boﬁ32
 
ªs
 = 
	`ª«me
((*)
	`SåögLôîÆ
(
ﬁdÂ
), (*)SåögLôîÆ(
√wÂ
));

135 i‡(
ªs
 == -1)

137 
	`≥º‹
("FailedÅoÑename file");

139 (
ªs
);

140 
	}
}

142 
boﬁ32


143 
	$FûeMakeDúe˘‹y
(
Aª«
 *
¨ía
, 
SåögD©a
 
Â©h
)

146 
boﬁ32
 
ªs
 = 
	`mkdú
((*)
	`SåögLôîÆ
(
Â©h
), 0755);

147 i‡(
ªs
 == -1)

149 
	`≥º‹
("FailedÅo makeáÇew directory");

151 (
ªs
);

152 
	}
}

154 
boﬁ32


155 
	$FûeDñëeDúe˘‹y
(
Aª«
 *
¨ía
, 
SåögD©a
 
dú«me
)

157 
boﬁ32
 
ªs
 = 
	`rmdú
((*)
	`SåögLôîÆ
(
dú«me
));

158 i‡(
ªs
 == -1)

160 
	`≥º‹
("FailedÅo delete directory");

162 (
ªs
);

163 
	}
}

165 
FûeIãøt‹


166 
	$FûeIãrSèπ
(
SåögD©a
 
d∑th
)

168 
FûeIãøt‹
 
ªs
 = {0};

169 
DIR
 *
dúh™dÀ
 = 
	`›ídú
((*)
	`SåögLôîÆ
(
d∑th
));

170 i‡(
dúh™dÀ
 =
NULL
)

172 
	`≥º‹
("FailedÅo iterate onÖath");

176 
ªs
.
roŸ
 = 
d∑th
;

177 
ªs
.
h™dÀ
 = 
dúh™dÀ
;

179 (
ªs
);

180 
	}
}

182 
boﬁ32


183 
	$FûeIãrNext
(
Aª«
 *
¨ía
, 
FûeIãøt‹
 
ôî
, 
SåögD©a
 *
d°
)

185 
boﬁ32
 
ªs
 = 
åue
;

187 
dúít
 *
ít
 = 
	`ªaddú
(
ôî
.
h™dÀ
);

188 i‡(
ít
 =
NULL
)

190 
ªs
 = 
Ál£
;

194 
uöt8
 *
fûíame
 = (uöt8 *)
ít
->
d_«me
;

195 
boﬁ32
 
isDŸ
 = (
fûíame
[0] == '.' && filename[1] == 0);

196 
boﬁ32
 
isDŸDŸ
 = (
fûíame
[0] == '.' && filename[1] == '.' && filename[2] == 0);

198 i‡(
isDŸ
 || 
isDŸDŸ
)

201 
ªs
 = 
	`FûeIãrNext
(
¨ía
, 
ôî
, 
d°
);

209 
	`SåögNew
(
d°
, 
fûíame
);

212 (
ªs
);

213 
	}
}

216 
	$FûeIãrEnd
(
FûeIãøt‹
 
ôî
)

218 
boﬁ32
 
ªs
 = 
	`˛o£dú
((
DIR
 *)
ôî
.
h™dÀ
);

219 i‡(
ªs
 == -1)

221 
	`≥º‹
("FailedÅo close directory");

223 
	}
}

229 
SåögD©a


230 
	$FûeRódP‹t
(
Aª«
 *
¨ía
, 
SåögD©a
 
fûíame
)

232 
SåögD©a
 
ªs
 = {0};

234 
FILE
 *
fûe
 = 
	`f›í
((*)
	`SåögLôîÆ
(
fûíame
), "r");

235 i‡(!
fûe
)

238 
	`Ârötf
(
°dîr
, "FaûedÅÿªad fûe: %s\n", 
	`SåögLôîÆ
(
fûíame
));

239 (
ªs
);

242 
	`f£ek
(
fûe
, 0L, 
SEEK_END
);

243 
mem‹y_ödex
 
fûeSize
 = 
	`·ñl
(
fûe
);

244 
	`ªwöd
(
fûe
);

246 
uöt8
 *
buf
 = 
	`PushAºay
(
¨ía
, uöt8, 
fûeSize
);

248 
	`‰ód
(
buf
, 1, 
fûeSize
, 
fûe
);

249 
	`SåögNew
(&
ªs
, 
buf
);

251 
	`f˛o£
(
fûe
);

252 (
ªs
);

253 
	}
}

255 
boﬁ32


256 
	$FûeWrôeLi°P‹t
(
SåögD©a
 
fûíame
, 
SåögLi°
 
d©a
)

258 
boﬁ32
 
ªs
 = 
åue
;

260 
FILE
 *
fûe
 = 
	`f›í
((*)
	`SåögLôîÆ
(
fûíame
), "w");

261 i‡(!
fûe
)

263 
ªs
 = 
Ál£
;

267 
	`SåögLi°Pröt_
(
d©a
, 
fûe
, '\n');

268 
	`f˛o£
(
fûe
);

270 (
ªs
);

271 
	}
}

	@src/os/file_win32.c

2 
	~"fûe.h
"

3 
	~<°dio.h
>

4 
	~<Wödows.h
>

7 
loˇl
 
SåögD©a


8 
	$GëLa°Eº‹AsSåög
()

10 
SåögD©a
 
ªs
 = {0};

12 
DWORD
 
îr‹MesßgeID
 = 
	`GëLa°Eº‹
();

13 if(
îr‹MesßgeID
 == 0) {

14 (
ªs
);

17 
LPSTR
 
mesßgeBuf„r
 = 
nuŒ
;

19 
mem‹y_ödex
 
size
 = 
	`F‹m©MesßgeA
(
FORMAT_MESSAGE_ALLOCATE_BUFFER
 |

20 
FORMAT_MESSAGE_FROM_SYSTEM
 |

21 
FORMAT_MESSAGE_IGNORE_INSERTS
,

22 
NULL
, 
îr‹MesßgeID
,

23 
	`MAKELANGID
(
LANG_NEUTRAL
, 
SUBLANG_DEFAULT
),

24 (
LPSTR
)&
mesßgeBuf„r
, 0, 
NULL
);

26 
ªs
.
buf
 = (
uöt8
*)
mesßgeBuf„r
;

27 
ªs
.
size
 = size;

29 
	`LoˇlFªe
(
mesßgeBuf„r
);

31 (
ªs
);

32 
	}
}

35 
SåögD©a


36 
	$FûeRód
(
Aª«
 *
¨ía
, 
SåögD©a
 
fûíame
)

38 
SåögD©a
 
ªs
 = {0};

39 
Såög16D©a
 
‚_utf8
 = 
	`SåögC⁄vît16
(
¨ía
, 
fûíame
);

40 
HANDLE
 
fûe
 = 
	`Cª©eFûe
(
	`SåögLôîÆ
(
‚_utf8
),

41 
GENERIC_READ
, 0, 0,

42 
OPEN_EXISTING
, 
FILE_ATTRIBUTE_NORMAL
,

45 i‡(
fûe
 =
INVALID_HANDLE_VALUE
)

47 
SåögD©a
 
îrmsg
 = 
	`GëLa°Eº‹AsSåög
();

48 
	`Ârötf
(
°dîr
, "FailedÅo open file '%s': %s",

49 
	`SåögLôîÆ
(
fûíame
), SåögLôîÆ(
îrmsg
));

50 (
ªs
);

53 
mem‹y_ödex
 
fûeSize
 = 
	`GëFûeSize
(
fûe
, 0);

55 
uöt8
 *
buf
 = 
	`PushAºay
(
¨ía
, uöt8, 
fûeSize
);

57 i‡(
	`RódFûe
(
fûe
, 
buf
, 
fûeSize
, 0, 0Ë=
nuŒ
)

59 
SåögD©a
 
îrmsg
 = 
	`GëLa°Eº‹AsSåög
();

60 
	`Ârötf
(
°dîr
, "FailedÅoÑead file '%s': %s",

61 
	`SåögLôîÆ
(
fûíame
), SåögLôîÆ(
îrmsg
));

62 (
ªs
);

64 
	`SåögNew
(&
ªs
, 
buf
);

66 
	`Clo£H™dÀ
(
fûe
);

67 (
ªs
);

68 
	}
}

71 
boﬁ32


72 
	$FûeWrôeLi°
(
Aª«
 *
¨ía
, 
SåögD©a
 
fûíame
, 
SåögLi°
 
d©a
)

74 
boﬁ32
 
ªs
 = 
åue
;

75 
Såög16D©a
 
‚_utf8
 = 
	`SåögC⁄vît16
(
¨ía
, 
fûíame
);

76 
HANDLE
 
fûe
 = 
	`Cª©eFûe
(
	`SåögLôîÆ
(
‚_utf8
),

77 
GENERIC_WRITE
, 0, 0,

78 
CREATE_ALWAYS
, 
FILE_ATTRIBUTE_NORMAL
,

80 i‡(
fûe
 =
INVALID_HANDLE_VALUE
)

82 
SåögD©a
 
îrmsg
 = 
	`GëLa°Eº‹AsSåög
();

83 
	`Ârötf
(
°dîr
, "FailedÅo open file '%s': %s",

84 
	`SåögLôîÆ
(
fûíame
), SåögLôîÆ(
îrmsg
));

85 
ªs
 = 
Ál£
;

89 
LPDWORD
 
sizeWrôãn
 = 0;

90 i‡(
d©a
.
fú°
 =d©a.
œ°
)

92 i‡(
d©a
.
fú°
)

94 
	`WrôeFûe
(
fûe
, 
d©a
.
fú°
->
°r
.
buf
,

95 
d©a
.
fú°
->
°r
.
size
,

96 
sizeWrôãn
, 0);

101 
SåögNode
 *
cuºít
 = 
d©a
.
fú°
;

102 
cuºít
 !
NULL
;

103 
cuºít
 = cuºít->
√xt
)

105 
	`WrôeFûe
(
fûe
, 
cuºít
->
°r
.
buf
,

106 
cuºít
->
°r
.
size
,

107 
sizeWrôãn
, 0);

111 i‡((
mem‹y_ödex
)
sizeWrôãn
 !
d©a
.
size
)

113 
SåögD©a
 
îrmsg
 = 
	`GëLa°Eº‹AsSåög
();

114 
	`Ârötf
(
°dîr
, "FailedÅo write file '%s': %s",

115 
	`SåögLôîÆ
(
fûíame
), SåögLôîÆ(
îrmsg
));

116 
ªs
 = 
Ál£
;

118 
	`Clo£H™dÀ
(
fûe
);

121 (
ªs
);

122 
	}
}

124 
boﬁ32


125 
	$FûeWrôe
(
Aª«
 *
¨ía
, 
SåögD©a
 
fûíame
, SåögD©®
d©a
)

127 
SåögNode
 
node
 = {};

128 
SåögLi°
 
li°
 = {};

129 
	`SåögLi°Push_
(&
li°
, 
d©a
, &
node
);

130 
boﬁ32
 
ªs
 = 
	`FûeWrôeLi°
(
¨ía
, 
fûíame
, 
li°
);

131 (
ªs
);

132 
	}
}

134 
FûePr›îtõs


135 
	$FûeRódPr›îtõs
(
Aª«
 *
¨ía
, 
SåögD©a
 
fûíame
)

137 
FûePr›îtõs
 
ªs
 = {0};

140 (
ªs
);

141 
	}
}

143 
boﬁ32


144 
	$FûeDñëe
(
Aª«
 *
¨ía
, 
SåögD©a
 
fûíame
)

147 
	}
}

149 
boﬁ32


150 
	$FûeRíame
(
Aª«
 *
¨ía
, 
SåögD©a
 
ﬁd‚
, SåögD©®
√w‚
)

153 
	}
}

155 
boﬁ32


156 
	$FûeMakeDúe˘‹y
(
Aª«
 *
¨ía
, 
SåögD©a
 
fûíame
)

159 
boﬁ32
 
ªs
 = 
	`mkdú
(
	`SåögLôîÆ
(
fûíame
), 0);

160 (
ªs
);

161 
	}
}

163 
boﬁ32


164 
	$FûeDñëeDúe˘‹y
(
Aª«
 *
¨ía
, 
SåögD©a
 
dú«me
)

167 
	}
}

173 
SåögD©a


174 
	$FûeRódP‹t
(
Aª«
 *
¨ía
, 
SåögD©a
 
fûíame
)

176 
SåögD©a
 
ªs
 = {0};

178 
FILE
 *
fûe
 = 
	`f›í
((*)
	`SåögLôîÆ
(
fûíame
), "r");

179 i‡(!
fûe
)

182 
	`Ârötf
(
°dîr
, "FaûedÅÿªad fûe: %s\n", 
	`SåögLôîÆ
(
fûíame
));

183 (
ªs
);

186 
	`f£ek
(
fûe
, 0L, 
SEEK_END
);

187 
mem‹y_ödex
 
fûeSize
 = 
	`·ñl
(
fûe
);

188 
	`ªwöd
(
fûe
);

190 
uöt8
 *
buf
 = 
	`PushAºay
(
¨ía
, uöt8, 
fûeSize
);

192 
	`‰ód
(
buf
, 1, 
fûeSize
, 
fûe
);

193 
	`SåögNew
(&
ªs
, 
buf
);

195 
	`f˛o£
(
fûe
);

196 (
ªs
);

197 
	}
}

199 
boﬁ32


200 
	$FûeWrôeLi°P‹t
(
SåögD©a
 
fûíame
, 
SåögLi°
 
d©a
)

202 
boﬁ32
 
ªs
 = 
åue
;

204 
FILE
 *
fûe
 = 
	`f›í
((*)
	`SåögLôîÆ
(
fûíame
), "w");

205 i‡(!
fûe
)

207 
ªs
 = 
Ál£
;

211 
	`SåögLi°Pröt_
(
d©a
, 
fûe
, '\n');

212 
	`f˛o£
(
fûe
);

214 (
ªs
);

215 
	}
}

	@src/os/memory.h

1 #i‚de‡
MEMORY_H


2 
	#MEMORY_H


	)

4 
	~"ba£/def.h
"

7 #i‚de‡
ARENA_USEMALLOC


9 * 
AŒoˇãMem‹y
(
mem‹y_ödex
);

10 
DóŒoˇãMem‹y
(*, 
mem‹y_ödex
);

12 #i‡!
deföed
(
a_Æloc
Ë|| !deföed(
a_‰ì
)

13 
	~<°dlib.h
>

14 
	#a_Æloc
 
mÆloc


	)

15 
	#a_‰ì
 
‰ì


	)

17 
	#AŒoˇãMem‹y
(
s
Ë
	`a_Æloc
((s))

	)

18 
	#DóŒoˇãMem‹y
(
±r
, 
s
Ë
	`a_‰ì
(’å))

	)

	@src/os/memory_linux.c

2 
	~"mem‹y.h
"

3 
	~<sys/mm™.h
>

5 * 
	$AŒoˇãMem‹y
(
mem‹y_ödex
 
size
)

7 * 
ªs
 =

8 
	`mm≠
(
NULL
, 
size
,

9 
PROT_READ
 | 
PROT_WRITE
,

10 
MAP_PRIVATE
 | 
MAP_ANONYMOUS
, -1, 0);

12 i‡(
ªs
 =
MAP_FAILED
)

14 
	`≥º‹
("Failed Allocation.");

15  
NULL
;

17 (
ªs
);

18 
	}
}

20 
	$DóŒoˇãMem‹y
(* 
±r
, 
mem‹y_ödex
 
size
)

22 
boﬁ32
 
ªs
 = 
	`munm≠
(
±r
, 
size
);

23 i‡(
ªs
 == -1)

25 
	`≥º‹
("Failed Deallocation.");

27 
	}
}

	@src/os/memory_win32.c

2 
	~"mem‹y.h
"

3 
	~<mem‹y≠i.h
>

5 * 
	$AŒoˇãMem‹y
(
mem‹y_ödex
 
size
)

7 * 
ªs
 = 
	`VútuÆAŒoc
(0, 
size
, 
MEM_RESERVE
 | 
MEM_COMMIT
, 
PAGE_READWRITE
);

9 (
ªs
);

10 
	}
}

12 
	$DóŒoˇãMem‹y
(* 
mem‹y
, 
mem‹y_ödex
 
size_‹_zîo__
)

14 i‡(
mem‹y
)

16 
	`VútuÆFªe
(
mem‹y
, 
size_‹_zîo__
, 
MEM_RELEASE
);

18 
	}
}

	@src/os/os.c

2 
	~"ba£/ba£.h
"

3 
	~"fûe.h
"

4 
	~"os.h
"

6 
	$uöt32
 (*
	tsum_t
)(
	tuöt32
*, uint32);

8 
	$maö
()

10 
Aª«
 
¨ía
 = {0};

11 
SåögD©a
 
∑th
 = {0};

12 
SåögD©a
 
∑th2
 = {0};

13 
SåögD©a
 
∑th3
 = {0};

14 
SåögD©a
 
∑th4
 = {0};

15 
SåögD©a
 
∑th5
 = {0};

19 
	`SåögNew
(&
∑th
, "./buûd/" 
SHARED_LIB
);

20 
	`SåögNew
(&
∑th2
, "./README.md");

21 
	`SåögNew
(&
∑th3
, "./copy_of_README.md");

22 
	`SåögNew
(&
∑th4
, "./test/");

23 
	`SåögNew
(&
∑th5
, "./newcopy.md");

35 
SåögD©a
 
c⁄ã¡
 = 
	`FûeRód
(&
¨ía
, 
∑th2
);

37 
	`SåögPröt
(
c⁄ã¡
);

38 
	`¥ötf
("sizêo‡c⁄ã¡: %lu\n", 
c⁄ã¡
.
size
);

40 
	`FûeWrôe
(&
¨ía
, 
∑th3
, 
c⁄ã¡
);

41 
FûePr›îtõs
 
s
 = 
	`FûeRódPr›îtõs
(&
¨ía
, 
∑th3
);

43 
	`¥ötf
("pathÅest: ./test/\n");

44 
	`¥ötf
("s->≥rms: %lu\n", 
s
.
ac˚ss
);

45 
	`¥ötf
("s->isdú: %d\n", 
s
.
Êags
);

47 
SåögD©a
 
dú∑th1
 = {0};

48 
	`SåögNew
(&
dú∑th1
, "./src/base");

53 
	`FûeDñëe
(&
¨ía
, 
∑th3
);

55 
FûeIãøt‹
 
ôî
 = 
	`FûeIãrSèπ
(
dú∑th1
);

57 
	`¥ötf
("rootpath of iter: ");

58 
	`SåögPröä
(
ôî
.
roŸ
);

60 
	`FûeIãrNext
(&
¨ía
, 
ôî
, &
∑th2
))

62 
	`SåögPröä
(
∑th2
);

65 
	`FûeIãrEnd
(
ôî
);

68 
	`Aª«Fªe
(&
¨ía
);

70 
	}
}

	@src/os/os.h

1 #i‚de‡
OS_H


2 
	#OS_H


	)

4 
	~"mem‹y.h
"

5 
	~"fûe.h
"

6 
	~"sh¨ed.h
"

	@src/os/shared.h

2 
	~"ba£/ba£.h
"

4 #i‡
deföed
(
OS_LINUX
)

5 
	#SHARED_LIB
 "libã°.so"

	)

6 #ñi‡
deföed
(
OS_WINDOWS
)

7 
	#SHARED_LIB
 "ã°.dŒ"

	)

10 * 
LibO≥n
(
SåögD©a
 
∑th
);

11 * 
LibLﬂd
(* 
lib
, * 
«me
);

12 
LibClo£
(* 
lib
);

	@src/os/shared_linux.c

2 
	~"sh¨ed.h
"

3 
	~<dlf˙.h
>

5 * 
	$LibO≥n
(
SåögD©a
 
∑th
)

7 * 
ªs
 = 
	`dl›í
((*)
	`SåögLôîÆ
(
∑th
), 
RTLD_NOW
);

8 i‡(!
ªs
)

10 
	`Ârötf
(
°dîr
, "ERROR: dy«mi¯lökögÉº‹: %s\n", 
	`dÀº‹
());

13 (
ªs
);

14 
	}
}

16 * 
	$LibLﬂd
(* 
lib
, * 
«me
)

18 * 
ªs
 = 
	`dlsym
(
lib
, 
«me
);

19 i‡(!
ªs
)

21 
	`Ârötf
(
°dîr
, "ERROR: dy«mi¯lökögÉº‹: %s\n", 
	`dÀº‹
());

23 (
ªs
);

24 
	}
}

26 
	$LibClo£
(*
lib
)

28 
	`dl˛o£
(
lib
);

29 
	}
}

	@src/os/shared_win32.c

2 
	~"sh¨ed.h
"

3 
	~<Wödows.h
>

4 
	~<wch¨.h
>

6 * 
	$LibO≥n
(
SåögD©a
 
∑th
)

8 
HMODULE
 
ªs
 = 
	`LﬂdLibøry
((*)
	`SåögLôîÆ
(
∑th
));

9 i‡(!
ªs
)

11 
	`¥ötf
("FailedÅoÜoad DLL.\n");

13 (
ªs
);

14 
	}
}

16 * 
	$LibLﬂd
(* 
lib
, * 
«me
)

18 * 
ªs
 = 
	`GëProcAddªss
(
lib
, 
«me
);

19 i‡(!
ªs
)

21 
	`¥ötf
("FailedÅoÜoad function.\n");

23 (
ªs
);

24 
	}
}

26 
	$LibClo£
(*
lib
)

28 
	`FªeLibøry
(
lib
);

29 
	}
}

	@src/os/time.c

2 
Dí£Time


3 
	$Dí£ToD©eTime
(
D©eTime
 
t
)

6 
	}
}

8 
D©eTime


9 
	$D©eTimeToDí£
(
Dí£Time
 
d
)

12 
	}
}

	@src/os/time.h

1 #i‚de‡
TIME_H


2 
	#TIME_H


	)

4 
	~"ba£/def.h
"

6 
uöt64
 
	tDí£Time
;

8 
	sD©eTime
 {

9 
uöt16
 
	mms
;

10 
uöt8
 
	m£c
;

11 
uöt8
 
	mmö
;

12 
uöt8
 
	mhour
;

13 
uöt8
 
	mday
;

14 
uöt8
 
	mm⁄th
;

15 
öt32
 
	myór
;

16 } 
	tD©eTime
;

18 
Dí£Time
 
Dí£ToD©eTime
(
D©eTime
 
t
);

19 
D©eTime
 
D©eTimeToDí£
(
Dí£Time
 
d
);

21 
D©eTime
 
TimeNowUnivîßl
();

22 
D©eTime
 
TimeUnivîßlToLoˇl
(D©eTimê*
t
);

23 
D©eTime
 
TimeLoˇlToUnivîßl
(D©eTimê*
t
);

	@/usr/include/dirent.h

22 #i‚def 
_DIRENT_H


23 
	#_DIRENT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifde‡
__USE_XOPEN


32 #i‚de‡
__öo_t_deföed


33 #i‚de‡
__USE_FILE_OFFSET64


34 
__öo_t
 
	töo_t
;

36 
__öo64_t
 
	töo_t
;

38 
	#__öo_t_deföed


	)

40 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


41 
__öo64_t
 
	töo64_t
;

42 
	#__öo64_t_deföed


	)

61 
	~<bôs/dúít.h
>

63 #i‡
deföed
 
__USE_MISC
 && !deföed 
d_fûío


64 
	#d_öo
 
d_fûío


	)

81 #ifde‡
_DIRENT_HAVE_D_NAMLEN


82 
	#_D_EXACT_NAMLEN
(
d
Ë((d)->
d_«mÀn
)

	)

83 
	#_D_ALLOC_NAMLEN
(
d
Ë(
	`_D_EXACT_NAMLEN
 (dË+ 1)

	)

85 
	#_D_EXACT_NAMLEN
(
d
Ë(
	`°æí
 ((d)->
d_«me
))

	)

86 #ifde‡
_DIRENT_HAVE_D_RECLEN


87 
	#_D_ALLOC_NAMLEN
(
d
Ë(((*Ë(dË+ (d)->
d_ª˛í
Ë- &(d)->
d_«me
[0])

	)

89 
	#_D_ALLOC_NAMLEN
(
d
Ë( (d)->
d_«me
 > 1 ?  (d)->d_name \

90 : 
	`_D_EXACT_NAMLEN
 (
d
Ë+ 1)

	)

95 #ifde‡
__USE_MISC


99 
	mDT_UNKNOWN
 = 0,

100 
	#DT_UNKNOWN
 
DT_UNKNOWN


	)

101 
	mDT_FIFO
 = 1,

102 
	#DT_FIFO
 
DT_FIFO


	)

103 
	mDT_CHR
 = 2,

104 
	#DT_CHR
 
DT_CHR


	)

105 
	mDT_DIR
 = 4,

106 
	#DT_DIR
 
DT_DIR


	)

107 
	mDT_BLK
 = 6,

108 
	#DT_BLK
 
DT_BLK


	)

109 
	mDT_REG
 = 8,

110 
	#DT_REG
 
DT_REG


	)

111 
	mDT_LNK
 = 10,

112 
	#DT_LNK
 
DT_LNK


	)

113 
	mDT_SOCK
 = 12,

114 
	#DT_SOCK
 
DT_SOCK


	)

115 
	mDT_WHT
 = 14

116 
	#DT_WHT
 
DT_WHT


	)

120 
	#IFTODT
(
mode
Ë(((modeË& 0170000Ë>> 12)

	)

121 
	#DTTOIF
(
dúty≥
Ë((dúty≥Ë<< 12)

	)

127 
__dú°ªam
 
	tDIR
;

134 
	$˛o£dú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

141 
DIR
 *
	$›ídú
 (c⁄° *
__«me
Ë
	`__n⁄nuŒ
 ((1))

142 
__©åibuã_mÆloc__
 
	`__©å_dóŒoc
 (
˛o£dú
, 1);

144 #ifde‡
__USE_XOPEN2K8


149 
DIR
 *
	$fd›ídú
 (
__fd
)

150 
__©åibuã_mÆloc__
 
	`__©å_dóŒoc
 (
˛o£dú
, 1);

163 #i‚de‡
__USE_FILE_OFFSET64


164 
dúít
 *
	$ªaddú
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

166 #ifde‡
__REDIRECT


167 
dúít
 *
	`__REDIRECT
 (
ªaddú
, (
DIR
 *
__dúp
), 
ªaddú64
)

168 
	`__n⁄nuŒ
 ((1));

170 
	#ªaddú
 
ªaddú64


	)

174 #ifde‡
__USE_LARGEFILE64


175 
dúít64
 *
	$ªaddú64
 (
DIR
 *
__dúp
Ë
	`__n⁄nuŒ
 ((1));

178 #ifde‡
__USE_POSIX


184 #i‚de‡
__USE_FILE_OFFSET64


185 
	$ªaddú_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

186 
dúít
 *
__ª°ri˘
 
__íåy
,

187 
dúít
 **
__ª°ri˘
 
__ªsu…
)

188 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

190 #ifde‡
__REDIRECT


191 
	`__REDIRECT
 (
ªaddú_r
,

192 (
DIR
 *
__ª°ri˘
 
__dúp
,

193 
dúít
 *
__ª°ri˘
 
__íåy
,

194 
dúít
 **
__ª°ri˘
 
__ªsu…
),

195 
ªaddú64_r
)

196 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

198 
	#ªaddú_r
 
ªaddú64_r


	)

202 #ifde‡
__USE_LARGEFILE64


203 
	$ªaddú64_r
 (
DIR
 *
__ª°ri˘
 
__dúp
,

204 
dúít64
 *
__ª°ri˘
 
__íåy
,

205 
dúít64
 **
__ª°ri˘
 
__ªsu…
)

206 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__©åibuã_dïªˇãd__
;

211 
	$ªwöddú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

213 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


214 
	~<bôs/ty≥s.h
>

217 
	$£ekdú
 (
DIR
 *
__dúp
, 
__pos
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

220 
	$ãŒdú
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

223 #ifde‡
__USE_XOPEN2K8


226 
	$dúfd
 (
DIR
 *
__dúp
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

228 #i‡
deföed
 
__OPTIMIZE__
 && deföed 
_DIR_dúfd


229 
	#dúfd
(
dúp
Ë
	`_DIR_dúfd
 (dúp)

	)

232 #ifde‡
__USE_MISC


233 #i‚de‡
MAXNAMLEN


235 
	~<bôs/posix1_lim.h
>

238 #ifde‡
NAME_MAX


239 
	#MAXNAMLEN
 
NAME_MAX


	)

241 
	#MAXNAMLEN
 255

	)

246 
	#__√ed_size_t


	)

247 
	~<°ddef.h
>

256 #i‚de‡
__USE_FILE_OFFSET64


257 
	$sˇndú
 (c⁄° *
__ª°ri˘
 
__dú
,

258 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

259 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

260 (*
__cmp
Ë(c⁄° 
dúít
 **,

261 c⁄° 
dúít
 **))

262 
	`__n⁄nuŒ
 ((1, 2));

264 #ifde‡
__REDIRECT


265 
	`__REDIRECT
 (
sˇndú
,

266 (c⁄° *
__ª°ri˘
 
__dú
,

267 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

268 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

269 (*
__cmp
Ë(c⁄° 
dúít
 **,

270 c⁄° 
dúít
 **)),

271 
sˇndú64
Ë
	`__n⁄nuŒ
 ((1, 2));

273 
	#sˇndú
 
sˇndú64


	)

277 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


280 
	$sˇndú64
 (c⁄° *
__ª°ri˘
 
__dú
,

281 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

282 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

283 (*
__cmp
Ë(c⁄° 
dúít64
 **,

284 c⁄° 
dúít64
 **))

285 
	`__n⁄nuŒ
 ((1, 2));

288 #ifde‡
__USE_GNU


294 #i‚de‡
__USE_FILE_OFFSET64


295 
	$sˇndú©
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

296 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

297 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

298 (*
__cmp
Ë(c⁄° 
dúít
 **,

299 c⁄° 
dúít
 **))

300 
	`__n⁄nuŒ
 ((2, 3));

302 #ifde‡
__REDIRECT


303 
	`__REDIRECT
 (
sˇndú©
,

304 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

305 
dúít
 ***
__ª°ri˘
 
__«mñi°
,

306 (*
__£À˘‹
Ë(c⁄° 
dúít
 *),

307 (*
__cmp
Ë(c⁄° 
dúít
 **,

308 c⁄° 
dúít
 **)),

309 
sˇndú©64
Ë
	`__n⁄nuŒ
 ((2, 3));

311 
	#sˇndú©
 
sˇndú©64


	)

317 
	$sˇndú©64
 (
__dfd
, c⁄° *
__ª°ri˘
 
__dú
,

318 
dúít64
 ***
__ª°ri˘
 
__«mñi°
,

319 (*
__£À˘‹
Ë(c⁄° 
dúít64
 *),

320 (*
__cmp
Ë(c⁄° 
dúít64
 **,

321 c⁄° 
dúít64
 **))

322 
	`__n⁄nuŒ
 ((2, 3));

326 #i‚de‡
__USE_FILE_OFFSET64


327 
	$Æphas‹t
 (c⁄° 
dúít
 **
__e1
,

328 c⁄° 
dúít
 **
__e2
)

329 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

331 #ifde‡
__REDIRECT


332 
	`__REDIRECT_NTH
 (
Æphas‹t
,

333 (c⁄° 
dúít
 **
__e1
,

334 c⁄° 
dúít
 **
__e2
),

335 
Æphas‹t64
Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

337 
	#Æphas‹t
 
Æphas‹t64


	)

341 #i‡
deföed
 
__USE_GNU
 && deföed 
__USE_LARGEFILE64


342 
	$Æphas‹t64
 (c⁄° 
dúít64
 **
__e1
,

343 c⁄° 
dúít64
 **
__e2
)

344 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

349 #ifde‡
__USE_MISC


354 #i‚de‡
__USE_FILE_OFFSET64


355 
__ssize_t
 
	$gëdúíåõs
 (
__fd
, *
__ª°ri˘
 
__buf
,

356 
size_t
 
__nbyãs
,

357 
__off_t
 *
__ª°ri˘
 
__ba£p
)

358 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

360 #ifde‡
__REDIRECT


361 
__ssize_t
 
	`__REDIRECT_NTH
 (
gëdúíåõs
,

362 (
__fd
, *
__ª°ri˘
 
__buf
,

363 
size_t
 
__nbyãs
,

364 
__off64_t
 *
__ª°ri˘
 
__ba£p
),

365 
gëdúíåõs64
Ë
	`__n⁄nuŒ
 ((2, 4));

367 
	#gëdúíåõs
 
gëdúíåõs64


	)

371 #ifde‡
__USE_LARGEFILE64


372 
__ssize_t
 
	$gëdúíåõs64
 (
__fd
, *
__ª°ri˘
 
__buf
,

373 
size_t
 
__nbyãs
,

374 
__off64_t
 *
__ª°ri˘
 
__ba£p
)

375 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

379 #ifde‡
__USE_GNU


381 #i‚de‡
__USE_FILE_OFFSET64


382 
	$vîsi⁄s‹t
 (c⁄° 
dúít
 **
__e1
,

383 c⁄° 
dúít
 **
__e2
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

386 #ifde‡
__REDIRECT


387 
	`__REDIRECT_NTH
 (
vîsi⁄s‹t
,

388 (c⁄° 
dúít
 **
__e1
,

389 c⁄° 
dúít
 **
__e2
),

390 
vîsi⁄s‹t64
)

391 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

393 
	#vîsi⁄s‹t
 
vîsi⁄s‹t64


	)

397 #ifde‡
__USE_LARGEFILE64


398 
	$vîsi⁄s‹t64
 (c⁄° 
dúít64
 **
__e1
,

399 c⁄° 
dúít64
 **
__e2
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

404 
__END_DECLS


406 
	~<bôs/dúít_ext.h
>

	@/usr/include/dlfcn.h

19 #i‚def 
_DLFCN_H


20 
	#_DLFCN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

27 
	~<bôs/dlf˙.h
>

30 #ifde‡
__USE_GNU


31 
	~<bôs/dl_föd_obje˘.h
>

34 
	tLmid_t
;

37 
	#LM_ID_BASE
 0

	)

38 
	#LM_ID_NEWLM
 -1

	)

45 
	#RTLD_NEXT
 ((*Ë-1l)

	)

50 
	#RTLD_DEFAULT
 ((*Ë0)

	)

52 
__BEGIN_DECLS


56 *
	$dl›í
 (c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

60 
	$dl˛o£
 (*
__h™dÀ
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1));

64 *
	$dlsym
 (*
__ª°ri˘
 
__h™dÀ
,

65 c⁄° *
__ª°ri˘
 
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

67 #ifde‡
__USE_GNU


69 *
	$dlm›í
 (
Lmid_t
 
__nsid
, c⁄° *
__fûe
, 
__mode
Ë
__THROWNL
;

73 *
	$dlvsym
 (*
__ª°ri˘
 
__h™dÀ
,

74 c⁄° *
__ª°ri˘
 
__«me
,

75 c⁄° *
__ª°ri˘
 
__vîsi⁄
)

76 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

82 *
	$dÀº‹
 (Ë
__THROW
;

85 #ifde‡
__USE_GNU


90 c⁄° *
dli_‚ame
;

91 *
dli_fba£
;

92 c⁄° *
dli_¢ame
;

93 *
dli_ßddr
;

94 } 
	tDl_öfo
;

98 
	$dœddr
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
)

99 
__THROW
 
	`__n⁄nuŒ
 ((2));

102 
	$dœddr1
 (c⁄° *
__addªss
, 
Dl_öfo
 *
__öfo
,

103 **
__exåa_öfo
, 
__Êags
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

111 
RTLD_DL_SYMENT
 = 1,

114 
RTLD_DL_LINKMAP
 = 2

123 
	$dlöfo
 (*
__ª°ri˘
 
__h™dÀ
,

124 
__ªque°
, *
__ª°ri˘
 
__¨g
)

125 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

131 
RTLD_DI_LMID
 = 1,

135 
RTLD_DI_LINKMAP
 = 2,

137 
RTLD_DI_CONFIGADDR
 = 3,

144 
RTLD_DI_SERINFO
 = 4,

145 
RTLD_DI_SERINFOSIZE
 = 5,

149 
RTLD_DI_ORIGIN
 = 6,

151 
RTLD_DI_PROFILENAME
 = 7,

152 
RTLD_DI_PROFILEOUT
 = 8,

157 
RTLD_DI_TLS_MODID
 = 9,

163 
RTLD_DI_TLS_DATA
 = 10,

168 
RTLD_DI_PHDR
 = 11,

170 
RTLD_DI_MAX
 = 11

178 *
dls_«me
;

179 
dls_Êags
;

180 } 
	tDl_£Ω©h
;

186 
size_t
 
dls_size
;

187 
dls_˙t
;

188 #i‡
	`__GNUC_PREREQ
 (3, 0)

193 
__exãnsi⁄__
 union

195 
Dl_£Ω©h
 
dls_£Ω©h
[0];

196 
Dl_£Ω©h
 
__dls_£Ω©h_∑d
[1];

199 
Dl_£Ω©h
 
dls_£Ω©h
[1];

201 } 
	tDl_£röfo
;

203 
	sdl_föd_obje˘


205 
__exãnsi⁄__
 
dlfo_Êags
;

206 *
dlfo_m≠_°¨t
;

207 *
dlfo_m≠_íd
;

208 
lök_m≠
 *
dlfo_lök_m≠
;

209 *
dlfo_eh_‰ame
;

210 #i‡
DLFO_STRUCT_HAS_EH_DBASE


211 *
dlfo_eh_dba£
;

212 #i‡
__WORDSIZE
 == 32

213 
__dlfo_eh_dba£_∑d
;

216 #i‡
DLFO_STRUCT_HAS_EH_COUNT


217 
dlfo_eh_cou¡
;

218 
__dlfo_eh_cou¡_∑d
;

220 
__exãnsi⁄__
 
__dÊo_ª£rved
[7];

225 
	$_dl_föd_obje˘
 (*
__addªss
, 
dl_föd_obje˘
 *
__ªsu…
Ë
__THROW
;

230 
__END_DECLS


	@/usr/include/fcntl.h

22 #i‚def 
_FCNTL_H


23 
	#_FCNTL_H
 1

	)

25 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


31 
	~<bôs/ty≥s.h
>

35 
	~<bôs/f˙é.h
>

39 #ifde‡
__O_TMPFILE


40 
	#__OPEN_NEEDS_MODE
(
oÊag
) \

41 (((
oÊag
Ë& 
O_CREAT
Ë!0 || ((oÊagË& 
__O_TMPFILE
Ë=__O_TMPFILE)

	)

43 
	#__OPEN_NEEDS_MODE
(
oÊag
Ë(((oÊagË& 
O_CREAT
Ë!0)

	)

49 #i‚de‡
__mode_t_deföed


50 
__mode_t
 
	tmode_t
;

51 
	#__mode_t_deföed


	)

54 #i‚de‡
__off_t_deföed


55 #i‚de‡
__USE_FILE_OFFSET64


56 
__off_t
 
	toff_t
;

58 
__off64_t
 
	toff_t
;

60 
	#__off_t_deföed


	)

63 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


64 
__off64_t
 
	toff64_t
;

65 
	#__off64_t_deföed


	)

68 #i‚de‡
__pid_t_deföed


69 
__pid_t
 
	tpid_t
;

70 
	#__pid_t_deföed


	)

74 #ifde‡
__USE_XOPEN2K8


75 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 
	~<bôs/°©.h
>

80 
	#S_IFMT
 
__S_IFMT


	)

81 
	#S_IFDIR
 
__S_IFDIR


	)

82 
	#S_IFCHR
 
__S_IFCHR


	)

83 
	#S_IFBLK
 
__S_IFBLK


	)

84 
	#S_IFREG
 
__S_IFREG


	)

85 #ifde‡
__S_IFIFO


86 
	#S_IFIFO
 
__S_IFIFO


	)

88 #ifde‡
__S_IFLNK


89 
	#S_IFLNK
 
__S_IFLNK


	)

91 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


92 
	#S_IFSOCK
 
__S_IFSOCK


	)

97 
	#S_ISUID
 
__S_ISUID


	)

98 
	#S_ISGID
 
__S_ISGID


	)

100 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


102 
	#S_ISVTX
 
__S_ISVTX


	)

105 
	#S_IRUSR
 
__S_IREAD


	)

106 
	#S_IWUSR
 
__S_IWRITE


	)

107 
	#S_IXUSR
 
__S_IEXEC


	)

109 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

111 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

112 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

113 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

115 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

117 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

118 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

119 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

121 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

124 #ifdef 
__USE_MISC


125 #i‚de‡
R_OK


128 
	#R_OK
 4

	)

129 
	#W_OK
 2

	)

130 
	#X_OK
 1

	)

131 
	#F_OK
 0

	)

136 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


137 
	#SEEK_SET
 0

	)

138 
	#SEEK_CUR
 1

	)

139 
	#SEEK_END
 2

	)

148 #ifde‡
__USE_ATFILE


149 
	#AT_FDCWD
 -100

	)

152 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

153 
	#AT_REMOVEDIR
 0x200

	)

155 
	#AT_SYMLINK_FOLLOW
 0x400

	)

156 #ifde‡
__USE_GNU


157 
	#AT_NO_AUTOMOUNT
 0x800

	)

159 
	#AT_EMPTY_PATH
 0x1000

	)

160 
	#AT_STATX_SYNC_TYPE
 0x6000

	)

161 
	#AT_STATX_SYNC_AS_STAT
 0x0000

	)

162 
	#AT_STATX_FORCE_SYNC
 0x2000

	)

163 
	#AT_STATX_DONT_SYNC
 0x4000

	)

164 
	#AT_RECURSIVE
 0x8000

	)

166 
	#AT_EACCESS
 0x200

	)

175 #i‚de‡
__USE_TIME64_REDIRECTS


176 #i‚de‡
__USE_FILE_OFFSET64


177 
f˙é
 (
__fd
, 
__cmd
, ...);

179 #ifde‡
__REDIRECT


180 
__REDIRECT
 (
f˙é
, (
__fd
, 
__cmd
, ...), 
f˙é64
);

182 
	#f˙é
 
f˙é64


	)

185 #ifde‡
__USE_LARGEFILE64


186 
f˙é64
 (
__fd
, 
__cmd
, ...);

189 #ifde‡
__REDIRECT


190 
__REDIRECT_NTH
 (
f˙é
, (
__fd
, 
__ªque°
, ...),

191 
__f˙é_time64
);

192 
__REDIRECT_NTH
 (
f˙é64
, (
__fd
, 
__ªque°
, ...),

193 
__f˙é_time64
);

195 
	$__f˙é_time64
 (
__fd
, 
__ªque°
, ...Ë
__THROW
;

196 
	#f˙é64
 
__f˙é_time64


	)

197 
	#f˙é
 
__f˙é_time64


	)

208 #i‚de‡
__USE_FILE_OFFSET64


209 
	$›í
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

211 #ifde‡
__REDIRECT


212 
	`__REDIRECT
 (
›í
, (c⁄° *
__fûe
, 
__oÊag
, ...), 
›í64
)

213 
	`__n⁄nuŒ
 ((1));

215 
	#›í
 
›í64


	)

218 #ifde‡
__USE_LARGEFILE64


219 
	$›í64
 (c⁄° *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

222 #ifde‡
__USE_ATFILE


232 #i‚de‡
__USE_FILE_OFFSET64


233 
	$›í©
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

234 
	`__n⁄nuŒ
 ((2));

236 #ifde‡
__REDIRECT


237 
	`__REDIRECT
 (
›í©
, (
__fd
, c⁄° *
__fûe
, 
__oÊag
,

238 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

240 
	#›í©
 
›í©64


	)

243 #ifde‡
__USE_LARGEFILE64


244 
	$›í©64
 (
__fd
, c⁄° *
__fûe
, 
__oÊag
, ...)

245 
	`__n⁄nuŒ
 ((2));

254 #i‚de‡
__USE_FILE_OFFSET64


255 
	$¸ót
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

257 #ifde‡
__REDIRECT


258 
	`__REDIRECT
 (
¸ót
, (c⁄° *
__fûe
, 
mode_t
 
__mode
),

259 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

261 
	#¸ót
 
¸ót64


	)

264 #ifde‡
__USE_LARGEFILE64


265 
	$¸ót64
 (c⁄° *
__fûe
, 
mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

268 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

269 && !
deföed
 
__USE_POSIX
))

278 
	#F_ULOCK
 0

	)

279 
	#F_LOCK
 1

	)

280 
	#F_TLOCK
 2

	)

281 
	#F_TEST
 3

	)

283 #i‚de‡
__USE_FILE_OFFSET64


284 
	`lockf
 (
__fd
, 
__cmd
, 
off_t
 
__Àn
);

286 #ifde‡
__REDIRECT


287 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

289 
	#lockf
 
lockf64


	)

292 #ifde‡
__USE_LARGEFILE64


293 
	`lockf64
 (
__fd
, 
__cmd
, 
off64_t
 
__Àn
);

297 #ifde‡
__USE_XOPEN2K


300 #i‚de‡
__USE_FILE_OFFSET64


301 
	$posix_Ádvi£
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
,

302 
__advi£
Ë
__THROW
;

304 #ifde‡
__REDIRECT_NTH


305 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

306 
__off64_t
 
__Àn
, 
__advi£
),

307 
posix_Ádvi£64
);

309 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

312 #ifde‡
__USE_LARGEFILE64


313 
	$posix_Ádvi£64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
,

314 
__advi£
Ë
__THROW
;

322 #i‚de‡
__USE_FILE_OFFSET64


323 
	`posix_ÁŒoˇã
 (
__fd
, 
off_t
 
__off£t
, off_à
__Àn
);

325 #ifde‡
__REDIRECT


326 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

327 
__off64_t
 
__Àn
),

328 
posix_ÁŒoˇã64
);

330 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

333 #ifde‡
__USE_LARGEFILE64


334 
	`posix_ÁŒoˇã64
 (
__fd
, 
off64_t
 
__off£t
, off64_à
__Àn
);

340 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
 \

341 && 
deföed
 
__va_¨g_∑ck_Àn


342 
	~<bôs/f˙é2.h
>

345 
__END_DECLS


	@/usr/include/math.h

23 #i‚def 
_MATH_H


24 
	#_MATH_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

29 #i‡
deföed
 
log
 && deföed 
__GNUC__


30 #w¨nög 
A
 
ma¸o
 
ˇŒed
 
log
 
was
 
Æªady
 
deföed
 
whí
 <
m©h
.
h
> wa†
ö˛uded
.

31 #w¨nög 
This
 
wûl
 
ˇu£
 
compû©i⁄
 
¥obÀms
.

34 
	g__BEGIN_DECLS


37 
	~<bôs/ty≥s.h
>

40 
	~<bôs/m©h-ve˘‹.h
>

43 
	~<bôs/Êﬂä.h
>

47 #i‡
__GNUC_PREREQ
 (3, 3)

48 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
 ())

	)

55 
	#HUGE_VAL
 1e10000

	)

57 #ifde‡
__USE_ISOC99


58 #i‡
__GNUC_PREREQ
 (3, 3)

59 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
 ())

	)

60 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
 ())

	)

62 
	#HUGE_VALF
 1e10000f

	)

63 
	#HUGE_VALL
 1e10000L

	)

66 #i‡
__HAVE_FLOAT16
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

67 
	#HUGE_VAL_F16
 (
	`__buûtö_huge_vÆf16
 ())

	)

69 #i‡
__HAVE_FLOAT32
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

70 
	#HUGE_VAL_F32
 (
	`__buûtö_huge_vÆf32
 ())

	)

72 #i‡
__HAVE_FLOAT64
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

73 
	#HUGE_VAL_F64
 (
	`__buûtö_huge_vÆf64
 ())

	)

75 #i‡
__HAVE_FLOAT128
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

76 
	#HUGE_VAL_F128
 (
	`__buûtö_huge_vÆf128
 ())

	)

78 #i‡
__HAVE_FLOAT32X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

79 
	#HUGE_VAL_F32X
 (
	`__buûtö_huge_vÆf32x
 ())

	)

81 #i‡
__HAVE_FLOAT64X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

82 
	#HUGE_VAL_F64X
 (
	`__buûtö_huge_vÆf64x
 ())

	)

84 #i‡
__HAVE_FLOAT128X
 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

85 
	#HUGE_VAL_F128X
 (
	`__buûtö_huge_vÆf128x
 ())

	)

88 #ifde‡
__USE_ISOC99


90 #i‡
__GNUC_PREREQ
 (3, 3)

91 
	#INFINITY
 (
	`__buûtö_öff
 ())

	)

93 
	#INFINITY
 
HUGE_VALF


	)

97 #i‡
__GNUC_PREREQ
 (3, 3)

98 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

103 
	#NAN
 (0.0‡/ 0.0f)

	)

107 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
)

109 #i‡
__GNUC_PREREQ
 (3, 3)

110 
	#SNANF
 (
	`__buûtö_«nsf
 (""))

	)

111 
	#SNAN
 (
	`__buûtö_«ns
 (""))

	)

112 
	#SNANL
 (
	`__buûtö_«n¶
 (""))

	)

115 #i‡(
__HAVE_FLOAT16
 \

116 && 
__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

117 && (
deföed
 
	g__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

118 
	#SNANF16
 (
	`__buûtö_«nsf16
 (""))

	)

120 #i‡(
__HAVE_FLOAT32
 \

121 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

122 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

123 
	#SNANF32
 (
	`__buûtö_«nsf32
 (""))

	)

125 #i‡(
__HAVE_FLOAT64
 \

126 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

127 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

128 
	#SNANF64
 (
	`__buûtö_«nsf64
 (""))

	)

130 #i‡(
__HAVE_FLOAT128
 \

131 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

132 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

133 
	#SNANF128
 (
	`__buûtö_«nsf128
 (""))

	)

135 #i‡(
__HAVE_FLOAT32X
 \

136 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

137 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

138 
	#SNANF32X
 (
	`__buûtö_«nsf32x
 (""))

	)

140 #i‡(
__HAVE_FLOAT64X
 \

141 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

142 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

143 
	#SNANF64X
 (
	`__buûtö_«nsf64x
 (""))

	)

145 #i‡(
__HAVE_FLOAT128X
 \

146 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
) \

147 && (
deföed
 
__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
)))

148 
	#SNANF128X
 (
	`__buûtö_«nsf128x
 (""))

	)

152 
	~<bôs/Êt-evÆ-mëhod.h
>

154 #ifde‡
__USE_ISOC99


162 #i‡
__GLIBC_FLT_EVAL_METHOD
 == 0 || __GLIBC_FLT_EVAL_METHOD == 16

163 
	tÊﬂt_t
;

164 
	tdoubÀ_t
;

165 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 1

166 
	tÊﬂt_t
;

167 
	tdoubÀ_t
;

168 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 2

169 
	tÊﬂt_t
;

170 
	tdoubÀ_t
;

171 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 32

172 
_Flﬂt32
 
	tÊﬂt_t
;

173 
	tdoubÀ_t
;

174 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 33

175 
_Flﬂt32x
 
	tÊﬂt_t
;

176 
_Flﬂt32x
 
	tdoubÀ_t
;

177 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 64

178 
_Flﬂt64
 
	tÊﬂt_t
;

179 
_Flﬂt64
 
	tdoubÀ_t
;

180 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 65

181 
_Flﬂt64x
 
	tÊﬂt_t
;

182 
_Flﬂt64x
 
	tdoubÀ_t
;

183 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 128

184 
_Flﬂt128
 
	tÊﬂt_t
;

185 
_Flﬂt128
 
	tdoubÀ_t
;

186 #ñi‡
__GLIBC_FLT_EVAL_METHOD
 == 129

187 
_Flﬂt128x
 
	tÊﬂt_t
;

188 
_Flﬂt128x
 
	tdoubÀ_t
;

204 
	~<bôs/Â-logb.h
>

205 #ifde‡
__USE_ISOC99


206 #i‡
__FP_LOGB0_IS_MIN


207 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

209 
	#FP_ILOGB0
 (-2147483647)

	)

211 #i‡
__FP_LOGBNAN_IS_MIN


212 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

214 
	#FP_ILOGBNAN
 2147483647

	)

217 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

218 #i‡
__WORDSIZE
 == 32

219 
	#__FP_LONG_MAX
 0x7fffffffL

	)

221 
	#__FP_LONG_MAX
 0x7fffffffffffffffL

	)

223 #i‡
__FP_LOGB0_IS_MIN


224 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
 - 1)

	)

226 
	#FP_LLOGB0
 (-
__FP_LONG_MAX
)

	)

228 #i‡
__FP_LOGBNAN_IS_MIN


229 
	#FP_LLOGBNAN
 (-
__FP_LONG_MAX
 - 1)

	)

231 
	#FP_LLOGBNAN
 
__FP_LONG_MAX


	)

247 
	~<bôs/Â-Á°.h
>

249 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

253 
FP_INT_UPWARD
 =

254 
	#FP_INT_UPWARD
 0

	)

255 
FP_INT_UPWARD
,

256 
FP_INT_DOWNWARD
 =

257 
	#FP_INT_DOWNWARD
 1

	)

258 
FP_INT_DOWNWARD
,

259 
FP_INT_TOWARDZERO
 =

260 
	#FP_INT_TOWARDZERO
 2

	)

261 
FP_INT_TOWARDZERO
,

262 
FP_INT_TONEARESTFROMZERO
 =

263 
	#FP_INT_TONEARESTFROMZERO
 3

	)

264 
FP_INT_TONEARESTFROMZERO
,

265 
FP_INT_TONEAREST
 =

266 
	#FP_INT_TONEAREST
 4

	)

267 
FP_INT_TONEAREST
,

276 
	#__SIMD_DECL
(
fun˘i⁄
Ë
	`__CONCAT
 (
__DECL_SIMD_
, fun˘i⁄)

	)

278 
	#__MATHCALL_VEC
(
fun˘i⁄
, 
suffix
, 
¨gs
) \

279 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

280 
	`__MATHCALL
 (
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

282 
	#__MATHDECL_VEC
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

283 
	`__SIMD_DECL
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
)) \

284 
	`__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
)

	)

286 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

287 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

288 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

289 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

290 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

291 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

292 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

293 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

294 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

295 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

296 
	#__MATHDECL_1_IMPL
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

297 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

298 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

299 
	`__MATHDECL_1_IMPL
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

302 
	#__MATHDECL_ALIAS
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
Æüs
) \

303 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

305 
	#__MATHREDIR
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
to
) \

306 
ty≥
 
	`__REDIRECT_NTH
 (
	`__MATH_PRECNAME
 (
fun˘i⁄
, 
suffix
), 
¨gs
, 
to
)

	)

308 
	#_MdoubÀ_
 

	)

309 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

310 
	#__MATH_DECLARING_DOUBLE
 1

	)

311 
	#__MATH_DECLARING_FLOATN
 0

	)

312 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

313 
	~<bôs/m©hˇŒs.h
>

314 #unde‡
_MdoubÀ_


315 #unde‡
__MATH_PRECNAME


316 #unde‡
__MATH_DECLARING_DOUBLE


317 #unde‡
__MATH_DECLARING_FLOATN


319 #ifde‡
__USE_ISOC99


325 
	#_MdoubÀ_
 

	)

326 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

327 
	#__MATH_DECLARING_DOUBLE
 0

	)

328 
	#__MATH_DECLARING_FLOATN
 0

	)

329 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

330 
	~<bôs/m©hˇŒs.h
>

331 #unde‡
_MdoubÀ_


332 #unde‡
__MATH_PRECNAME


333 #unde‡
__MATH_DECLARING_DOUBLE


334 #unde‡
__MATH_DECLARING_FLOATN


336 #i‡!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

337 || 
deföed
 
__LDBL_COMPAT
 \

338 || 
deföed
 
_LIBC_TEST


339 #ifde‡
__LDBL_COMPAT


341 #ifde‡
__USE_ISOC99


342 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

343 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

344 #ifde‡
__REDIRECT_NTH


345 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

346 
__∆dbl_√xâow¨df
)

347 
	`__©åibuã__
 ((
__c⁄°__
));

348 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

349 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

350 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

351 (
__x
, 
__y
),

352 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

356 #unde‡
__MATHDECL_1


357 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

358 
	`__MATHREDIR
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

360 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

361 #ifde‡
__REDIRECT_NTH


362 #ifde‡
__USE_ISOC99


363 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

364 
__√xâow¨df_to_õì128
)

365 
	`__©åibuã__
 ((
__c⁄°__
));

366 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

367 
__√xâow¨d_to_õì128
)

368 
	`__©åibuã__
 ((
__c⁄°__
));

370 
	#__dªmõì128
 
__ªmaödîõì128


	)

371 
	#__gammaõì128
 
__lgammaõì128


	)

376 #unde‡
__MATHDECL_1


377 #unde‡
__MATHDECL_ALIAS


379 
	#__REDIRTO
(
fun˘i⁄
, 
suffix
) \

380 
__
 ## 
fun˘i⁄
 ## 
õì128
 ## 
suffix


	)

381 
	#__REDIRTO_ALT
(
fun˘i⁄
, 
suffix
) \

382 
__
 ## 
fun˘i⁄
 ## 
f128
 ## 
suffix


	)

384 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

385 
	`__MATHREDIR
 (
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
	`__REDIRTO
 (fun˘i⁄, suffix))

	)

386 
	#__MATHDECL_ALIAS
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
Æüs
) \

387 
	`__MATHREDIR
 (
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
	`__REDIRTO_ALT
 (
Æüs
, suffix))

	)

393 
	#_MdoubÀ_
 

	)

394 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

395 
	#__MATH_DECLARING_DOUBLE
 0

	)

396 
	#__MATH_DECLARING_FLOATN
 0

	)

397 
	#__MATH_DECLARE_LDOUBLE
 1

	)

398 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

399 
	~<bôs/m©hˇŒs.h
>

401 #unde‡
_MdoubÀ_


402 #unde‡
__MATH_PRECNAME


403 #unde‡
__MATH_DECLARING_DOUBLE


404 #unde‡
__MATH_DECLARING_FLOATN


406 #i‡
deföed
 
__LDBL_COMPAT
 \

407 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

408 #unde‡
__REDIRTO


409 #unde‡
__REDIRTO_ALT


410 #unde‡
__MATHDECL_1


411 #unde‡
__MATHDECL_ALIAS


412 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
) \

413 
	`__MATHDECL_1_IMPL
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

414 
	#__MATHDECL_ALIAS
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
, 
Æüs
) \

415 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
, 
suffix
, 
¨gs
)

	)

424 #i‡
__HAVE_DISTINCT_FLOAT16
 || (
__HAVE_FLOAT16
 && !
deföed
 
_LIBC
)

425 
	#_MdoubÀ_
 
_Flﬂt16


	)

426 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f16
##
	)
r

427 
	#__MATH_DECLARING_DOUBLE
 0

	)

428 
	#__MATH_DECLARING_FLOATN
 1

	)

429 #i‡
__HAVE_DISTINCT_FLOAT16


430 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

432 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

433 
	~<bôs/m©hˇŒs.h
>

435 #unde‡
_MdoubÀ_


436 #unde‡
__MATH_PRECNAME


437 #unde‡
__MATH_DECLARING_DOUBLE


438 #unde‡
__MATH_DECLARING_FLOATN


441 #i‡
__HAVE_DISTINCT_FLOAT32
 || (
__HAVE_FLOAT32
 && !
deföed
 
_LIBC
)

442 
	#_MdoubÀ_
 
_Flﬂt32


	)

443 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32
##
	)
r

444 
	#__MATH_DECLARING_DOUBLE
 0

	)

445 
	#__MATH_DECLARING_FLOATN
 1

	)

446 #i‡
__HAVE_DISTINCT_FLOAT32


447 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

449 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

450 
	~<bôs/m©hˇŒs.h
>

452 #unde‡
_MdoubÀ_


453 #unde‡
__MATH_PRECNAME


454 #unde‡
__MATH_DECLARING_DOUBLE


455 #unde‡
__MATH_DECLARING_FLOATN


458 #i‡
__HAVE_DISTINCT_FLOAT64
 || (
__HAVE_FLOAT64
 && !
deföed
 
_LIBC
)

459 
	#_MdoubÀ_
 
_Flﬂt64


	)

460 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64
##
	)
r

461 
	#__MATH_DECLARING_DOUBLE
 0

	)

462 
	#__MATH_DECLARING_FLOATN
 1

	)

463 #i‡
__HAVE_DISTINCT_FLOAT64


464 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

466 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

467 
	~<bôs/m©hˇŒs.h
>

469 #unde‡
_MdoubÀ_


470 #unde‡
__MATH_PRECNAME


471 #unde‡
__MATH_DECLARING_DOUBLE


472 #unde‡
__MATH_DECLARING_FLOATN


475 #i‡
__HAVE_DISTINCT_FLOAT128
 || (
__HAVE_FLOAT128
 && !
deföed
 
_LIBC
)

476 
	#_MdoubÀ_
 
_Flﬂt128


	)

477 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128
##
	)
r

478 
	#__MATH_DECLARING_DOUBLE
 0

	)

479 
	#__MATH_DECLARING_FLOATN
 1

	)

480 #i‡
__HAVE_DISTINCT_FLOAT128


481 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

483 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

484 
	~<bôs/m©hˇŒs.h
>

486 #unde‡
_MdoubÀ_


487 #unde‡
__MATH_PRECNAME


488 #unde‡
__MATH_DECLARING_DOUBLE


489 #unde‡
__MATH_DECLARING_FLOATN


492 #i‡
__HAVE_DISTINCT_FLOAT32X
 || (
__HAVE_FLOAT32X
 && !
deföed
 
_LIBC
)

493 
	#_MdoubÀ_
 
_Flﬂt32x


	)

494 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f32x
##
	)
r

495 
	#__MATH_DECLARING_DOUBLE
 0

	)

496 
	#__MATH_DECLARING_FLOATN
 1

	)

497 #i‡
__HAVE_DISTINCT_FLOAT32X


498 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

500 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

501 
	~<bôs/m©hˇŒs.h
>

503 #unde‡
_MdoubÀ_


504 #unde‡
__MATH_PRECNAME


505 #unde‡
__MATH_DECLARING_DOUBLE


506 #unde‡
__MATH_DECLARING_FLOATN


509 #i‡
__HAVE_DISTINCT_FLOAT64X
 || (
__HAVE_FLOAT64X
 && !
deföed
 
_LIBC
)

510 
	#_MdoubÀ_
 
_Flﬂt64x


	)

511 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f64x
##
	)
r

512 
	#__MATH_DECLARING_DOUBLE
 0

	)

513 
	#__MATH_DECLARING_FLOATN
 1

	)

514 #i‡
__HAVE_DISTINCT_FLOAT64X


515 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

517 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

518 
	~<bôs/m©hˇŒs.h
>

520 #unde‡
_MdoubÀ_


521 #unde‡
__MATH_PRECNAME


522 #unde‡
__MATH_DECLARING_DOUBLE


523 #unde‡
__MATH_DECLARING_FLOATN


526 #i‡
__HAVE_DISTINCT_FLOAT128X
 || (
__HAVE_FLOAT128X
 && !
deföed
 
_LIBC
)

527 
	#_MdoubÀ_
 
_Flﬂt128x


	)

528 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f128x
##
	)
r

529 
	#__MATH_DECLARING_DOUBLE
 0

	)

530 
	#__MATH_DECLARING_FLOATN
 1

	)

531 #i‡
__HAVE_DISTINCT_FLOAT128X


532 
	~<bôs/m©hˇŒs-hñ≥r-fun˘i⁄s.h
>

534 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

535 
	~<bôs/m©hˇŒs.h
>

537 #unde‡
_MdoubÀ_


538 #unde‡
__MATH_PRECNAME


539 #unde‡
__MATH_DECLARING_DOUBLE


540 #unde‡
__MATH_DECLARING_FLOATN


543 #unde‡
__MATHDECL_1_IMPL


544 #unde‡
__MATHDECL_1


545 #unde‡
__MATHDECL_ALIAS


546 #unde‡
__MATHDECL


547 #unde‡
__MATHCALL


550 
	#__MATHCALL_NARROW_ARGS_1
 (
_M¨g_
 
__x
)

	)

551 
	#__MATHCALL_NARROW_ARGS_2
 (
_M¨g_
 
__x
, _M¨g_ 
__y
)

	)

552 
	#__MATHCALL_NARROW_ARGS_3
 (
_M¨g_
 
__x
, _M¨g_ 
__y
, _M¨g_ 
__z
)

	)

553 
	#__MATHCALL_NARROW_NORMAL
(
func
, 
«rgs
) \

554 
_Mªt_
 
func
 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
 
__THROW


	)

555 
	#__MATHCALL_NARROW_REDIR
(
func
, 
ªdú
, 
«rgs
) \

556 
_Mªt_
 
	`__REDIRECT_NTH
 (
func
, 
__MATHCALL_NARROW_ARGS_
 ## 
«rgs
, \

557 
ªdú
)

	)

558 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

559 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

561 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

563 
	#_Mªt_
 

	)

564 
	#_M¨g_
 

	)

565 
	#__MATHCALL_NAME
(
«me
Ë
f
 ## 
	)
name

566 
	~<bôs/m©hˇŒs-«ºow.h
>

567 #unde‡
_Mªt_


568 #unde‡
_M¨g_


569 #unde‡
__MATHCALL_NAME


571 
	#_Mªt_
 

	)

572 
	#_M¨g_
 

	)

573 
	#__MATHCALL_NAME
(
«me
Ë
f
 ##Çamê## 
l


	)

574 #ifde‡
__LDBL_COMPAT


575 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
f
 ## 
	)
name

576 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
f
 ## 
	)
name

577 #unde‡
__MATHCALL_NARROW


578 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

579 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

580 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

581 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__
 ## 
f32
 ##Çamê## 
õì128


	)

582 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
__
 ## 
f32
 ##Çamê## 
õì128


	)

583 #unde‡
__MATHCALL_NARROW


584 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

585 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

587 
	~<bôs/m©hˇŒs-«ºow.h
>

588 #unde‡
_Mªt_


589 #unde‡
_M¨g_


590 #unde‡
__MATHCALL_NAME


591 #i‡
deföed
 
__LDBL_COMPAT
 \

592 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

593 #unde‡
__MATHCALL_REDIR_NAME


594 #unde‡
__MATHCALL_REDIR_NAME2


595 #unde‡
__MATHCALL_NARROW


596 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

597 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

600 
	#_Mªt_
 

	)

601 
	#_M¨g_
 

	)

602 
	#__MATHCALL_NAME
(
«me
Ë
d
 ##Çamê## 
l


	)

603 #ifde‡
__LDBL_COMPAT


604 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__∆dbl_d
 ##Çamê## 
l


	)

605 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
	)
name

606 #unde‡
__MATHCALL_NARROW


607 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

608 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

609 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

610 
	#__MATHCALL_REDIR_NAME
(
«me
Ë
__
 ## 
f64
 ##Çamê## 
õì128


	)

611 
	#__MATHCALL_REDIR_NAME2
(
«me
Ë
__
 ## 
f64
 ##Çamê## 
õì128


	)

612 #unde‡
__MATHCALL_NARROW


613 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

614 
	`__MATHCALL_NARROW_REDIR
 (
func
, 
ªdú
, 
«rgs
)

	)

616 
	~<bôs/m©hˇŒs-«ºow.h
>

617 #unde‡
_Mªt_


618 #unde‡
_M¨g_


619 #unde‡
__MATHCALL_NAME


620 #i‡
deföed
 
__LDBL_COMPAT
 \

621 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

622 #unde‡
__MATHCALL_REDIR_NAME


623 #unde‡
__MATHCALL_REDIR_NAME2


624 #unde‡
__MATHCALL_NARROW


625 
	#__MATHCALL_NARROW
(
func
, 
ªdú
, 
«rgs
) \

626 
	`__MATHCALL_NARROW_NORMAL
 (
func
, 
«rgs
)

	)

631 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

633 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32


634 
	#_Mªt_
 
_Flﬂt16


	)

635 
	#_M¨g_
 
_Flﬂt32


	)

636 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32


	)

637 
	~<bôs/m©hˇŒs-«ºow.h
>

638 #unde‡
_Mªt_


639 #unde‡
_M¨g_


640 #unde‡
__MATHCALL_NAME


643 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT32X


644 
	#_Mªt_
 
_Flﬂt16


	)

645 
	#_M¨g_
 
_Flﬂt32x


	)

646 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f32x


	)

647 
	~<bôs/m©hˇŒs-«ºow.h
>

648 #unde‡
_Mªt_


649 #unde‡
_M¨g_


650 #unde‡
__MATHCALL_NAME


653 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64


654 
	#_Mªt_
 
_Flﬂt16


	)

655 
	#_M¨g_
 
_Flﬂt64


	)

656 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64


	)

657 
	~<bôs/m©hˇŒs-«ºow.h
>

658 #unde‡
_Mªt_


659 #unde‡
_M¨g_


660 #unde‡
__MATHCALL_NAME


663 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT64X


664 
	#_Mªt_
 
_Flﬂt16


	)

665 
	#_M¨g_
 
_Flﬂt64x


	)

666 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f64x


	)

667 
	~<bôs/m©hˇŒs-«ºow.h
>

668 #unde‡
_Mªt_


669 #unde‡
_M¨g_


670 #unde‡
__MATHCALL_NAME


673 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128


674 
	#_Mªt_
 
_Flﬂt16


	)

675 
	#_M¨g_
 
_Flﬂt128


	)

676 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128


	)

677 
	~<bôs/m©hˇŒs-«ºow.h
>

678 #unde‡
_Mªt_


679 #unde‡
_M¨g_


680 #unde‡
__MATHCALL_NAME


683 #i‡
__HAVE_FLOAT16
 && 
__HAVE_FLOAT128X


684 
	#_Mªt_
 
_Flﬂt16


	)

685 
	#_M¨g_
 
_Flﬂt128x


	)

686 
	#__MATHCALL_NAME
(
«me
Ë
f16
 ##Çamê## 
f128x


	)

687 
	~<bôs/m©hˇŒs-«ºow.h
>

688 #unde‡
_Mªt_


689 #unde‡
_M¨g_


690 #unde‡
__MATHCALL_NAME


693 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT32X


694 
	#_Mªt_
 
_Flﬂt32


	)

695 
	#_M¨g_
 
_Flﬂt32x


	)

696 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f32x


	)

697 
	~<bôs/m©hˇŒs-«ºow.h
>

698 #unde‡
_Mªt_


699 #unde‡
_M¨g_


700 #unde‡
__MATHCALL_NAME


703 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64


704 
	#_Mªt_
 
_Flﬂt32


	)

705 
	#_M¨g_
 
_Flﬂt64


	)

706 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64


	)

707 
	~<bôs/m©hˇŒs-«ºow.h
>

708 #unde‡
_Mªt_


709 #unde‡
_M¨g_


710 #unde‡
__MATHCALL_NAME


713 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT64X


714 
	#_Mªt_
 
_Flﬂt32


	)

715 
	#_M¨g_
 
_Flﬂt64x


	)

716 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f64x


	)

717 
	~<bôs/m©hˇŒs-«ºow.h
>

718 #unde‡
_Mªt_


719 #unde‡
_M¨g_


720 #unde‡
__MATHCALL_NAME


723 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128


724 
	#_Mªt_
 
_Flﬂt32


	)

725 
	#_M¨g_
 
_Flﬂt128


	)

726 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128


	)

727 
	~<bôs/m©hˇŒs-«ºow.h
>

728 #unde‡
_Mªt_


729 #unde‡
_M¨g_


730 #unde‡
__MATHCALL_NAME


733 #i‡
__HAVE_FLOAT32
 && 
__HAVE_FLOAT128X


734 
	#_Mªt_
 
_Flﬂt32


	)

735 
	#_M¨g_
 
_Flﬂt128x


	)

736 
	#__MATHCALL_NAME
(
«me
Ë
f32
 ##Çamê## 
f128x


	)

737 
	~<bôs/m©hˇŒs-«ºow.h
>

738 #unde‡
_Mªt_


739 #unde‡
_M¨g_


740 #unde‡
__MATHCALL_NAME


743 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64


744 
	#_Mªt_
 
_Flﬂt32x


	)

745 
	#_M¨g_
 
_Flﬂt64


	)

746 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64


	)

747 
	~<bôs/m©hˇŒs-«ºow.h
>

748 #unde‡
_Mªt_


749 #unde‡
_M¨g_


750 #unde‡
__MATHCALL_NAME


753 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT64X


754 
	#_Mªt_
 
_Flﬂt32x


	)

755 
	#_M¨g_
 
_Flﬂt64x


	)

756 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f64x


	)

757 
	~<bôs/m©hˇŒs-«ºow.h
>

758 #unde‡
_Mªt_


759 #unde‡
_M¨g_


760 #unde‡
__MATHCALL_NAME


763 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128


764 
	#_Mªt_
 
_Flﬂt32x


	)

765 
	#_M¨g_
 
_Flﬂt128


	)

766 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128


	)

767 
	~<bôs/m©hˇŒs-«ºow.h
>

768 #unde‡
_Mªt_


769 #unde‡
_M¨g_


770 #unde‡
__MATHCALL_NAME


773 #i‡
__HAVE_FLOAT32X
 && 
__HAVE_FLOAT128X


774 
	#_Mªt_
 
_Flﬂt32x


	)

775 
	#_M¨g_
 
_Flﬂt128x


	)

776 
	#__MATHCALL_NAME
(
«me
Ë
f32x
 ##Çamê## 
f128x


	)

777 
	~<bôs/m©hˇŒs-«ºow.h
>

778 #unde‡
_Mªt_


779 #unde‡
_M¨g_


780 #unde‡
__MATHCALL_NAME


783 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT64X


784 
	#_Mªt_
 
_Flﬂt64


	)

785 
	#_M¨g_
 
_Flﬂt64x


	)

786 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f64x


	)

787 
	~<bôs/m©hˇŒs-«ºow.h
>

788 #unde‡
_Mªt_


789 #unde‡
_M¨g_


790 #unde‡
__MATHCALL_NAME


793 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128


794 
	#_Mªt_
 
_Flﬂt64


	)

795 
	#_M¨g_
 
_Flﬂt128


	)

796 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128


	)

797 
	~<bôs/m©hˇŒs-«ºow.h
>

798 #unde‡
_Mªt_


799 #unde‡
_M¨g_


800 #unde‡
__MATHCALL_NAME


803 #i‡
__HAVE_FLOAT64
 && 
__HAVE_FLOAT128X


804 
	#_Mªt_
 
_Flﬂt64


	)

805 
	#_M¨g_
 
_Flﬂt128x


	)

806 
	#__MATHCALL_NAME
(
«me
Ë
f64
 ##Çamê## 
f128x


	)

807 
	~<bôs/m©hˇŒs-«ºow.h
>

808 #unde‡
_Mªt_


809 #unde‡
_M¨g_


810 #unde‡
__MATHCALL_NAME


813 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128


814 
	#_Mªt_
 
_Flﬂt64x


	)

815 
	#_M¨g_
 
_Flﬂt128


	)

816 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128


	)

817 
	~<bôs/m©hˇŒs-«ºow.h
>

818 #unde‡
_Mªt_


819 #unde‡
_M¨g_


820 #unde‡
__MATHCALL_NAME


823 #i‡
__HAVE_FLOAT64X
 && 
__HAVE_FLOAT128X


824 
	#_Mªt_
 
_Flﬂt64x


	)

825 
	#_M¨g_
 
_Flﬂt128x


	)

826 
	#__MATHCALL_NAME
(
«me
Ë
f64x
 ##Çamê## 
f128x


	)

827 
	~<bôs/m©hˇŒs-«ºow.h
>

828 #unde‡
_Mªt_


829 #unde‡
_M¨g_


830 #unde‡
__MATHCALL_NAME


833 #i‡
__HAVE_FLOAT128
 && 
__HAVE_FLOAT128X


834 
	#_Mªt_
 
_Flﬂt128


	)

835 
	#_M¨g_
 
_Flﬂt128x


	)

836 
	#__MATHCALL_NAME
(
«me
Ë
f128
 ##Çamê## 
f128x


	)

837 
	~<bôs/m©hˇŒs-«ºow.h
>

838 #unde‡
_Mªt_


839 #unde‡
_M¨g_


840 #unde‡
__MATHCALL_NAME


845 #unde‡
__MATHCALL_NARROW_ARGS_1


846 #unde‡
__MATHCALL_NARROW_ARGS_2


847 #unde‡
__MATHCALL_NARROW_ARGS_3


848 #unde‡
__MATHCALL_NARROW_NORMAL


849 #unde‡
__MATHCALL_NARROW_REDIR


850 #unde‡
__MATHCALL_NARROW


852 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


854 
signgam
;

857 #i‡(
__HAVE_DISTINCT_FLOAT16
 \

858 || 
__HAVE_DISTINCT_FLOAT32
 \

859 || 
__HAVE_DISTINCT_FLOAT64
 \

860 || 
__HAVE_DISTINCT_FLOAT32X
 \

861 || 
__HAVE_DISTINCT_FLOAT64X
 \

862 || 
__HAVE_DISTINCT_FLOAT128X
)

875 #ifde‡
__NO_LONG_DOUBLE_MATH


876 #i‡
__HAVE_DISTINCT_FLOAT128


879 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

880 ( (
TG_ARG
Ë= (Ë? 
FUNC
 ## 
f
 
ARGS
 : FUNC ARGS)

	)

881 #ñi‡
__HAVE_DISTINCT_FLOAT128


882 #i‡
__HAVE_GENERIC_SELECTION


883 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT32


884 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
Ë
_Flﬂt32
: FUNC ## 
f
 ARGS,

	)

886 
	#__MATH_TG_F32
(
FUNC
, 
ARGS
)

	)

888 #i‡
__HAVE_FLOATN_NOT_TYPEDEF
 && 
__HAVE_FLOAT64X


889 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


890 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
l
 ARGS,

	)

892 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
Ë
_Flﬂt64x
: FUNC ## 
f128
 ARGS,

	)

895 
	#__MATH_TG_F64X
(
FUNC
, 
ARGS
)

	)

897 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

898 
	`_Gíîic
 ((
TG_ARG
), \

899 : 
FUNC
 ## 
f
 
ARGS
, \

900 
	`__MATH_TG_F32
 (
FUNC
, 
ARGS
) \

901 : 
FUNC
 
ARGS
, \

902 : 
FUNC
 ## 
l
 
ARGS
, \

903 
	`__MATH_TG_F64X
 (
FUNC
, 
ARGS
) \

904 
_Flﬂt128
: 
FUNC
 ## 
f128
 
ARGS
)

	)

906 #i‡
__HAVE_FLOATN_NOT_TYPEDEF


909 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

910 
__buûtö_choo£_ex¥
 \

911 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

912 
FUNC
 ## 
f
 
ARGS
, \

913 
__buûtö_choo£_ex¥
 \

914 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

915 
FUNC
 
ARGS
, \

916 
__buûtö_choo£_ex¥
 \

917 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
TG_ARG
), ), \

918 
FUNC
 ## 
l
 
ARGS
, \

919 
FUNC
 ## 
f128
 
ARGS
)))

	)

922 
	#__MATH_TG
(
TG_ARG
, 
FUNC
, 
ARGS
) \

923 ( (
TG_ARG
) ==  () \

924 ? 
FUNC
 ## 
f
 
ARGS
 \

925 :  (
TG_ARG
) ==  () \

926 ? 
FUNC
 
ARGS
 \

927 : 
FUNC
 ## 
l
 
ARGS
)

	)

931 #ifde‡
__USE_ISOC99


936 
FP_NAN
 =

937 
	#FP_NAN
 0

	)

938 
FP_NAN
,

939 
FP_INFINITE
 =

940 
	#FP_INFINITE
 1

	)

941 
FP_INFINITE
,

942 
FP_ZERO
 =

943 
	#FP_ZERO
 2

	)

944 
FP_ZERO
,

945 
FP_SUBNORMAL
 =

946 
	#FP_SUBNORMAL
 3

	)

947 
FP_SUBNORMAL
,

948 
FP_NORMAL
 =

949 
	#FP_NORMAL
 4

	)

950 
FP_NORMAL


958 #i‡((
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

959 || 
	`__glibc_˛™g_¥îeq
 (2,8)) \

960 && (!
deföed
 
__OPTIMIZE_SIZE__
 || deföed 
__˝lu•lus
)

967 
	#Â˛assify
(
x
Ë
	`__buûtö_Â˛assify
 (
FP_NAN
, 
FP_INFINITE
, \

968 
FP_NORMAL
, 
FP_SUBNORMAL
, 
FP_ZERO
, 
x
)

	)

970 
	#Â˛assify
(
x
Ë
	`__MATH_TG
 ((x), 
__Â˛assify
, (x))

	)

974 #i‡
	`__GNUC_PREREQ
 (6,0Ë|| 
	`__glibc_˛™g_¥îeq
 (3,3)

975 
	#signbô
(
x
Ë
	`__buûtö_signbô
 (x)

	)

976 #ñi‡
deföed
 
__˝lu•lus


984 
	#signbô
(
x
Ë
	`__buûtö_signbôl
 (x)

	)

985 #ñi‡
	`__GNUC_PREREQ
 (4,0)

986 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__buûtö_signbô
, (x))

	)

988 
	#signbô
(
x
Ë
	`__MATH_TG
 ((x), 
__signbô
, (x))

	)

992 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

993 || 
	$__glibc_˛™g_¥îeq
 (2,8)

994 
	#isföôe
(
x
Ë
	`__buûtö_isföôe
 (x)

	)

996 
	#isföôe
(
x
Ë
	`__MATH_TG
 ((x), 
__föôe
, (x))

	)

1000 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

1001 || 
	$__glibc_˛™g_¥îeq
 (2,8)

1002 
	#i¢‹mÆ
(
x
Ë
	`__buûtö_i¢‹mÆ
 (x)

	)

1004 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

1009 #i‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

1010 || 
	$__glibc_˛™g_¥îeq
 (2,8)

1011 
	#i¢™
(
x
Ë
	`__buûtö_i¢™
 (x)

	)

1013 
	#i¢™
(
x
Ë
	`__MATH_TG
 ((x), 
__i¢™
, (x))

	)

1017 #i‡
__HAVE_DISTINCT_FLOAT128
 && !
	`__GNUC_PREREQ
 (7,0) \

1018 && !
deföed
 
__SUPPORT_SNAN__
 && !deföed 
__˝lu•lus
 \

1019 && !
deföed
 
__˛™g__


1025 
	#isöf
(
x
) \

1026 (
	`__buûtö_ty≥s_com∑tibÀ_p
 (
	`__ty≥of
 (
x
), 
_Flﬂt128
) \

1027 ? 
	`__isöff128
 (
x
Ë: 
	`__buûtö_isöf_sign
 (x))

	)

1028 #ñi‡(
	`__GNUC_PREREQ
 (4,4Ë&& !
deföed
 
__SUPPORT_SNAN__
) \

1029 || 
	$__glibc_˛™g_¥îeq
 (3,7)

1030 
	#isöf
(
x
Ë
	`__buûtö_isöf_sign
 (x)

	)

1032 
	#isöf
(
x
Ë
	`__MATH_TG
 ((x), 
__isöf
, (x))

	)

1036 
	#MATH_ERRNO
 1

	)

1037 
	#MATH_ERREXCEPT
 2

	)

1044 #ifde‡
__FAST_MATH__


1045 
	#m©h_îrh™dlög
 0

	)

1046 #ñi‡
deföed
 
__NO_MATH_ERRNO__


1047 
	#m©h_îrh™dlög
 (
MATH_ERREXCEPT
)

	)

1049 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

1054 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1055 
	~<bôs/isˇn⁄iˇl.h
>

1058 #i‚de‡
__˝lu•lus


1059 
	#issig«lög
(
x
Ë
	`__MATH_TG
 ((x), 
__issig«lög
, (x))

	)

1068 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lögf
 (__val); }

1069 
ölöe
 
	`issig«lög
 (
__vÆ
Ë{  
	`__issig«lög
 (__val); }

1070 
ölöe
 

1071 
	`issig«lög
 (
__vÆ
)

1073 #ifde‡
__NO_LONG_DOUBLE_MATH


1074  
	`__issig«lög
 (
__vÆ
);

1076  
	`__issig«lögl
 (
__vÆ
);

1079 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1082 
ölöe
 
	`issig«lög
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__issig«lögf128
 (__val); }

1084 
	}
}

1088 
	#issubn‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_SUBNORMAL
)

	)

1091 #i‚de‡
__˝lu•lus


1092 #ifde‡
__SUPPORT_SNAN__


1093 
	#iszîo
(
x
Ë(
	`Â˛assify
 (xË=
FP_ZERO
)

	)

1095 
	#iszîo
(
x
Ë(((
	`__ty≥of
 (x)Ë(x)Ë=0)

	)

1099 #ifde‡
__SUPPORT_SNAN__


1100 
ölöe
 

1101 
iszîo
 (
__vÆ
)

1103  
__Â˛assifyf
 (
__vÆ
Ë=
FP_ZERO
;

1105 
ölöe
 

1106 
iszîo
 (
__vÆ
)

1108  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1110 
ölöe
 

1111 
iszîo
 (
__vÆ
)

1113 #ifde‡
__NO_LONG_DOUBLE_MATH


1114  
__Â˛assify
 (
__vÆ
Ë=
FP_ZERO
;

1116  
__Â˛assifyl
 (
__vÆ
Ë=
FP_ZERO
;

1119 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1122 
ölöe
 

1123 
iszîo
 (
_Flﬂt128
 
__vÆ
)

1125  
__Â˛assifyf128
 (
__vÆ
Ë=
FP_ZERO
;

1129 
ãm∂©e
 <
˛ass
 
__T
> 
ölöe
 
boﬁ


1130 
iszîo
 (
__T
 
__vÆ
)

1132  
__vÆ
 == 0;

1139 #ifde‡
__USE_XOPEN


1141 
	#MAXFLOAT
 3.40282347e+38F

	)

1146 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


1147 
	#M_E
 2.7182818284590452354

	)

1148 
	#M_LOG2E
 1.4426950408889634074

	)

1149 
	#M_LOG10E
 0.43429448190325182765

	)

1150 
	#M_LN2
 0.69314718055994530942

	)

1151 
	#M_LN10
 2.30258509299404568402

	)

1152 
	#M_PI
 3.14159265358979323846

	)

1153 
	#M_PI_2
 1.57079632679489661923

	)

1154 
	#M_PI_4
 0.78539816339744830962

	)

1155 
	#M_1_PI
 0.31830988618379067154

	)

1156 
	#M_2_PI
 0.63661977236758134308

	)

1157 
	#M_2_SQRTPI
 1.12837916709551257390

	)

1158 
	#M_SQRT2
 1.41421356237309504880

	)

1159 
	#M_SQRT1_2
 0.70710678118654752440

	)

1163 #ifde‡
__USE_GNU


1164 
	#M_Ef
 2.7182818284590452354‡

	)

1165 
	#M_LOG2Ef
 1.4426950408889634074‡

	)

1166 
	#M_LOG10Ef
 0.43429448190325182765‡

	)

1167 
	#M_LN2f
 0.69314718055994530942‡

	)

1168 
	#M_LN10f
 2.30258509299404568402‡

	)

1169 
	#M_PIf
 3.14159265358979323846‡

	)

1170 
	#M_PI_2f
 1.57079632679489661923‡

	)

1171 
	#M_PI_4f
 0.78539816339744830962‡

	)

1172 
	#M_1_PIf
 0.31830988618379067154‡

	)

1173 
	#M_2_PIf
 0.63661977236758134308‡

	)

1174 
	#M_2_SQRTPIf
 1.12837916709551257390‡

	)

1175 
	#M_SQRT2f
 1.41421356237309504880‡

	)

1176 
	#M_SQRT1_2f
 0.70710678118654752440‡

	)

1182 #ifde‡
__USE_GNU


1183 
	#M_El
 2.718281828459045235360287471352662498L

	)

1184 
	#M_LOG2El
 1.442695040888963407359924681001892137L

	)

1185 
	#M_LOG10El
 0.434294481903251827651128918916605082L

	)

1186 
	#M_LN2l
 0.693147180559945309417232121458176568L

	)

1187 
	#M_LN10l
 2.302585092994045684017991454684364208L

	)

1188 
	#M_PIl
 3.141592653589793238462643383279502884L

	)

1189 
	#M_PI_2l
 1.570796326794896619231321691639751442L

	)

1190 
	#M_PI_4l
 0.785398163397448309615660845819875721L

	)

1191 
	#M_1_PIl
 0.318309886183790671537767526745028724L

	)

1192 
	#M_2_PIl
 0.636619772367581343075535053490057448L

	)

1193 
	#M_2_SQRTPIl
 1.128379167095512573896158903121545172L

	)

1194 
	#M_SQRT2l
 1.414213562373095048801688724209698079L

	)

1195 
	#M_SQRT1_2l
 0.707106781186547524400844362104849039L

	)

1198 #i‡
__HAVE_FLOAT16
 && 
deföed
 
__USE_GNU


1199 
	#M_Ef16
 
	`__f16
 (2.718281828459045235360287471352662498Ë

	)

1200 
	#M_LOG2Ef16
 
	`__f16
 (1.442695040888963407359924681001892137Ë

	)

1201 
	#M_LOG10Ef16
 
	`__f16
 (0.434294481903251827651128918916605082Ë

	)

1202 
	#M_LN2f16
 
	`__f16
 (0.693147180559945309417232121458176568Ë

	)

1203 
	#M_LN10f16
 
	`__f16
 (2.302585092994045684017991454684364208Ë

	)

1204 
	#M_PIf16
 
	`__f16
 (3.141592653589793238462643383279502884Ë

	)

1205 
	#M_PI_2f16
 
	`__f16
 (1.570796326794896619231321691639751442Ë

	)

1206 
	#M_PI_4f16
 
	`__f16
 (0.785398163397448309615660845819875721Ë

	)

1207 
	#M_1_PIf16
 
	`__f16
 (0.318309886183790671537767526745028724Ë

	)

1208 
	#M_2_PIf16
 
	`__f16
 (0.636619772367581343075535053490057448Ë

	)

1209 
	#M_2_SQRTPIf16
 
	`__f16
 (1.128379167095512573896158903121545172Ë

	)

1210 
	#M_SQRT2f16
 
	`__f16
 (1.414213562373095048801688724209698079Ë

	)

1211 
	#M_SQRT1_2f16
 
	`__f16
 (0.707106781186547524400844362104849039Ë

	)

1214 #i‡
__HAVE_FLOAT32
 && 
deföed
 
__USE_GNU


1215 
	#M_Ef32
 
	`__f32
 (2.718281828459045235360287471352662498Ë

	)

1216 
	#M_LOG2Ef32
 
	`__f32
 (1.442695040888963407359924681001892137Ë

	)

1217 
	#M_LOG10Ef32
 
	`__f32
 (0.434294481903251827651128918916605082Ë

	)

1218 
	#M_LN2f32
 
	`__f32
 (0.693147180559945309417232121458176568Ë

	)

1219 
	#M_LN10f32
 
	`__f32
 (2.302585092994045684017991454684364208Ë

	)

1220 
	#M_PIf32
 
	`__f32
 (3.141592653589793238462643383279502884Ë

	)

1221 
	#M_PI_2f32
 
	`__f32
 (1.570796326794896619231321691639751442Ë

	)

1222 
	#M_PI_4f32
 
	`__f32
 (0.785398163397448309615660845819875721Ë

	)

1223 
	#M_1_PIf32
 
	`__f32
 (0.318309886183790671537767526745028724Ë

	)

1224 
	#M_2_PIf32
 
	`__f32
 (0.636619772367581343075535053490057448Ë

	)

1225 
	#M_2_SQRTPIf32
 
	`__f32
 (1.128379167095512573896158903121545172Ë

	)

1226 
	#M_SQRT2f32
 
	`__f32
 (1.414213562373095048801688724209698079Ë

	)

1227 
	#M_SQRT1_2f32
 
	`__f32
 (0.707106781186547524400844362104849039Ë

	)

1230 #i‡
__HAVE_FLOAT64
 && 
deföed
 
__USE_GNU


1231 
	#M_Ef64
 
	`__f64
 (2.718281828459045235360287471352662498Ë

	)

1232 
	#M_LOG2Ef64
 
	`__f64
 (1.442695040888963407359924681001892137Ë

	)

1233 
	#M_LOG10Ef64
 
	`__f64
 (0.434294481903251827651128918916605082Ë

	)

1234 
	#M_LN2f64
 
	`__f64
 (0.693147180559945309417232121458176568Ë

	)

1235 
	#M_LN10f64
 
	`__f64
 (2.302585092994045684017991454684364208Ë

	)

1236 
	#M_PIf64
 
	`__f64
 (3.141592653589793238462643383279502884Ë

	)

1237 
	#M_PI_2f64
 
	`__f64
 (1.570796326794896619231321691639751442Ë

	)

1238 
	#M_PI_4f64
 
	`__f64
 (0.785398163397448309615660845819875721Ë

	)

1239 
	#M_1_PIf64
 
	`__f64
 (0.318309886183790671537767526745028724Ë

	)

1240 
	#M_2_PIf64
 
	`__f64
 (0.636619772367581343075535053490057448Ë

	)

1241 
	#M_2_SQRTPIf64
 
	`__f64
 (1.128379167095512573896158903121545172Ë

	)

1242 
	#M_SQRT2f64
 
	`__f64
 (1.414213562373095048801688724209698079Ë

	)

1243 
	#M_SQRT1_2f64
 
	`__f64
 (0.707106781186547524400844362104849039Ë

	)

1246 #i‡
__HAVE_FLOAT128
 && 
deföed
 
__USE_GNU


1247 
	#M_Ef128
 
	`__f128
 (2.718281828459045235360287471352662498Ë

	)

1248 
	#M_LOG2Ef128
 
	`__f128
 (1.442695040888963407359924681001892137Ë

	)

1249 
	#M_LOG10Ef128
 
	`__f128
 (0.434294481903251827651128918916605082Ë

	)

1250 
	#M_LN2f128
 
	`__f128
 (0.693147180559945309417232121458176568Ë

	)

1251 
	#M_LN10f128
 
	`__f128
 (2.302585092994045684017991454684364208Ë

	)

1252 
	#M_PIf128
 
	`__f128
 (3.141592653589793238462643383279502884Ë

	)

1253 
	#M_PI_2f128
 
	`__f128
 (1.570796326794896619231321691639751442Ë

	)

1254 
	#M_PI_4f128
 
	`__f128
 (0.785398163397448309615660845819875721Ë

	)

1255 
	#M_1_PIf128
 
	`__f128
 (0.318309886183790671537767526745028724Ë

	)

1256 
	#M_2_PIf128
 
	`__f128
 (0.636619772367581343075535053490057448Ë

	)

1257 
	#M_2_SQRTPIf128
 
	`__f128
 (1.128379167095512573896158903121545172Ë

	)

1258 
	#M_SQRT2f128
 
	`__f128
 (1.414213562373095048801688724209698079Ë

	)

1259 
	#M_SQRT1_2f128
 
	`__f128
 (0.707106781186547524400844362104849039Ë

	)

1262 #i‡
__HAVE_FLOAT32X
 && 
deföed
 
__USE_GNU


1263 
	#M_Ef32x
 
	`__f32x
 (2.718281828459045235360287471352662498Ë

	)

1264 
	#M_LOG2Ef32x
 
	`__f32x
 (1.442695040888963407359924681001892137Ë

	)

1265 
	#M_LOG10Ef32x
 
	`__f32x
 (0.434294481903251827651128918916605082Ë

	)

1266 
	#M_LN2f32x
 
	`__f32x
 (0.693147180559945309417232121458176568Ë

	)

1267 
	#M_LN10f32x
 
	`__f32x
 (2.302585092994045684017991454684364208Ë

	)

1268 
	#M_PIf32x
 
	`__f32x
 (3.141592653589793238462643383279502884Ë

	)

1269 
	#M_PI_2f32x
 
	`__f32x
 (1.570796326794896619231321691639751442Ë

	)

1270 
	#M_PI_4f32x
 
	`__f32x
 (0.785398163397448309615660845819875721Ë

	)

1271 
	#M_1_PIf32x
 
	`__f32x
 (0.318309886183790671537767526745028724Ë

	)

1272 
	#M_2_PIf32x
 
	`__f32x
 (0.636619772367581343075535053490057448Ë

	)

1273 
	#M_2_SQRTPIf32x
 
	`__f32x
 (1.128379167095512573896158903121545172Ë

	)

1274 
	#M_SQRT2f32x
 
	`__f32x
 (1.414213562373095048801688724209698079Ë

	)

1275 
	#M_SQRT1_2f32x
 
	`__f32x
 (0.707106781186547524400844362104849039Ë

	)

1278 #i‡
__HAVE_FLOAT64X
 && 
deföed
 
__USE_GNU


1279 
	#M_Ef64x
 
	`__f64x
 (2.718281828459045235360287471352662498Ë

	)

1280 
	#M_LOG2Ef64x
 
	`__f64x
 (1.442695040888963407359924681001892137Ë

	)

1281 
	#M_LOG10Ef64x
 
	`__f64x
 (0.434294481903251827651128918916605082Ë

	)

1282 
	#M_LN2f64x
 
	`__f64x
 (0.693147180559945309417232121458176568Ë

	)

1283 
	#M_LN10f64x
 
	`__f64x
 (2.302585092994045684017991454684364208Ë

	)

1284 
	#M_PIf64x
 
	`__f64x
 (3.141592653589793238462643383279502884Ë

	)

1285 
	#M_PI_2f64x
 
	`__f64x
 (1.570796326794896619231321691639751442Ë

	)

1286 
	#M_PI_4f64x
 
	`__f64x
 (0.785398163397448309615660845819875721Ë

	)

1287 
	#M_1_PIf64x
 
	`__f64x
 (0.318309886183790671537767526745028724Ë

	)

1288 
	#M_2_PIf64x
 
	`__f64x
 (0.636619772367581343075535053490057448Ë

	)

1289 
	#M_2_SQRTPIf64x
 
	`__f64x
 (1.128379167095512573896158903121545172Ë

	)

1290 
	#M_SQRT2f64x
 
	`__f64x
 (1.414213562373095048801688724209698079Ë

	)

1291 
	#M_SQRT1_2f64x
 
	`__f64x
 (0.707106781186547524400844362104849039Ë

	)

1294 #i‡
__HAVE_FLOAT128X
 && 
deföed
 
__USE_GNU


1298 #ifde‡
__USE_ISOC99


1299 #i‡
__GNUC_PREREQ
 (3, 1)

1306 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

1307 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

1308 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

1309 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

1310 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

1311 
	#isun‹dîed
(
x
, 
y
Ë
	`__buûtö_isun‹dîed
(x, y)

	)

1313 
	#isgª©î
(
x
, 
y
) \

1314 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1315 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; }))

	)

1316 
	#isgª©îequÆ
(
x
, 
y
) \

1317 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1318 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

1319 
	#i¶ess
(
x
, 
y
) \

1320 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1321 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

1322 
	#i¶es£quÆ
(
x
, 
y
) \

1323 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1324 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

1325 
	#i¶essgª©î
(
x
, 
y
) \

1326 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__x
 = (x); __ty≥of__ (
y
Ë
__y
 = (y); \

1327 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x !__y; }))

	)

1329 
	#isun‹dîed
(
x
, 
y
) \

1330 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of__
 (
x
Ë
__u
 = (x); __ty≥of__ (
y
Ë
__v
 = (y); \

1331 
__u
 !
__v
 && (__u !__u || __v !__v); }))

	)

1335 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

1338 #i‡
__FLT_EVAL_METHOD__
 == 2 || __FLT_EVAL_METHOD__ > 64

1339 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0L)

	)

1340 #ñi‡
__FLT_EVAL_METHOD__
 == 1 || __FLT_EVAL_METHOD__ > 32

1341 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0)

	)

1342 #ñi‡
__FLT_EVAL_METHOD__
 == 0 || __FLT_EVAL_METHOD__ == 32

1343 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (yË+ 0.0f)

	)

1345 
	#__MATH_EVAL_FMT2
(
x
, 
y
Ë((xË+ (y))

	)

1350 #i‡!
deföed
 
__˝lu•lus
 || (__˝lu•lu†< 201103L && !deföed 
__GNUC__
)

1351 
	#i£qsig
(
x
, 
y
) \

1352 
	`__MATH_TG
 (
	`__MATH_EVAL_FMT2
 (
x
, 
y
), 
__i£qsig
, ((x), (y)))

	)

1365 
ãm∂©e
<
ty≥«me
> 
__i£qsig_ty≥
;

1367 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1369 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1371  
__i£qsigf
 (
__x
, 
__y
);

1375 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1377 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1379  
__i£qsig
 (
__x
, 
__y
);

1383 
ãm∂©e
<> 
__i£qsig_ty≥
<>

1385 
__ˇŒ
 (
__x
, 
__y
Ë
throw
 ()

1387 #i‚de‡
__NO_LONG_DOUBLE_MATH


1388  
__i£qsigl
 (
__x
, 
__y
);

1390  
__i£qsig
 (
__x
, 
__y
);

1395 #i‡
__HAVE_FLOAT32
 && 
__GNUC_PREREQ
 (13, 0)

1396 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt32
>

1398 
__ˇŒ
 (
_Flﬂt32
 
__x
, _Flﬂt32 
__y
Ë
throw
 ()

1400  
__i£qsigf
 (
__x
, 
__y
);

1405 #i‡
__HAVE_FLOAT64
 && 
__GNUC_PREREQ
 (13, 0)

1406 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt64
>

1408 
__ˇŒ
 (
_Flﬂt64
 
__x
, _Flﬂt64 
__y
Ë
throw
 ()

1410  
__i£qsig
 (
__x
, 
__y
);

1415 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL
 || (
__HAVE_FLOAT128
 && 
__GNUC_PREREQ
 (13, 0))

1418 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt128
>

1420 
__ˇŒ
 (
_Flﬂt128
 
__x
, _Flﬂt128 
__y
Ë
throw
 ()

1422 #i‡
__HAVE_FLOAT128_UNLIKE_LDBL


1423  
__i£qsigf128
 (
__x
, 
__y
);

1425  
__i£qsigl
 (
__x
, 
__y
);

1431 #i‡
__HAVE_FLOAT32X
 && 
__GNUC_PREREQ
 (13, 0)

1432 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt32x
>

1434 
__ˇŒ
 (
_Flﬂt32x
 
__x
, _Flﬂt32x 
__y
Ë
throw
 ()

1436  
__i£qsig
 (
__x
, 
__y
);

1441 #i‡
__HAVE_FLOAT64X
 && 
__GNUC_PREREQ
 (13, 0)

1442 
ãm∂©e
<> 
__i£qsig_ty≥
<
_Flﬂt64x
>

1444 
__ˇŒ
 (
_Flﬂt64x
 
__x
, _Flﬂt64x 
__y
Ë
throw
 ()

1446 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


1447  
__i£qsigl
 (
__x
, 
__y
);

1449  
__i£qsigf128
 (
__x
, 
__y
);

1455 
ãm∂©e
<
ty≥«me
 
_T1
,Åy≥«mê
_T2
>

1456 
ölöe
 

1457 
i£qsig
 (
_T1
 
__x
, 
_T2
 
__y
Ë
throw
 ()

1459 #i‡
__˝lu•lus
 >= 201103L

1460 
de˛ty≥
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1462 
__ty≥of
 (
	t__MATH_EVAL_FMT2
 (
	t__x
, 
	t__y
)Ë
	t_T3
;

1464  
__i£qsig_ty≥
<
_T3
>::
__ˇŒ
 (
__x
, 
__y
);

1472 
__END_DECLS


	@/usr/include/memory.h

22 #i‚def 
_MEMORY_H


23 
	#_MEMORY_H
 1

	)

25 
	~<„©uªs.h
>

28 #i‚def 
_STRING_H


29 
	~<°rög.h
>

	@/usr/include/stdint.h

22 #i‚de‡
_STDINT_H


23 
	#_STDINT_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

27 
	~<bôs/ty≥s.h
>

28 
	~<bôs/wch¨.h
>

29 
	~<bôs/w‹dsize.h
>

34 
	~<bôs/°döt-öä.h
>

37 
	~<bôs/°döt-uöä.h
>

41 
	~<bôs/°döt-Àa°.h
>

47 sig√d 
	töt_Á°8_t
;

48 #i‡
__WORDSIZE
 == 64

49 
	töt_Á°16_t
;

50 
	töt_Á°32_t
;

51 
	töt_Á°64_t
;

53 
	töt_Á°16_t
;

54 
	töt_Á°32_t
;

55 
__exãnsi⁄__


56 
	töt_Á°64_t
;

60 
	tuöt_Á°8_t
;

61 #i‡
__WORDSIZE
 == 64

62 
	tuöt_Á°16_t
;

63 
	tuöt_Á°32_t
;

64 
	tuöt_Á°64_t
;

66 
	tuöt_Á°16_t
;

67 
	tuöt_Á°32_t
;

68 
__exãnsi⁄__


69 
	tuöt_Á°64_t
;

74 #i‡
__WORDSIZE
 == 64

75 #i‚de‡
__öçå_t_deföed


76 
	töçå_t
;

77 
	#__öçå_t_deföed


	)

79 
	tuöçå_t
;

81 #i‚de‡
__öçå_t_deföed


82 
	töçå_t
;

83 
	#__öçå_t_deföed


	)

85 
	tuöçå_t
;

90 
__ötmax_t
 
	tötmax_t
;

91 
__uötmax_t
 
	tuötmax_t
;

94 #i‡
__WORDSIZE
 == 64

95 
	#__INT64_C
(
c
Ë¯## 
L


	)

96 
	#__UINT64_C
(
c
Ë¯## 
UL


	)

98 
	#__INT64_C
(
c
Ë¯## 
LL


	)

99 
	#__UINT64_C
(
c
Ë¯## 
ULL


	)

105 
	#INT8_MIN
 (-128)

	)

106 
	#INT16_MIN
 (-32767-1)

	)

107 
	#INT32_MIN
 (-2147483647-1)

	)

108 
	#INT64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

110 
	#INT8_MAX
 (127)

	)

111 
	#INT16_MAX
 (32767)

	)

112 
	#INT32_MAX
 (2147483647)

	)

113 
	#INT64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

116 
	#UINT8_MAX
 (255)

	)

117 
	#UINT16_MAX
 (65535)

	)

118 
	#UINT32_MAX
 (4294967295U)

	)

119 
	#UINT64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

123 
	#INT_LEAST8_MIN
 (-128)

	)

124 
	#INT_LEAST16_MIN
 (-32767-1)

	)

125 
	#INT_LEAST32_MIN
 (-2147483647-1)

	)

126 
	#INT_LEAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

128 
	#INT_LEAST8_MAX
 (127)

	)

129 
	#INT_LEAST16_MAX
 (32767)

	)

130 
	#INT_LEAST32_MAX
 (2147483647)

	)

131 
	#INT_LEAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

134 
	#UINT_LEAST8_MAX
 (255)

	)

135 
	#UINT_LEAST16_MAX
 (65535)

	)

136 
	#UINT_LEAST32_MAX
 (4294967295U)

	)

137 
	#UINT_LEAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

141 
	#INT_FAST8_MIN
 (-128)

	)

142 #i‡
__WORDSIZE
 == 64

143 
	#INT_FAST16_MIN
 (-9223372036854775807L-1)

	)

144 
	#INT_FAST32_MIN
 (-9223372036854775807L-1)

	)

146 
	#INT_FAST16_MIN
 (-2147483647-1)

	)

147 
	#INT_FAST32_MIN
 (-2147483647-1)

	)

149 
	#INT_FAST64_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

151 
	#INT_FAST8_MAX
 (127)

	)

152 #i‡
__WORDSIZE
 == 64

153 
	#INT_FAST16_MAX
 (9223372036854775807L)

	)

154 
	#INT_FAST32_MAX
 (9223372036854775807L)

	)

156 
	#INT_FAST16_MAX
 (2147483647)

	)

157 
	#INT_FAST32_MAX
 (2147483647)

	)

159 
	#INT_FAST64_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

162 
	#UINT_FAST8_MAX
 (255)

	)

163 #i‡
__WORDSIZE
 == 64

164 
	#UINT_FAST16_MAX
 (18446744073709551615UL)

	)

165 
	#UINT_FAST32_MAX
 (18446744073709551615UL)

	)

167 
	#UINT_FAST16_MAX
 (4294967295U)

	)

168 
	#UINT_FAST32_MAX
 (4294967295U)

	)

170 
	#UINT_FAST64_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

174 #i‡
__WORDSIZE
 == 64

175 
	#INTPTR_MIN
 (-9223372036854775807L-1)

	)

176 
	#INTPTR_MAX
 (9223372036854775807L)

	)

177 
	#UINTPTR_MAX
 (18446744073709551615UL)

	)

179 
	#INTPTR_MIN
 (-2147483647-1)

	)

180 
	#INTPTR_MAX
 (2147483647)

	)

181 
	#UINTPTR_MAX
 (4294967295U)

	)

186 
	#INTMAX_MIN
 (-
	`__INT64_C
(9223372036854775807)-1)

	)

188 
	#INTMAX_MAX
 (
	`__INT64_C
(9223372036854775807))

	)

191 
	#UINTMAX_MAX
 (
	`__UINT64_C
(18446744073709551615))

	)

197 #i‡
__WORDSIZE
 == 64

198 
	#PTRDIFF_MIN
 (-9223372036854775807L-1)

	)

199 
	#PTRDIFF_MAX
 (9223372036854775807L)

	)

201 #i‡
__WORDSIZE32_PTRDIFF_LONG


202 
	#PTRDIFF_MIN
 (-2147483647L-1)

	)

203 
	#PTRDIFF_MAX
 (2147483647L)

	)

205 
	#PTRDIFF_MIN
 (-2147483647-1)

	)

206 
	#PTRDIFF_MAX
 (2147483647)

	)

211 
	#SIG_ATOMIC_MIN
 (-2147483647-1)

	)

212 
	#SIG_ATOMIC_MAX
 (2147483647)

	)

215 #i‡
__WORDSIZE
 == 64

216 
	#SIZE_MAX
 (18446744073709551615UL)

	)

218 #i‡
__WORDSIZE32_SIZE_ULONG


219 
	#SIZE_MAX
 (4294967295UL)

	)

221 
	#SIZE_MAX
 (4294967295U)

	)

226 #i‚de‡
WCHAR_MIN


228 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

229 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

233 
	#WINT_MIN
 (0u)

	)

234 
	#WINT_MAX
 (4294967295u)

	)

237 
	#INT8_C
(
c
Ë
	)
c

238 
	#INT16_C
(
c
Ë
	)
c

239 
	#INT32_C
(
c
Ë
	)
c

240 #i‡
__WORDSIZE
 == 64

241 
	#INT64_C
(
c
Ë¯## 
L


	)

243 
	#INT64_C
(
c
Ë¯## 
LL


	)

247 
	#UINT8_C
(
c
Ë
	)
c

248 
	#UINT16_C
(
c
Ë
	)
c

249 
	#UINT32_C
(
c
Ë¯## 
U


	)

250 #i‡
__WORDSIZE
 == 64

251 
	#UINT64_C
(
c
Ë¯## 
UL


	)

253 
	#UINT64_C
(
c
Ë¯## 
ULL


	)

257 #i‡
__WORDSIZE
 == 64

258 
	#INTMAX_C
(
c
Ë¯## 
L


	)

259 
	#UINTMAX_C
(
c
Ë¯## 
UL


	)

261 
	#INTMAX_C
(
c
Ë¯## 
LL


	)

262 
	#UINTMAX_C
(
c
Ë¯## 
ULL


	)

265 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

267 
	#INT8_WIDTH
 8

	)

268 
	#UINT8_WIDTH
 8

	)

269 
	#INT16_WIDTH
 16

	)

270 
	#UINT16_WIDTH
 16

	)

271 
	#INT32_WIDTH
 32

	)

272 
	#UINT32_WIDTH
 32

	)

273 
	#INT64_WIDTH
 64

	)

274 
	#UINT64_WIDTH
 64

	)

276 
	#INT_LEAST8_WIDTH
 8

	)

277 
	#UINT_LEAST8_WIDTH
 8

	)

278 
	#INT_LEAST16_WIDTH
 16

	)

279 
	#UINT_LEAST16_WIDTH
 16

	)

280 
	#INT_LEAST32_WIDTH
 32

	)

281 
	#UINT_LEAST32_WIDTH
 32

	)

282 
	#INT_LEAST64_WIDTH
 64

	)

283 
	#UINT_LEAST64_WIDTH
 64

	)

285 
	#INT_FAST8_WIDTH
 8

	)

286 
	#UINT_FAST8_WIDTH
 8

	)

287 
	#INT_FAST16_WIDTH
 
__WORDSIZE


	)

288 
	#UINT_FAST16_WIDTH
 
__WORDSIZE


	)

289 
	#INT_FAST32_WIDTH
 
__WORDSIZE


	)

290 
	#UINT_FAST32_WIDTH
 
__WORDSIZE


	)

291 
	#INT_FAST64_WIDTH
 64

	)

292 
	#UINT_FAST64_WIDTH
 64

	)

294 
	#INTPTR_WIDTH
 
__WORDSIZE


	)

295 
	#UINTPTR_WIDTH
 
__WORDSIZE


	)

297 
	#INTMAX_WIDTH
 64

	)

298 
	#UINTMAX_WIDTH
 64

	)

300 
	#PTRDIFF_WIDTH
 
__WORDSIZE


	)

301 
	#SIG_ATOMIC_WIDTH
 32

	)

302 
	#SIZE_WIDTH
 
__WORDSIZE


	)

303 
	#WCHAR_WIDTH
 32

	)

304 
	#WINT_WIDTH
 32

	)

	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


25 
	#_STDIO_H
 1

	)

27 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

28 
	~<bôs/libc-hódî-°¨t.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	#__√ed___va_li°


	)

37 
	~<°d¨g.h
>

39 
	~<bôs/ty≥s.h
>

40 
	~<bôs/ty≥s/__Âos_t.h
>

41 
	~<bôs/ty≥s/__Âos64_t.h
>

42 
	~<bôs/ty≥s/__FILE.h
>

43 
	~<bôs/ty≥s/FILE.h
>

44 
	~<bôs/ty≥s/°ru˘_FILE.h
>

46 #ifde‡
__USE_MISC


47 
	~<bôs/ty≥s/cookõ_io_fun˘i⁄s_t.h
>

50 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


51 #ifde‡
__GNUC__


52 #i‚de‡
_VA_LIST_DEFINED


53 
__gnuc_va_li°
 
	tva_li°
;

54 
	#_VA_LIST_DEFINED


	)

57 
	~<°d¨g.h
>

61 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


62 #i‚de‡
__off_t_deföed


63 #i‚de‡
__USE_FILE_OFFSET64


64 
__off_t
 
	toff_t
;

66 
__off64_t
 
	toff_t
;

68 
	#__off_t_deföed


	)

70 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


71 
__off64_t
 
	toff64_t
;

72 
	#__off64_t_deföed


	)

76 #ifde‡
__USE_XOPEN2K8


77 #i‚de‡
__ssize_t_deföed


78 
__ssize_t
 
	tssize_t
;

79 
	#__ssize_t_deföed


	)

84 #i‚de‡
__USE_FILE_OFFSET64


85 
__Âos_t
 
	tÂos_t
;

87 
__Âos64_t
 
	tÂos_t
;

89 #ifde‡
__USE_LARGEFILE64


90 
__Âos64_t
 
	tÂos64_t
;

94 
	#_IOFBF
 0

	)

95 
	#_IOLBF
 1

	)

96 
	#_IONBF
 2

	)

100 
	#BUFSIZ
 8192

	)

105 
	#EOF
 (-1)

	)

110 
	#SEEK_SET
 0

	)

111 
	#SEEK_CUR
 1

	)

112 
	#SEEK_END
 2

	)

113 #ifde‡
__USE_GNU


114 
	#SEEK_DATA
 3

	)

115 
	#SEEK_HOLE
 4

	)

119 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


121 
	#P_tmpdú
 "/tmp"

	)

124 
	#L_tm≤am
 20

	)

125 
	#TMP_MAX
 238328

	)

129 
	~<bôs/°dio_lim.h
>

131 #ifde‡
__USE_POSIX


132 
	#L_˘îmid
 9

	)

133 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


134 
	#L_cu£rid
 9

	)

138 #unde‡
FOPEN_MAX


139 
	#FOPEN_MAX
 16

	)

142 #i‡
__GLIBC_USE
 (
ISOC2X
)

144 
	#_PRINTF_NAN_LEN_MAX
 4

	)

149 
FILE
 *
°dö
;

150 
FILE
 *
°dout
;

151 
FILE
 *
°dîr
;

153 
	#°dö
 
°dö


	)

154 
	#°dout
 
°dout


	)

155 
	#°dîr
 
°dîr


	)

158 
	$ªmove
 (c⁄° *
__fûíame
Ë
__THROW
;

160 
	$ª«me
 (c⁄° *
__ﬁd
, c⁄° *
__√w
Ë
__THROW
;

162 #ifde‡
__USE_ATFILE


164 
	$ª«mót
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

165 c⁄° *
__√w
Ë
__THROW
;

168 #ifde‡
__USE_GNU


170 
	#RENAME_NOREPLACE
 (1 << 0)

	)

171 
	#RENAME_EXCHANGE
 (1 << 1)

	)

172 
	#RENAME_WHITEOUT
 (1 << 2)

	)

176 
	$ª«mót2
 (
__ﬁdfd
, c⁄° *
__ﬁd
, 
__√wfd
,

177 c⁄° *
__√w
, 
__Êags
Ë
__THROW
;

184 
	$f˛o£
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

186 #unde‡
__©å_dóŒoc_f˛o£


187 
	#__©å_dóŒoc_f˛o£
 
	`__©å_dóŒoc
 (
f˛o£
, 1)

	)

193 #i‚de‡
__USE_FILE_OFFSET64


194 
FILE
 *
	$tmpfûe
 ()

195 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

197 #ifde‡
__REDIRECT


198 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
)

199 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

201 
	#tmpfûe
 
tmpfûe64


	)

205 #ifde‡
__USE_LARGEFILE64


206 
FILE
 *
	$tmpfûe64
 ()

207 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

211 *
	$tm≤am
 ([
L_tm≤am
]Ë
__THROW
 
__wur
;

213 #ifde‡
__USE_MISC


216 *
	$tm≤am_r
 (
__s
[
L_tm≤am
]Ë
__THROW
 
__wur
;

220 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


228 *
	$ãm≤am
 (c⁄° *
__dú
, c⁄° *
__pfx
)

229 
__THROW
 
__©åibuã_mÆloc__
 
__wur
 
__©å_dóŒoc_‰ì
;

236 
	`fÊush
 (
FILE
 *
__°ªam
);

238 #ifde‡
__USE_MISC


245 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

248 #ifde‡
__USE_GNU


255 
	`f˛o£Æl
 ();

259 #i‚de‡
__USE_FILE_OFFSET64


264 
FILE
 *
	$f›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

265 c⁄° *
__ª°ri˘
 
__modes
)

266 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

271 
FILE
 *
	$‰e›í
 (c⁄° *
__ª°ri˘
 
__fûíame
,

272 c⁄° *
__ª°ri˘
 
__modes
,

273 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((3));

275 #ifde‡
__REDIRECT


276 
FILE
 *
	`__REDIRECT
 (
f›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

277 c⁄° *
__ª°ri˘
 
__modes
), 
f›í64
)

278 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

279 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (c⁄° *
__ª°ri˘
 
__fûíame
,

280 c⁄° *
__ª°ri˘
 
__modes
,

281 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

282 
__wur
 
	`__n⁄nuŒ
 ((3));

284 
	#f›í
 
f›í64


	)

285 
	#‰e›í
 
‰e›í64


	)

288 #ifde‡
__USE_LARGEFILE64


289 
FILE
 *
	$f›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

290 c⁄° *
__ª°ri˘
 
__modes
)

291 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

292 
FILE
 *
	$‰e›í64
 (c⁄° *
__ª°ri˘
 
__fûíame
,

293 c⁄° *
__ª°ri˘
 
__modes
,

294 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((3));

297 #ifdef 
__USE_POSIX


299 
FILE
 *
	$fd›í
 (
__fd
, c⁄° *
__modes
Ë
__THROW


300 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

303 #ifdef 
__USE_MISC


306 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

307 c⁄° *
__ª°ri˘
 
__modes
,

308 
cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW


309 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

312 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

314 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, c⁄° *
__modes
)

315 
__THROW
 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

320 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


321 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
 
__wur
;

323 #ifde‡
_WCHAR_H


327 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


328 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
;

334 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW


335 
	`__n⁄nuŒ
 ((1));

339 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

340 
__modes
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

342 #ifdef 
__USE_MISC


345 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

346 
size_t
 
__size
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

349 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

357 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

358 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
	`__n⁄nuŒ
 ((1));

363 
	`¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

365 
	$•rötf
 (*
__ª°ri˘
 
__s
,

366 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

372 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

373 
__gnuc_va_li°
 
__¨g
Ë
	`__n⁄nuŒ
 ((1));

378 
	`v¥ötf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
);

380 
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

381 
__gnuc_va_li°
 
__¨g
Ë
__THROWNL
;

383 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


385 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

386 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

387 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

389 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

391 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

394 #i‡
	`deföed
 (
__USE_MISC
Ë|| 
	`__GLIBC_USE
 (
LIB_EXT2
)

397 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__f
,

398 
__gnuc_va_li°
 
__¨g
)

399 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

400 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

401 c⁄° *
__ª°ri˘
 
__fmt
, ...)

402 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

403 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

404 c⁄° *
__ª°ri˘
 
__fmt
, ...)

405 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

408 #ifde‡
__USE_XOPEN2K8


410 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
,

411 
__gnuc_va_li°
 
__¨g
)

412 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

413 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

414 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

423 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
 
	`__n⁄nuŒ
 ((1));

428 
	$sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

430 
	$ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

431 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

437 
	~<bôs/Êﬂä.h
>

438 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT
 \

439 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

440 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

441 #ifde‡
__REDIRECT


442 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

443 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

444 
__isoc23_fsˇnf
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

445 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

446 
__isoc23_sˇnf
Ë
__wur
;

447 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

448 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc23_ssˇnf
);

451 
	$__isoc23_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

452 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur


453 
	`__n⁄nuŒ
 ((1));

454 
	$__isoc23_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

455 
	$__isoc23_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

456 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

457 
	#fsˇnf
 
__isoc23_fsˇnf


	)

458 
	#sˇnf
 
__isoc23_sˇnf


	)

459 
	#ssˇnf
 
__isoc23_ssˇnf


	)

462 #ifde‡
__REDIRECT


463 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

464 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

465 
__isoc99_fsˇnf
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

466 
	`__REDIRECT
 (
sˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

467 
__isoc99_sˇnf
Ë
__wur
;

468 
	`__REDIRECT_NTH
 (
ssˇnf
, (c⁄° *
__ª°ri˘
 
__s
,

469 c⁄° *
__ª°ri˘
 
__f‹m©
, ...),

470 
__isoc99_ssˇnf
);

472 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

473 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur


474 
	`__n⁄nuŒ
 ((1));

475 
	$__isoc99_sˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

476 
	$__isoc99_ssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

477 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

478 
	#fsˇnf
 
__isoc99_fsˇnf


	)

479 
	#sˇnf
 
__isoc99_sˇnf


	)

480 
	#ssˇnf
 
__isoc99_ssˇnf


	)

485 #ifdef 
__USE_ISOC99


490 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__f‹m©
,

491 
__gnuc_va_li°
 
__¨g
)

492 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
 
	`__n⁄nuŒ
 ((1));

498 
	$vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

499 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

502 
	$vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

503 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
)

504 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

507 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

508 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

509 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT
 \

510 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

511 
	`__REDIRECT
 (
vfsˇnf
,

512 (
FILE
 *
__ª°ri˘
 
__s
,

513 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

514 
__isoc23_vfsˇnf
)

515 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
 
	`__n⁄nuŒ
 ((1));

516 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

517 
__gnuc_va_li°
 
__¨g
), 
__isoc23_vsˇnf
)

518 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

519 
	`__REDIRECT_NTH
 (
vssˇnf
,

520 (c⁄° *
__ª°ri˘
 
__s
,

521 c⁄° *
__ª°ri˘
 
__f‹m©
,

522 
__gnuc_va_li°
 
__¨g
), 
__isoc23_vssˇnf
)

523 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

524 #ñi‡!
deföed
 
__REDIRECT


525 
	$__isoc23_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

526 c⁄° *
__ª°ri˘
 
__f‹m©
,

527 
__gnuc_va_li°
 
__¨g
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

528 
	$__isoc23_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

529 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

530 
	$__isoc23_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

531 c⁄° *
__ª°ri˘
 
__f‹m©
,

532 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

533 
	#vfsˇnf
 
__isoc23_vfsˇnf


	)

534 
	#vsˇnf
 
__isoc23_vsˇnf


	)

535 
	#vssˇnf
 
__isoc23_vssˇnf


	)

538 #i‡
deföed
 
__REDIRECT
 && !deföed 
__LDBL_COMPAT
 \

539 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

540 
	`__REDIRECT
 (
vfsˇnf
,

541 (
FILE
 *
__ª°ri˘
 
__s
,

542 c⁄° *
__ª°ri˘
 
__f‹m©
, 
__gnuc_va_li°
 
__¨g
),

543 
__isoc99_vfsˇnf
)

544 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
 
	`__n⁄nuŒ
 ((1));

545 
	`__REDIRECT
 (
vsˇnf
, (c⁄° *
__ª°ri˘
 
__f‹m©
,

546 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

547 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

548 
	`__REDIRECT_NTH
 (
vssˇnf
,

549 (c⁄° *
__ª°ri˘
 
__s
,

550 c⁄° *
__ª°ri˘
 
__f‹m©
,

551 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

552 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

553 #ñi‡!
deföed
 
__REDIRECT


554 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

555 c⁄° *
__ª°ri˘
 
__f‹m©
,

556 
__gnuc_va_li°
 
__¨g
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

557 
	$__isoc99_vsˇnf
 (c⁄° *
__ª°ri˘
 
__f‹m©
,

558 
__gnuc_va_li°
 
__¨g
Ë
__wur
;

559 
	$__isoc99_vssˇnf
 (c⁄° *
__ª°ri˘
 
__s
,

560 c⁄° *
__ª°ri˘
 
__f‹m©
,

561 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

562 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

563 
	#vsˇnf
 
__isoc99_vsˇnf


	)

564 
	#vssˇnf
 
__isoc99_vssˇnf


	)

575 
	$fgëc
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

576 
	$gëc
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

582 
	`gëch¨
 ();

584 #ifde‡
__USE_POSIX199506


589 
	$gëc_u∆ocked
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

590 
	`gëch¨_u∆ocked
 ();

593 #ifde‡
__USE_MISC


600 
	$fgëc_u∆ocked
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

611 
	$Âutc
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

612 
	$putc
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

618 
	`putch¨
 (
__c
);

620 #ifde‡
__USE_MISC


627 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

630 #ifde‡
__USE_POSIX199506


635 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

636 
	`putch¨_u∆ocked
 (
__c
);

640 #i‡
deföed
 
__USE_MISC
 \

641 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

643 
	$gëw
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

646 
	$putw
 (
__w
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

654 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

655 
__wur
 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2Ë
	`__n⁄nuŒ
 ((3));

657 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

667 *
	$gës
 (*
__s
Ë
__wur
 
__©åibuã_dïªˇãd__
;

670 #ifde‡
__USE_GNU


677 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

678 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


679 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2Ë
	`__n⁄nuŒ
 ((3));

683 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

694 
__ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

695 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

696 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((4));

697 
__ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

698 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

699 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((4));

707 
__ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

708 
size_t
 *
__ª°ri˘
 
__n
,

709 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((3));

717 
	$Âuts
 (c⁄° *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
)

718 
	`__n⁄nuŒ
 ((2));

724 
	`puts
 (c⁄° *
__s
);

731 
	$ungëc
 (
__c
, 
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

738 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

739 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


740 
	`__n⁄nuŒ
((4));

745 
size_t
 
	$fwrôe
 (c⁄° *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

746 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
	`__n⁄nuŒ
((4));

748 #ifde‡
__USE_GNU


755 
	$Âuts_u∆ocked
 (c⁄° *
__ª°ri˘
 
__s
,

756 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
	`__n⁄nuŒ
 ((2));

759 #ifde‡
__USE_MISC


766 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

767 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur


768 
	`__n⁄nuŒ
 ((4));

769 
size_t
 
	$fwrôe_u∆ocked
 (c⁄° *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

770 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
)

771 
	`__n⁄nuŒ
 ((4));

779 
	$f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
)

780 
	`__n⁄nuŒ
 ((1));

785 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

790 
	$ªwöd
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

797 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


798 #i‚de‡
__USE_FILE_OFFSET64


803 
	$f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
)

804 
	`__n⁄nuŒ
 ((1));

809 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

811 #ifde‡
__REDIRECT


812 
	`__REDIRECT
 (
f£eko
,

813 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

814 
f£eko64
Ë
	`__n⁄nuŒ
 ((1));

815 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
)

816 
	`__n⁄nuŒ
 ((1));

818 
	#f£eko
 
f£eko64


	)

819 
	#·ñlo
 
·ñlo64


	)

824 #i‚de‡
__USE_FILE_OFFSET64


829 
	$fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
)

830 
	`__n⁄nuŒ
 ((1));

835 
	$f£ços
 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
Ë
	`__n⁄nuŒ
 ((1));

837 #ifde‡
__REDIRECT


838 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

839 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
)

840 
	`__n⁄nuŒ
 ((1));

841 
	`__REDIRECT
 (
f£ços
,

842 (
FILE
 *
__°ªam
, c⁄° 
Âos_t
 *
__pos
), 
f£ços64
)

843 
	`__n⁄nuŒ
 ((1));

845 
	#fgëpos
 
fgëpos64


	)

846 
	#f£ços
 
f£ços64


	)

850 #ifde‡
__USE_LARGEFILE64


851 
	$f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
)

852 
	`__n⁄nuŒ
 ((1));

853 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((1));

854 
	$fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
)

855 
	`__n⁄nuŒ
 ((1));

856 
	$f£ços64
 (
FILE
 *
__°ªam
, c⁄° 
Âos64_t
 *
__pos
Ë
	`__n⁄nuŒ
 ((1));

860 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

864 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

866 #ifde‡
__USE_MISC


868 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

869 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

870 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

878 
	$≥º‹
 (c⁄° *
__s
Ë
__COLD
;

881 #ifdef 
__USE_POSIX


883 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

886 #ifde‡
__USE_MISC


888 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

892 #ifde‡
__USE_POSIX2


897 
	$p˛o£
 (
FILE
 *
__°ªam
Ë
	`__n⁄nuŒ
 ((1));

903 
FILE
 *
	$p›í
 (c⁄° *
__comm™d
, c⁄° *
__modes
)

904 
__©åibuã_mÆloc__
 
	$__©å_dóŒoc
 (
p˛o£
, 1Ë
__wur
;

909 #ifdef 
__USE_POSIX


911 *
	$˘îmid
 (*
__s
Ë
__THROW


912 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

916 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
Ë|| deföed 
__USE_GNU


918 *
	$cu£rid
 (*
__s
)

919 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

923 #ifdef 
__USE_GNU


924 
ob°ack
;

927 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

928 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

929 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

930 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

931 c⁄° *
__ª°ri˘
 
__f‹m©
,

932 
__gnuc_va_li°
 
__¨gs
)

933 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

937 #ifde‡
__USE_POSIX199506


941 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

945 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
 
	`__n⁄nuŒ
 ((1));

948 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

951 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


954 
	~<bôs/gë›t_posix.h
>

959 
	`__uÊow
 (
FILE
 *);

960 
	`__ovîÊow
 (
FILE
 *, );

962 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


964 
	~<bôs/°dio2-de˛.h
>

969 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

970 
	~<bôs/°dio-ldbl.h
>

975 #ifde‡
__USE_EXTERN_INLINES


976 
	~<bôs/°dio.h
>

978 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


980 
	~<bôs/°dio2.h
>

983 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

29 
	#__√ed_size_t


	)

30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

32 
	~<°ddef.h
>

34 
	g__BEGIN_DECLS


36 
	#_STDLIB_H
 1

	)

38 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


40 
	~<bôs/waôÊags.h
>

41 
	~<bôs/waô°©us.h
>

44 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (°©us)

	)

45 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (°©us)

	)

46 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (°©us)

	)

47 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (°©us)

	)

48 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (°©us)

	)

49 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (°©us)

	)

50 #ifde‡
__WIFCONTINUED


51 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (°©us)

	)

56 
	~<bôs/Êﬂä.h
>

61 
	mquŸ
;

62 
	mªm
;

63 } 
	tdiv_t
;

66 #i‚de‡
__ldiv_t_deföed


69 
	mquŸ
;

70 
	mªm
;

71 } 
	tldiv_t
;

72 
	#__ldiv_t_deföed
 1

	)

75 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


77 
__exãnsi⁄__
 struct

79 
	mquŸ
;

80 
	mªm
;

81 } 
	tŒdiv_t
;

82 
	#__Œdiv_t_deföed
 1

	)

87 
	#RAND_MAX
 2147483647

	)

92 
	#EXIT_FAILURE
 1

	)

93 
	#EXIT_SUCCESS
 0

	)

97 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

98 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

102 
	$©of
 (c⁄° *
__≈å
)

103 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

105 
	$©oi
 (c⁄° *
__≈å
)

106 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

108 
	$©ﬁ
 (c⁄° *
__≈å
)

109 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

111 #ifde‡
__USE_ISOC99


113 
__exãnsi⁄__
 
	$©ﬁl
 (c⁄° *
__≈å
)

114 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

118 
	$°πod
 (c⁄° *
__ª°ri˘
 
__≈å
,

119 **
__ª°ri˘
 
__íd±r
)

120 
__THROW
 
	`__n⁄nuŒ
 ((1));

122 #ifdef 
__USE_ISOC99


124 
	$°πof
 (c⁄° *
__ª°ri˘
 
__≈å
,

125 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

127 
	$°πﬁd
 (c⁄° *
__ª°ri˘
 
__≈å
,

128 **
__ª°ri˘
 
__íd±r
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1));

134 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

135 
_Flﬂt16
 
	$°πof16
 (c⁄° *
__ª°ri˘
 
__≈å
,

136 **
__ª°ri˘
 
__íd±r
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1));

140 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

141 
_Flﬂt32
 
	$°πof32
 (c⁄° *
__ª°ri˘
 
__≈å
,

142 **
__ª°ri˘
 
__íd±r
)

143 
__THROW
 
	`__n⁄nuŒ
 ((1));

146 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

147 
_Flﬂt64
 
	$°πof64
 (c⁄° *
__ª°ri˘
 
__≈å
,

148 **
__ª°ri˘
 
__íd±r
)

149 
__THROW
 
	`__n⁄nuŒ
 ((1));

152 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

153 
_Flﬂt128
 
	$°πof128
 (c⁄° *
__ª°ri˘
 
__≈å
,

154 **
__ª°ri˘
 
__íd±r
)

155 
__THROW
 
	`__n⁄nuŒ
 ((1));

158 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

159 
_Flﬂt32x
 
	$°πof32x
 (c⁄° *
__ª°ri˘
 
__≈å
,

160 **
__ª°ri˘
 
__íd±r
)

161 
__THROW
 
	`__n⁄nuŒ
 ((1));

164 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

165 
_Flﬂt64x
 
	$°πof64x
 (c⁄° *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1));

170 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

171 
_Flﬂt128x
 
	$°πof128x
 (c⁄° *
__ª°ri˘
 
__≈å
,

172 **
__ª°ri˘
 
__íd±r
)

173 
__THROW
 
	`__n⁄nuŒ
 ((1));

177 
	$°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

178 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

179 
__THROW
 
	`__n⁄nuŒ
 ((1));

181 
	$°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

182 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

183 
__THROW
 
	`__n⁄nuŒ
 ((1));

185 #ifde‡
__USE_MISC


187 
__exãnsi⁄__


188 
	$°πoq
 (c⁄° *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1));

192 
__exãnsi⁄__


193 
	$°πouq
 (c⁄° *
__ª°ri˘
 
__≈å
,

194 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

195 
__THROW
 
	`__n⁄nuŒ
 ((1));

198 #ifde‡
__USE_ISOC99


200 
__exãnsi⁄__


201 
	$°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1));

205 
__exãnsi⁄__


206 
	$°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

207 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

208 
__THROW
 
	`__n⁄nuŒ
 ((1));

213 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

214 #ifde‡
__REDIRECT


215 
	`__REDIRECT_NTH
 (
°πﬁ
, (c⁄° *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
,

217 
__ba£
), 
__isoc23_°πﬁ
)

218 
	`__n⁄nuŒ
 ((1));

219 
	`__REDIRECT_NTH
 (
°πoul
,

220 (c⁄° *
__ª°ri˘
 
__≈å
,

221 **
__ª°ri˘
 
__íd±r
,

222 
__ba£
), 
__isoc23_°πoul
)

223 
	`__n⁄nuŒ
 ((1));

224 #ifde‡
__USE_MISC


225 
__exãnsi⁄__


226 
	`__REDIRECT_NTH
 (
°πoq
, (c⁄° *
__ª°ri˘
 
__≈å
,

227 **
__ª°ri˘
 
__íd±r
,

228 
__ba£
), 
__isoc23_°πﬁl
)

229 
	`__n⁄nuŒ
 ((1));

230 
__exãnsi⁄__


231 
	`__REDIRECT_NTH
 (
°πouq
,

232 (c⁄° *
__ª°ri˘
 
__≈å
,

233 **
__ª°ri˘
 
__íd±r
,

234 
__ba£
), 
__isoc23_°πouŒ
)

235 
	`__n⁄nuŒ
 ((1));

237 
__exãnsi⁄__


238 
	`__REDIRECT_NTH
 (
°πﬁl
, (c⁄° *
__ª°ri˘
 
__≈å
,

239 **
__ª°ri˘
 
__íd±r
,

240 
__ba£
), 
__isoc23_°πﬁl
)

241 
	`__n⁄nuŒ
 ((1));

242 
__exãnsi⁄__


243 
	`__REDIRECT_NTH
 (
°πouŒ
,

244 (c⁄° *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
), 
__isoc23_°πouŒ
)

247 
	`__n⁄nuŒ
 ((1));

249 
	$__isoc23_°πﬁ
 (c⁄° *
__ª°ri˘
 
__≈å
,

250 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

251 
__THROW
 
	`__n⁄nuŒ
 ((1));

252 
	$__isoc23_°πoul
 (c⁄° *
__ª°ri˘
 
__≈å
,

253 **
__ª°ri˘
 
__íd±r
,

254 
__ba£
)

255 
__THROW
 
	`__n⁄nuŒ
 ((1));

256 
__exãnsi⁄__


257 
	$__isoc23_°πﬁl
 (c⁄° *
__ª°ri˘
 
__≈å
,

258 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1));

260 
__exãnsi⁄__


261 
	$__isoc23_°πouŒ
 (c⁄° *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
,

263 
__ba£
)

264 
__THROW
 
	`__n⁄nuŒ
 ((1));

265 
	#°πﬁ
 
__isoc23_°πﬁ


	)

266 
	#°πoul
 
__isoc23_°πoul


	)

267 #ifde‡
__USE_MISC


268 
	#°πoq
 
__isoc23_°πﬁl


	)

269 
	#°πouq
 
__isoc23_°πouŒ


	)

271 
	#°πﬁl
 
__isoc23_°πﬁl


	)

272 
	#°πouŒ
 
__isoc23_°πouŒ


	)

277 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

278 
	$°r‰omd
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

279 
__f
)

280 
__THROW
 
	`__n⁄nuŒ
 ((3));

282 
	$°r‰omf
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

283 
__f
)

284 
__THROW
 
	`__n⁄nuŒ
 ((3));

286 
	$°r‰oml
 (*
__de°
, 
size_t
 
__size
, c⁄° *
__f‹m©
,

287 
__f
)

288 
__THROW
 
	`__n⁄nuŒ
 ((3));

291 #i‡
__HAVE_FLOAT16
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

292 
	$°r‰omf16
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

293 
_Flﬂt16
 
__f
)

294 
__THROW
 
	`__n⁄nuŒ
 ((3));

297 #i‡
__HAVE_FLOAT32
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

298 
	$°r‰omf32
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

299 
_Flﬂt32
 
__f
)

300 
__THROW
 
	`__n⁄nuŒ
 ((3));

303 #i‡
__HAVE_FLOAT64
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

304 
	$°r‰omf64
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

305 
_Flﬂt64
 
__f
)

306 
__THROW
 
	`__n⁄nuŒ
 ((3));

309 #i‡
__HAVE_FLOAT128
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

310 
	$°r‰omf128
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

311 
_Flﬂt128
 
__f
)

312 
__THROW
 
	`__n⁄nuŒ
 ((3));

315 #i‡
__HAVE_FLOAT32X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

316 
	$°r‰omf32x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

317 
_Flﬂt32x
 
__f
)

318 
__THROW
 
	`__n⁄nuŒ
 ((3));

321 #i‡
__HAVE_FLOAT64X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

322 
	$°r‰omf64x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

323 
_Flﬂt64x
 
__f
)

324 
__THROW
 
	`__n⁄nuŒ
 ((3));

327 #i‡
__HAVE_FLOAT128X
 && 
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
)

328 
	$°r‰omf128x
 (*
__de°
, 
size_t
 
__size
, c⁄° * 
__f‹m©
,

329 
_Flﬂt128x
 
__f
)

330 
__THROW
 
	`__n⁄nuŒ
 ((3));

334 #ifde‡
__USE_GNU


338 
	~<bôs/ty≥s/loˇÀ_t.h
>

340 
	$°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

341 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

342 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

344 
	$°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

345 **
__ª°ri˘
 
__íd±r
,

346 
__ba£
, 
loˇÀ_t
 
__loc
)

347 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

349 
__exãnsi⁄__


350 
	$°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

351 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

352 
loˇÀ_t
 
__loc
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

355 
__exãnsi⁄__


356 
	$°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

357 **
__ª°ri˘
 
__íd±r
,

358 
__ba£
, 
loˇÀ_t
 
__loc
)

359 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

363 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

364 #ifde‡
__REDIRECT


365 
	`__REDIRECT_NTH
 (
°πﬁ_l
, (c⁄° *
__ª°ri˘
 
__≈å
,

366 **
__ª°ri˘
 
__íd±r
,

367 
__ba£
, 
loˇÀ_t
 
__loc
),

368 
__isoc23_°πﬁ_l
)

369 
	`__n⁄nuŒ
 ((1, 4));

370 
	`__REDIRECT_NTH
 (
°πoul_l
,

371 (c⁄° *
__ª°ri˘
 
__≈å
,

372 **
__ª°ri˘
 
__íd±r
,

373 
__ba£
, 
loˇÀ_t
 
__loc
),

374 
__isoc23_°πoul_l
)

375 
	`__n⁄nuŒ
 ((1, 4));

376 
__exãnsi⁄__


377 
	`__REDIRECT_NTH
 (
°πﬁl_l
, (c⁄° *
__ª°ri˘
 
__≈å
,

378 **
__ª°ri˘
 
__íd±r
,

379 
__ba£
,

380 
loˇÀ_t
 
__loc
),

381 
__isoc23_°πﬁl_l
)

382 
	`__n⁄nuŒ
 ((1, 4));

383 
__exãnsi⁄__


384 
	`__REDIRECT_NTH
 (
°πouŒ_l
,

385 (c⁄° *
__ª°ri˘
 
__≈å
,

386 **
__ª°ri˘
 
__íd±r
,

387 
__ba£
, 
loˇÀ_t
 
__loc
),

388 
__isoc23_°πouŒ_l
)

389 
	`__n⁄nuŒ
 ((1, 4));

391 
	$__isoc23_°πﬁ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

392 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

393 
loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

394 
	$__isoc23_°πoul_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

395 **
__ª°ri˘
 
__íd±r
,

396 
__ba£
, 
loˇÀ_t
 
__loc
)

397 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

398 
__exãnsi⁄__


399 
	$__isoc23_°πﬁl_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

400 **
__ª°ri˘
 
__íd±r
,

401 
__ba£
, 
loˇÀ_t
 
__loc
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

403 
__exãnsi⁄__


404 
	$__isoc23_°πouŒ_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

405 **
__ª°ri˘
 
__íd±r
,

406 
__ba£
, 
loˇÀ_t
 
__loc
)

407 
__THROW
 
	`__n⁄nuŒ
 ((1, 4));

408 
	#°πﬁ_l
 
__isoc23_°πﬁ_l


	)

409 
	#°πoul_l
 
__isoc23_°πoul_l


	)

410 
	#°πﬁl_l
 
__isoc23_°πﬁl_l


	)

411 
	#°πouŒ_l
 
__isoc23_°πouŒ_l


	)

415 
	$°πod_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

416 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

417 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

419 
	$°πof_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

420 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

421 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

423 
	$°πﬁd_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

424 **
__ª°ri˘
 
__íd±r
,

425 
loˇÀ_t
 
__loc
)

426 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

428 #i‡
__HAVE_FLOAT16


429 
_Flﬂt16
 
	$°πof16_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

430 **
__ª°ri˘
 
__íd±r
,

431 
loˇÀ_t
 
__loc
)

432 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

435 #i‡
__HAVE_FLOAT32


436 
_Flﬂt32
 
	$°πof32_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

437 **
__ª°ri˘
 
__íd±r
,

438 
loˇÀ_t
 
__loc
)

439 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

442 #i‡
__HAVE_FLOAT64


443 
_Flﬂt64
 
	$°πof64_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

444 **
__ª°ri˘
 
__íd±r
,

445 
loˇÀ_t
 
__loc
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

449 #i‡
__HAVE_FLOAT128


450 
_Flﬂt128
 
	$°πof128_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

451 **
__ª°ri˘
 
__íd±r
,

452 
loˇÀ_t
 
__loc
)

453 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

456 #i‡
__HAVE_FLOAT32X


457 
_Flﬂt32x
 
	$°πof32x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

458 **
__ª°ri˘
 
__íd±r
,

459 
loˇÀ_t
 
__loc
)

460 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

463 #i‡
__HAVE_FLOAT64X


464 
_Flﬂt64x
 
	$°πof64x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

465 **
__ª°ri˘
 
__íd±r
,

466 
loˇÀ_t
 
__loc
)

467 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

470 #i‡
__HAVE_FLOAT128X


471 
_Flﬂt128x
 
	$°πof128x_l
 (c⁄° *
__ª°ri˘
 
__≈å
,

472 **
__ª°ri˘
 
__íd±r
,

473 
loˇÀ_t
 
__loc
)

474 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

479 #ifde‡
__USE_EXTERN_INLINES


480 
__exã∫_ölöe
 

481 
	`__NTH
 (
	$©oi
 (c⁄° *
__≈å
))

483  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

484 
	}
}

485 
__exã∫_ölöe
 

486 
__NTH
 (
	$©ﬁ
 (c⁄° *
__≈å
))

488  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

489 
	}
}

491 #ifde‡
__USE_ISOC99


492 
__exãnsi⁄__
 
__exã∫_ölöe
 

493 
__NTH
 (
	$©ﬁl
 (c⁄° *
__≈å
))

495  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

496 
	}
}

501 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


505 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

508 
	$a64l
 (c⁄° *
__s
)

509 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

513 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


514 
	~<sys/ty≥s.h
>

521 
	$øndom
 (Ë
__THROW
;

524 
	$§™dom
 (
__£ed
Ë
__THROW
;

530 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

531 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

535 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

538 #ifde‡
__USE_MISC


543 
	søndom_d©a


545 
öt32_t
 *
Âå
;

546 
öt32_t
 *
Ωå
;

547 
öt32_t
 *
°©e
;

548 
ønd_ty≥
;

549 
ønd_deg
;

550 
ønd_£p
;

551 
öt32_t
 *
íd_±r
;

554 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

555 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

557 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

558 
__THROW
 
	`__n⁄nuŒ
 ((2));

560 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

561 
size_t
 
__°©ñí
,

562 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

563 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

565 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

566 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

567 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

573 
	$ønd
 (Ë
__THROW
;

575 
	$§™d
 (
__£ed
Ë
__THROW
;

577 #ifde‡
__USE_POSIX199506


579 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

583 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


587 
	$dønd48
 (Ë
__THROW
;

588 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

591 
	$Ã™d48
 (Ë
__THROW
;

592 
	$ƒ™d48
 (
__xsubi
[3])

593 
__THROW
 
	`__n⁄nuŒ
 ((1));

596 
	$mønd48
 (Ë
__THROW
;

597 
	$jønd48
 (
__xsubi
[3])

598 
__THROW
 
	`__n⁄nuŒ
 ((1));

601 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

602 *
	$£ed48
 (
__£ed16v
[3])

603 
__THROW
 
	`__n⁄nuŒ
 ((1));

604 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

606 #ifde‡
__USE_MISC


610 
	sdønd48_d©a


612 
__x
[3];

613 
__ﬁd_x
[3];

614 
__c
;

615 
__öô
;

616 
__exãnsi⁄__
 
__a
;

621 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

622 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

623 
	$î™d48_r
 (
__xsubi
[3],

624 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

625 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

628 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

629 *
__ª°ri˘
 
__ªsu…
)

630 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

631 
	$ƒ™d48_r
 (
__xsubi
[3],

632 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

633 *
__ª°ri˘
 
__ªsu…
)

634 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

637 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

638 *
__ª°ri˘
 
__ªsu…
)

639 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

640 
	$jønd48_r
 (
__xsubi
[3],

641 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

642 *
__ª°ri˘
 
__ªsu…
)

643 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

646 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

647 
__THROW
 
	`__n⁄nuŒ
 ((2));

649 
	$£ed48_r
 (
__£ed16v
[3],

650 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

652 
	$lc⁄g48_r
 (
__∑øm
[7],

653 
dønd48_d©a
 *
__buf„r
)

654 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

657 
__uöt32_t
 
	$¨c4øndom
 ()

658 
__THROW
 
__wur
;

661 
	$¨c4øndom_buf
 (*
__buf
, 
size_t
 
__size
)

662 
__THROW
 
	`__n⁄nuŒ
 ((1));

666 
__uöt32_t
 
	$¨c4øndom_unif‹m
 (
__uöt32_t
 
__uµî_bound
)

667 
__THROW
 
__wur
;

672 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


673 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

675 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

676 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_size__
 ((1, 2)Ë
__wur
;

683 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

684 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
 
	`__©åibuã_Æloc_size__
 ((2));

687 
	$‰ì
 (*
__±r
Ë
__THROW
;

689 #ifde‡
__USE_MISC


695 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

696 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__


697 
	`__©åibuã_Æloc_size__
 ((2, 3))

698 
__©å_dóŒoc_‰ì
;

701 *
	$ªÆloˇºay
 (*
__±r
, 
size_t
 
__nmemb
, size_à
__size
)

702 
__THROW
 
	`__©å_dóŒoc
 (
ªÆloˇºay
, 1);

705 #ifde‡
__USE_MISC


706 
	~<Æloˇ.h
>

709 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

710 || 
deföed
 
__USE_MISC


712 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__


713 
	`__©åibuã_Æloc_size__
 ((1)Ë
__wur
;

716 #ifde‡
__USE_XOPEN2K


718 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

719 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

722 #ifde‡
__USE_ISOC11


724 *
	$Æig√d_Æloc
 (
size_t
 
__Æignmít
, size_à
__size
)

725 
__THROW
 
__©åibuã_mÆloc__
 
	`__©åibuã_Æloc_Æign__
 ((1))

726 
	`__©åibuã_Æloc_size__
 ((2)Ë
__wur
;

730 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

734 
	$©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

736 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


738 #ifde‡
__˝lu•lus


739 "C++" 
	$©_quick_exô
 ((*
__func
) ())

740 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

742 
	$©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

746 #ifdef 
__USE_MISC


749 
	$⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

750 
__THROW
 
	`__n⁄nuŒ
 ((1));

756 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

758 #i‡
deföed
 
__USE_ISOC11
 || deföed 
__USE_ISOCXX11


762 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

765 #ifde‡
__USE_ISOC99


768 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

773 *
	$gëív
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

775 #ifde‡
__USE_GNU


778 *
	$£cuª_gëív
 (c⁄° *
__«me
)

779 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

782 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


786 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

789 #ifde‡
__USE_XOPEN2K


792 
	$£ãnv
 (c⁄° *
__«me
, c⁄° *
__vÆue
, 
__ª∂a˚
)

793 
__THROW
 
	`__n⁄nuŒ
 ((2));

796 
	$un£ãnv
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

799 #ifdef 
__USE_MISC


803 
	$˛óªnv
 (Ë
__THROW
;

807 #i‡
deföed
 
__USE_MISC
 \

808 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
)

814 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

817 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


826 #i‚de‡
__USE_FILE_OFFSET64


827 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

829 #ifde‡
__REDIRECT


830 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

831 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

833 
	#mk°emp
 
mk°emp64


	)

836 #ifde‡
__USE_LARGEFILE64


837 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

841 #ifde‡
__USE_MISC


848 #i‚de‡
__USE_FILE_OFFSET64


849 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

851 #ifde‡
__REDIRECT


852 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

853 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

855 
	#mk°emps
 
mk°emps64


	)

858 #ifde‡
__USE_LARGEFILE64


859 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

860 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

864 #ifde‡
__USE_XOPEN2K8


870 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

873 #ifde‡
__USE_GNU


880 #i‚de‡
__USE_FILE_OFFSET64


881 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

883 #ifde‡
__REDIRECT


884 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

885 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

887 
	#mko°emp
 
mko°emp64


	)

890 #ifde‡
__USE_LARGEFILE64


891 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

900 #i‚de‡
__USE_FILE_OFFSET64


901 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

902 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

904 #ifde‡
__REDIRECT


905 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

906 
__Êags
), 
mko°emps64
)

907 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

909 
	#mko°emps
 
mko°emps64


	)

912 #ifde‡
__USE_LARGEFILE64


913 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

914 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

923 
	$sy°em
 (c⁄° *
__comm™d
Ë
__wur
;

926 #ifdef 
__USE_GNU


929 *
	$ˇn⁄iˇlize_fûe_«me
 (c⁄° *
__«me
)

930 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_mÆloc__


931 
__©å_dóŒoc_‰ì
 
__wur
;

934 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


940 *
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
,

941 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

946 #i‚de‡
__COMPAR_FN_T


947 
	#__COMPAR_FN_T


	)

948 (*
	t__com∑r_‚_t
) (const *, const *);

950 #ifdef 
__USE_GNU


951 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

954 #ifde‡
__USE_GNU


955 (*
	t__com∑r_d_‚_t
) (const *, const *, *);

960 *
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
,

961 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

962 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

964 #ifde‡
__USE_EXTERN_INLINES


965 
	~<bôs/°dlib-b£¨ch.h
>

970 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

971 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

972 #ifde‡
__USE_GNU


973 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

974 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

975 
	`__n⁄nuŒ
 ((1, 4));

980 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

981 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

983 #ifde‡
__USE_ISOC99


984 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

985 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

992 
div_t
 
	$div
 (
__numî
, 
__díom
)

993 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

994 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

995 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

997 #ifde‡
__USE_ISOC99


998 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

999 
__díom
)

1000 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

1004 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

1005 || 
deföed
 
__USE_MISC


1012 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1013 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1018 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1019 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1024 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

1025 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

1028 #ifde‡
__USE_MISC


1030 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

1031 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

1032 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1033 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

1034 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

1035 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

1036 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

1037 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

1042 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1043 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

1044 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1045 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

1046 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

1047 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1049 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

1050 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

1051 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

1052 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1053 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

1054 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

1055 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

1056 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

1062 
	$mbÀn
 (c⁄° *
__s
, 
size_t
 
__n
Ë
__THROW
;

1065 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

1066 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

1069 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
;

1073 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

1074 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW


1075 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

1077 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

1078 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

1079 
__THROW


1080 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 3)

1081 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

1083 #ifde‡
__USE_MISC


1088 
	$Ωm©ch
 (c⁄° *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1092 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1099 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

1100 *c⁄° *
__ª°ri˘
 
__tokís
,

1101 **
__ª°ri˘
 
__vÆuï
)

1102 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

1108 #ifde‡
__USE_XOPEN2KXSI


1110 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

1113 #ifde‡
__USE_XOPEN_EXTENDED


1118 
	$gø¡±
 (
__fd
Ë
__THROW
;

1122 
	$u∆ock±
 (
__fd
Ë
__THROW
;

1127 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

1130 #ifde‡
__USE_GNU


1134 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

1135 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

1138 
	`gë±
 ();

1141 #ifde‡
__USE_MISC


1145 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

1146 
__THROW
 
	`__n⁄nuŒ
 ((1));

1149 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K


1152 
	$ây¶Ÿ
 (Ë
__THROW
;

1155 
	~<bôs/°dlib-Êﬂt.h
>

1158 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1159 
	~<bôs/°dlib.h
>

1162 
	~<bôs/Êﬂä.h
>

1163 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

1164 
	~<bôs/°dlib-ldbl.h
>

1167 
__END_DECLS


	@/usr/include/string.h

22 #i‚def 
_STRING_H


23 
	#_STRING_H
 1

	)

25 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

26 
	~<bôs/libc-hódî-°¨t.h
>

28 
	g__BEGIN_DECLS


31 
	#__√ed_size_t


	)

32 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

36 #i‡
deföed
 
__˝lu•lus
 && (
__GNUC_PREREQ
 (4, 4) \

37 || 
	$__glibc_˛™g_¥îeq
 (3, 5))

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

43 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

44 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

47 *
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
)

48 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

53 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || 
	`__GLIBC_USE
 (
ISOC2X
)

54 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

55 
__c
, 
size_t
 
__n
)

56 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 4));

61 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

64 
	$memcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

65 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

80 
	$__memcm≥q
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

81 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

84 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


87 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

88 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

89 c⁄° *
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

90 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

92 #ifde‡
__OPTIMIZE__


93 
__exã∫_Æways_ölöe
 *

94 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


96  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

99 
__exã∫_Æways_ölöe
 const *

100 
	`memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


102  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

105 
	}
}

107 *
	$memchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

108 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

111 #ifde‡
__USE_GNU


114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

116 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" c⁄° *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

118 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$øwmemchr
 (c⁄° *
__s
, 
__c
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

125 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


126 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

127 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

128 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

129 "C++" c⁄° *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

130 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

131 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

133 *
	$memrchr
 (c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

134 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1))

135 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3));

141 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

142 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

144 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

145 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

146 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

149 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

150 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

152 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

153 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

156 
	$°rcmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

157 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

159 
	$°∫cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

160 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

163 
	$°rcﬁl
 (c⁄° *
__s1
, c⁄° *
__s2
)

164 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

166 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

167 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

168 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

170 #ifde‡
__USE_XOPEN2K8


172 
	~<bôs/ty≥s/loˇÀ_t.h
>

175 
	$°rcﬁl_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__l
)

176 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

179 
size_t
 
	$°rx‰m_l
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

180 
loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4))

181 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

184 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8
 \

185 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| 
	$__GLIBC_USE
 (
ISOC2X
))

187 *
	$°rdup
 (c⁄° *
__s
)

188 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

194 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
Ë|| __GLIBC_USE (
ISOC2X
)

195 *
	$°∫dup
 (c⁄° *
__°rög
, 
size_t
 
__n
)

196 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

199 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


201 
	#°rdu∑
(
s
) \

202 (
__exãnsi⁄__
 \

204 c⁄° *
__ﬁd
 = (
s
); \

205 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

206 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

207 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

208 
	}
}))

	)

211 
	#°∫du∑
(
s
, 
n
) \

212 (
__exãnsi⁄__
 \

214 c⁄° *
__ﬁd
 = (
s
); \

215 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

216 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

217 
__√w
[
__Àn
] = '\0'; \

218 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

219 }))

	)

223 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


226 *
°rchr
 (*
__s
, 
__c
)

227 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

228 c⁄° *
°rchr
 (c⁄° *
__s
, 
__c
)

229 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

231 #ifde‡
__OPTIMIZE__


232 
__exã∫_Æways_ölöe
 *

233 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


235  
__buûtö_°rchr
 (
__s
, 
__c
);

238 
__exã∫_Æways_ölöe
 const *

239 
°rchr
 (c⁄° *
__s
, 
__c
Ë
	g__THROW


241  
__buûtö_°rchr
 (
__s
, 
__c
);

246 *
	$°rchr
 (c⁄° *
__s
, 
__c
)

247 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

250 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


253 *
	`°ºchr
 (*
__s
, 
__c
)

254 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

255 c⁄° *
	`°ºchr
 (c⁄° *
__s
, 
__c
)

256 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

258 #ifde‡
__OPTIMIZE__


259 
__exã∫_Æways_ölöe
 *

260 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


262  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

265 
__exã∫_Æways_ölöe
 const *

266 
	`°ºchr
 (c⁄° *
__s
, 
__c
Ë
__THROW


268  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

271 
	}
}

273 *
	$°ºchr
 (c⁄° *
__s
, 
__c
)

274 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

277 #ifde‡
__USE_MISC


280 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


281 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

282 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

283 "C++" c⁄° *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

284 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

286 *
	$°rch∫ul
 (c⁄° *
__s
, 
__c
)

287 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

293 
size_t
 
	$°rc•n
 (c⁄° *
__s
, c⁄° *
__ªje˘
)

294 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

297 
size_t
 
	$°r•n
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

298 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

300 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


303 *
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
)

304 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

305 c⁄° *
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

306 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

308 #ifde‡
__OPTIMIZE__


309 
__exã∫_Æways_ölöe
 *

310 
	`°Ωbrk
 (*
__s
, c⁄° *
__ac˚±
Ë
__THROW


312  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

315 
__exã∫_Æways_ölöe
 const *

316 
	`°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
Ë
__THROW


318  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

321 
	}
}

323 *
	$°Ωbrk
 (c⁄° *
__s
, c⁄° *
__ac˚±
)

324 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


330 *
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

331 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

332 c⁄° *
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

333 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

335 #ifde‡
__OPTIMIZE__


336 
__exã∫_Æways_ölöe
 *

337 
	`°r°r
 (*
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


339  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

342 
__exã∫_Æways_ölöe
 const *

343 
	`°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
Ë
__THROW


345  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

348 
	}
}

350 *
	$°r°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

351 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

356 *
	$°πok
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2));

361 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

362 c⁄° *
__ª°ri˘
 
__dñim
,

363 **
__ª°ri˘
 
__ßve_±r
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

365 #ifde‡
__USE_POSIX


366 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__dñim
,

367 **
__ª°ri˘
 
__ßve_±r
)

368 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

371 #ifde‡
__USE_MISC


373 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


374 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, c⁄° *
__√edÀ
)

375 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

376 "C++" c⁄° *
	$°rˇ£°r
 (c⁄° *
__hay°ack
,

377 c⁄° *
__√edÀ
)

378 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

380 *
	$°rˇ£°r
 (c⁄° *
__hay°ack
, c⁄° *
__√edÀ
)

381 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

385 #ifde‡
__USE_MISC


389 *
	$memmem
 (c⁄° *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

390 c⁄° *
__√edÀ
, 
size_t
 
__√edÀÀn
)

391 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3))

392 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2))

393 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 3, 4));

397 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

398 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

399 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

400 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

401 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

402 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

407 
size_t
 
	$°æí
 (c⁄° *
__s
)

408 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

410 #ifdef 
__USE_XOPEN2K8


413 
size_t
 
	$°∫Àn
 (c⁄° *
__°rög
, 
size_t
 
__maxÀn
)

414 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

419 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

420 #ifde‡
__USE_XOPEN2K


428 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


431 #ifde‡
__REDIRECT_NTH


432 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

433 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

434 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2))

435 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

437 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

438 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

439 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

444 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

445 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

448 #ifde‡
__USE_GNU


450 c⁄° *
	$°ªº‹desc_≈
 (
__îr
Ë
__THROW
;

452 c⁄° *
	$°ªº‹«me_≈
 (
__îr
Ë
__THROW
;

456 #ifde‡
__USE_XOPEN2K8


458 *
	$°ªº‹_l
 (
__î∫um
, 
loˇÀ_t
 
__l
Ë
__THROW
;

461 #ifde‡
__USE_MISC


462 
	~<°rögs.h
>

466 
	$ex∂icô_bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

467 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

471 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

472 c⁄° *
__ª°ri˘
 
__dñim
)

473 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

476 #ifdef 
__USE_XOPEN2K8


478 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

480 #ifde‡
__USE_GNU


482 c⁄° *
	$sigabbªv_≈
 (
__sig
Ë
__THROW
;

485 c⁄° *
	$sigdes¸_≈
 (
__sig
Ë
__THROW
;

489 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

490 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

491 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
)

492 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

496 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

497 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

498 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

499 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

500 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

501 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

504 #ifde‡
__USE_MISC


506 
size_t
 
	$°æ˝y
 (*
__ª°ri˘
 
__de°
,

507 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

508 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

512 
size_t
 
	$°æˇt
 (*
__ª°ri˘
 
__de°
,

513 c⁄° *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

514 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__ªad_wrôe__
, 1, 3));

517 #ifdef 
__USE_GNU


519 
	$°rvîscmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

520 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

523 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

526 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

527 
	`__©å_ac˚ss
 ((
__ªad_wrôe__
, 1, 2));

529 #i‚de‡
ba£«me


534 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


535 "C++" *
	$ba£«me
 (*
__fûíame
)

536 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

537 "C++" c⁄° *
	$ba£«me
 (c⁄° *
__fûíame
)

538 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

540 *
	$ba£«me
 (c⁄° *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

545 #i‡
	`__GNUC_PREREQ
 (3,4)

546 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


548 
	~<bôs/°rög_f‹tifõd.h
>

552 
__END_DECLS


	@/usr/include/sys/mman.h

19 #i‚def 
_SYS_MMAN_H


20 
	#_SYS_MMAN_H
 1

	)

22 
	~<„©uªs.h
>

23 
	~<bôs/ty≥s.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 #i‚de‡
__off_t_deföed


28 #i‚de‡
__USE_FILE_OFFSET64


29 
__off_t
 
	toff_t
;

31 
__off64_t
 
	toff_t
;

33 
	#__off_t_deföed


	)

36 #i‚de‡
__mode_t_deföed


37 
__mode_t
 
	tmode_t
;

38 
	#__mode_t_deföed


	)

41 
	~<bôs/mm™.h
>

44 
	#MAP_FAILED
 ((*Ë-1)

	)

46 
	g__BEGIN_DECLS


56 #i‚de‡
__USE_FILE_OFFSET64


57 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

58 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

60 #ifde‡
__REDIRECT_NTH


61 * 
	`__REDIRECT_NTH
 (
mm≠
,

62 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

63 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

64 
mm≠64
);

66 
	#mm≠
 
mm≠64


	)

69 #ifde‡
__USE_LARGEFILE64


70 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

71 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

76 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

81 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

89 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

91 #ifde‡
__USE_MISC


94 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

96 #ifde‡
__USE_XOPEN2K


98 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

103 
	$mlock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

106 
	$mu∆ock
 (c⁄° *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

111 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

115 
	$mu∆ockÆl
 (Ë
__THROW
;

117 #ifde‡
__USE_MISC


123 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

124 
__THROW
;

127 #ifde‡
__USE_GNU


133 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

134 
__Êags
, ...Ë
__THROW
;

138 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

139 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

144 
	`shm_›í
 (c⁄° *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

147 
	`shm_u∆ök
 (c⁄° *
__«me
);

150 
	~<bôs/mm™_ext.h
>

152 
__END_DECLS


	@/usr/include/sys/stat.h

22 #i‚def 
_SYS_STAT_H


23 
	#_SYS_STAT_H
 1

	)

25 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #ifde‡
__USE_XOPEN2K8


30 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


37 
	~<bôs/ty≥s/time_t.h
>

39 #i‚de‡
__dev_t_deföed


40 
__dev_t
 
	tdev_t
;

41 
	#__dev_t_deföed


	)

44 #i‚de‡
__gid_t_deföed


45 
__gid_t
 
	tgid_t
;

46 
	#__gid_t_deföed


	)

49 #i‚de‡
__öo_t_deföed


50 #i‚de‡
__USE_FILE_OFFSET64


51 
__öo_t
 
	töo_t
;

53 
__öo64_t
 
	töo_t
;

55 
	#__öo_t_deföed


	)

58 #i‚de‡
__mode_t_deföed


59 
__mode_t
 
	tmode_t
;

60 
	#__mode_t_deföed


	)

63 #i‚de‡
__∆ök_t_deföed


64 
__∆ök_t
 
	t∆ök_t
;

65 
	#__∆ök_t_deföed


	)

68 #i‚de‡
__off_t_deföed


69 #i‚de‡
__USE_FILE_OFFSET64


70 
__off_t
 
	toff_t
;

72 
__off64_t
 
	toff_t
;

74 
	#__off_t_deföed


	)

77 #i‚de‡
__uid_t_deföed


78 
__uid_t
 
	tuid_t
;

79 
	#__uid_t_deföed


	)

83 #ifde‡
__USE_UNIX98


84 #i‚de‡
__blk˙t_t_deföed


85 #i‚de‡
__USE_FILE_OFFSET64


86 
__blk˙t_t
 
	tblk˙t_t
;

88 
__blk˙t64_t
 
	tblk˙t_t
;

90 
	#__blk˙t_t_deföed


	)

93 #i‚de‡
__blksize_t_deföed


94 
__blksize_t
 
	tblksize_t
;

95 
	#__blksize_t_deföed


	)

99 
	g__BEGIN_DECLS


101 
	~<bôs/°©.h
>

103 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


104 
	#S_IFMT
 
__S_IFMT


	)

105 
	#S_IFDIR
 
__S_IFDIR


	)

106 
	#S_IFCHR
 
__S_IFCHR


	)

107 
	#S_IFBLK
 
__S_IFBLK


	)

108 
	#S_IFREG
 
__S_IFREG


	)

109 #ifde‡
__S_IFIFO


110 
	#S_IFIFO
 
__S_IFIFO


	)

112 #ifde‡
__S_IFLNK


113 
	#S_IFLNK
 
__S_IFLNK


	)

115 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
) \

116 && 
deföed
 
	g__S_IFSOCK


117 
	#S_IFSOCK
 
__S_IFSOCK


	)

123 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

125 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

126 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

127 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

128 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

129 #ifde‡
__S_IFIFO


130 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

132 #ifde‡
__S_IFLNK


133 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

136 #i‡
deföed
 
__USE_MISC
 && !deföed 
__S_IFLNK


137 
	#S_ISLNK
(
mode
Ë0

	)

140 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K
) \

141 && 
deföed
 
	g__S_IFSOCK


142 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

143 #ñi‡
deföed
 
__USE_XOPEN2K


144 
	#S_ISSOCK
(
mode
Ë0

	)

151 #ifdef 
__USE_POSIX199309


152 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

153 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

154 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

160 
	#S_ISUID
 
__S_ISUID


	)

161 
	#S_ISGID
 
__S_ISGID


	)

163 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


165 
	#S_ISVTX
 
__S_ISVTX


	)

168 
	#S_IRUSR
 
__S_IREAD


	)

169 
	#S_IWUSR
 
__S_IWRITE


	)

170 
	#S_IXUSR
 
__S_IEXEC


	)

172 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

174 #ifde‡
__USE_MISC


175 
	#S_IREAD
 
S_IRUSR


	)

176 
	#S_IWRITE
 
S_IWUSR


	)

177 
	#S_IEXEC
 
S_IXUSR


	)

180 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

181 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

182 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

184 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

186 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

187 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

188 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

190 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

193 #ifdef 
__USE_MISC


195 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

196 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

197 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

199 
	#S_BLKSIZE
 512

	)

203 #i‚de‡
__USE_FILE_OFFSET64


205 
	$°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

206 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

210 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

212 #ifde‡
__USE_TIME64_REDIRECTS


213 #ifde‡
__REDIRECT_NTH


214 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

215 
°©
 *
__ª°ri˘
 
__buf
),

216 
__°©64_time64
)

217 
	`__n⁄nuŒ
 ((1, 2));

218 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
),

219 
__f°©64_time64
)

220 
	`__n⁄nuŒ
 ((2));

222 
	#°©
 
__°©64_time64


	)

223 
	#f°©
 
__f°©64_time64


	)

226 #ifde‡
__REDIRECT_NTH


227 
	`__REDIRECT_NTH
 (
°©
, (c⁄° *
__ª°ri˘
 
__fûe
,

228 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

229 
	`__n⁄nuŒ
 ((1, 2));

230 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

231 
	`__n⁄nuŒ
 ((2));

233 
	#°©
 
°©64


	)

234 
	#f°©
 
f°©64


	)

238 #ifde‡
__USE_LARGEFILE64


239 #i‚de‡
__USE_TIME64_REDIRECTS


240 
	$°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

241 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

242 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
°©64
, (c⁄° *
__ª°ri˘
 
__fûe
,

246 
°©64
 *
__ª°ri˘
 
__buf
),

247 
__°©64_time64
)

248 
	`__n⁄nuŒ
 ((1, 2));

249 
	`__REDIRECT_NTH
 (
f°©64
, (
__fd
, 
°©64
 *
__buf
),

250 
__f°©64_time64
)

251 
	`__n⁄nuŒ
 ((2));

253 
	#°©64
 
__°©64_time64


	)

254 
	#f°©64
 
__f°©64_time64


	)

259 #ifde‡
__USE_ATFILE


263 #i‚de‡
__USE_FILE_OFFSET64


264 
	$f°©©
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

265 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

266 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

268 #ifde‡
__USE_TIME64_REDIRECTS


269 #ifde‡
__REDIRECT_NTH


270 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
,

272 
__Êag
),

273 
__f°©©64_time64
Ë
	`__n⁄nuŒ
 ((2, 3));

275 
	#f°©©
 
__f°©©64_time64


	)

278 #ifde‡
__REDIRECT_NTH


279 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

280 
°©
 *
__ª°ri˘
 
__buf
,

281 
__Êag
),

282 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

284 
	#f°©©
 
f°©©64


	)

289 #ifde‡
__USE_LARGEFILE64


290 #i‚de‡
__USE_TIME64_REDIRECTS


291 
	$f°©©64
 (
__fd
, c⁄° *
__ª°ri˘
 
__fûe
,

292 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

293 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

295 #ifde‡
__REDIRECT_NTH


296 
	`__REDIRECT_NTH
 (
f°©©64
, (
__fd
,

297 c⁄° *
__ª°ri˘
 
__fûe
,

298 
°©64
 *
__ª°ri˘
 
__buf
,

299 
__Êag
),

300 
__f°©©64_time64
)

301 
	`__n⁄nuŒ
 ((2, 3));

303 
	#f°©©64
 
__f°©©64_time64


	)

309 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


310 #i‚de‡
__USE_FILE_OFFSET64


313 
	$l°©
 (c⁄° *
__ª°ri˘
 
__fûe
,

314 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

316 #ifde‡
__USE_TIME64_REDIRECTS


317 #ifde‡
__REDIRECT_NTH


318 
	`__REDIRECT_NTH
 (
l°©
,

319 (c⁄° *
__ª°ri˘
 
__fûe
,

320 
°©
 *
__ª°ri˘
 
__buf
), 
__l°©64_time64
)

321 
	`__n⁄nuŒ
 ((1, 2));

323 
	#l°©
 
__l°©64_time64


	)

326 #ifde‡
__REDIRECT_NTH


327 
	`__REDIRECT_NTH
 (
l°©
,

328 (c⁄° *
__ª°ri˘
 
__fûe
,

329 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

330 
	`__n⁄nuŒ
 ((1, 2));

332 
	#l°©
 
l°©64


	)

336 #ifde‡
__USE_LARGEFILE64


337 #i‚de‡
__USE_TIME64_REDIRECTS


338 
	$l°©64
 (c⁄° *
__ª°ri˘
 
__fûe
,

339 
°©64
 *
__ª°ri˘
 
__buf
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

342 
	`__REDIRECT_NTH
 (
l°©64
, (c⁄° *
__ª°ri˘
 
__fûe
,

343 
°©64
 *
__ª°ri˘
 
__buf
),

344 
__l°©64_time64
)

345 
	`__n⁄nuŒ
 ((1, 2));

352 
	$chmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_MISC


359 
	$lchmod
 (c⁄° *
__fûe
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((1));

364 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_XOPEN_EXTENDED


365 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

368 #ifde‡
__USE_ATFILE


371 
	$fchmod©
 (
__fd
, c⁄° *
__fûe
, 
__mode_t
 
__mode
,

372 
__Êag
)

373 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

380 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

382 #ifdef 
__USE_GNU


385 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

389 
	$mkdú
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1));

392 #ifde‡
__USE_ATFILE


396 
	$mkdú©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

397 
__THROW
 
	`__n⁄nuŒ
 ((2));

403 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


404 
	$mknod
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

405 
__THROW
 
	`__n⁄nuŒ
 ((1));

407 #ifde‡
__USE_ATFILE


411 
	$mknod©
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
,

412 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

418 
	$mkfifo
 (c⁄° *
__∑th
, 
__mode_t
 
__mode
)

419 
__THROW
 
	`__n⁄nuŒ
 ((1));

421 #ifde‡
__USE_ATFILE


425 
	$mkfifﬂt
 (
__fd
, c⁄° *
__∑th
, 
__mode_t
 
__mode
)

426 
__THROW
 
	`__n⁄nuŒ
 ((2));

429 #ifde‡
__USE_ATFILE


430 #i‚de‡
__USE_TIME64_REDIRECTS


433 
	$utimíßt
 (
__fd
, c⁄° *
__∑th
,

434 c⁄° 
time•ec
 
__times
[2],

435 
__Êags
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

438 #ifde‡
__REDIRECT_NTH


439 
	`__REDIRECT_NTH
 (
utimíßt
, (
fd
, c⁄° *
__∑th
,

440 c⁄° 
time•ec
 
__times
[2],

441 
Êags
),

442 
__utimíßt64
Ë
	`__n⁄nuŒ
 ((2));

444 
	#utimíßt
 
__utimíßt64


	)

449 #ifde‡
__USE_XOPEN2K8


450 #i‚de‡
__USE_TIME64_REDIRECTS


452 
	$futimís
 (
__fd
, c⁄° 
time•ec
 
__times
[2]Ë
__THROW
;

455 #ifde‡
__REDIRECT_NTH


456 
	`__REDIRECT_NTH
 (
futimís
, (
fd
, c⁄° 
time•ec
 
__times
[2]),

457 
__futimís64
);

459 
	#futimís
 
__futimís64


	)

464 #ifde‡
__USE_GNU


465 
	~<bôs/°©x.h
>

468 
__END_DECLS


	@/usr/include/time.h

22 #i‚def 
_TIME_H


23 
	#_TIME_H
 1

	)

25 
	~<„©uªs.h
>

27 
	#__√ed_size_t


	)

28 
	#__√ed_NULL


	)

29 
	~<°ddef.h
>

33 
	~<bôs/time.h
>

37 
	~<bôs/ty≥s/˛ock_t.h
>

38 
	~<bôs/ty≥s/time_t.h
>

39 
	~<bôs/ty≥s/°ru˘_tm.h
>

41 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_ISOC11


42 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

45 #ifde‡
__USE_POSIX199309


46 
	~<bôs/ty≥s/˛ockid_t.h
>

47 
	~<bôs/ty≥s/timî_t.h
>

48 
	~<bôs/ty≥s/°ru˘_ôimî•ec.h
>

49 
	gsigevít
;

52 #ifde‡
__USE_XOPEN2K


53 #i‚de‡
__pid_t_deföed


54 
__pid_t
 
	tpid_t
;

55 
	#__pid_t_deföed


	)

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

63 #ifde‡
__USE_ISOC11


65 
	#TIME_UTC
 1

	)

68 
__BEGIN_DECLS


72 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

74 #i‚de‡
__USE_TIME64_REDIRECTS


76 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

79 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

80 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

83 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

85 #ifde‡
__REDIRECT_NTH


86 
time_t
 
	`__REDIRECT_NTH
 (
time
, (time_à*
__timî
), 
__time64
);

87 
	`__REDIRECT_NTH
 (
dif·ime
, (
time_t
 
__time1
,Åime_à
__time0
),

88 
__dif·ime64
Ë
	`__©åibuã__
 ((
__c⁄°__
));

89 
time_t
 
	`__REDIRECT_NTH
 (
mktime
, (
tm
 *
__ç
), 
__mktime64
);

91 
	#time
 
__time64


	)

92 
	#dif·ime
 
__dif·ime64


	)

93 
	#mktime
 
__mktime64


	)

100 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

101 c⁄° *
__ª°ri˘
 
__f‹m©
,

102 c⁄° 
tm
 *
__ª°ri˘
 
__ç
)

103 
__THROW
 
	`__n⁄nuŒ
((1, 3, 4));

105 #ifde‡
__USE_XOPEN


108 *
	$°Ωtime
 (c⁄° *
__ª°ri˘
 
__s
,

109 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

110 
__THROW
;

113 #ifde‡
__USE_XOPEN2K8


117 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

118 c⁄° *
__ª°ri˘
 
__f‹m©
,

119 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

120 
loˇÀ_t
 
__loc
Ë
__THROW
;

123 #ifde‡
__USE_GNU


124 *
	$°Ωtime_l
 (c⁄° *
__ª°ri˘
 
__s
,

125 c⁄° *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

126 
loˇÀ_t
 
__loc
Ë
__THROW
;

130 #i‚de‡
__USE_TIME64_REDIRECTS


133 
tm
 *
	$gmtime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

137 
tm
 *
	$loˇ…ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

140 #ifde‡
__REDIRECT_NTH


141 
tm
*
	`__REDIRECT_NTH
 (
gmtime
, (c⁄° 
time_t
 *
__timî
), 
__gmtime64
);

142 
tm
 *
	`__REDIRECT_NTH
 (
loˇ…ime
, (c⁄° 
time_t
 *
__timî
),

143 
__loˇ…ime64
);

145 
	#gmtime
 
__gmtime64


	)

146 
	#loˇ…ime
 
__loˇ…ime64


	)

151 #i‡
deföed
 
__USE_POSIX
 || 
	`__GLIBC_USE
 (
ISOC2X
)

152 #i‚de‡
__USE_TIME64_REDIRECTS


155 
tm
 *
	$gmtime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

156 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

160 
tm
 *
	$loˇ…ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

161 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

163 #ifde‡
__REDIRECT_NTH


164 
tm
*
	`__REDIRECT_NTH
 (
gmtime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

165 
tm
 *
__ª°ri˘
 
__ç
),

166 
__gmtime64_r
);

168 
tm
*
	`__REDIRECT_NTH
 (
loˇ…ime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__t
,

169 
tm
 *
__ª°ri˘
 
__ç
),

170 
__loˇ…ime64_r
);

172 
	#gmtime_r
 
__gmtime64_r


	)

173 
	#loˇ…ime_r
 
__loˇ…ime_r


	)

180 *
	$as˘ime
 (c⁄° 
tm
 *
__ç
Ë
__THROW
;

183 #i‚de‡
__USE_TIME64_REDIRECTS


184 *
	$˘ime
 (c⁄° 
time_t
 *
__timî
Ë
__THROW
;

186 #ifde‡
__REDIRECT_NTH


187 *
	`__REDIRECT_NTH
 (
˘ime
, (c⁄° 
time_t
 *
__timî
), 
__˘ime64
);

189 
	#˘ime
 
__˘ime64


	)

193 #ifde‡
__USE_POSIX


198 *
	$as˘ime_r
 (c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

199 *
__ª°ri˘
 
__buf
Ë
__THROW
;

202 #i‚de‡
__USE_TIME64_REDIRECTS


203 *
	$˘ime_r
 (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

204 *
__ª°ri˘
 
__buf
Ë
__THROW
;

206 #ifde‡
__REDIRECT_NTH


207 *
	`__REDIRECT_NTH
 (
˘ime_r
, (c⁄° 
time_t
 *
__ª°ri˘
 
__timî
,

208 *
__ª°ri˘
 
__buf
), 
__˘ime64_r
);

210 
	#˘ime_r
 
__˘ime64_r


	)

218 *
__tz«me
[2];

219 
__daylight
;

220 
__timez⁄e
;

223 #ifdef 
__USE_POSIX


225 *
tz«me
[2];

229 
	$tz£t
 (Ë
__THROW
;

232 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


233 
daylight
;

234 
timez⁄e
;

240 
	#__i¶óp
(
yór
) \

241 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

244 #i‡
deföed
 
__USE_MISC
 || 
	`__GLIBC_USE
 (
ISOC2X
)

245 #i‚de‡
__USE_TIME64_REDIRECTS


247 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

249 #ifde‡
__REDIRECT_NTH


250 
time_t
 
	`__REDIRECT_NTH
 (
timegm
, (
tm
 *
__ç
), 
__timegm64
);

252 
	#timegm
 
__timegm64


	)

258 #ifde‡
__USE_MISC


262 #i‚de‡
__USE_TIME64_REDIRECTS


264 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

266 #ifde‡
__REDIRECT_NTH


267 
time_t
 
	`__REDIRECT_NTH
 (
timñoˇl
, (
tm
 *
__ç
), 
__mktime64
);

272 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

276 #ifde‡
__USE_POSIX199309


277 #i‚de‡
__USE_TIME64_REDIRECTS


282 
	`«no¶ìp
 (c⁄° 
time•ec
 *
__ªque°ed_time
,

283 
time•ec
 *
__ªmaöög
);

286 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

289 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
)

290 
__THROW
 
	`__n⁄nuŒ
((2));

293 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, c⁄° 
time•ec
 *
__ç
)

294 
__THROW
 
	`__n⁄nuŒ
((2));

296 #ifde‡
__REDIRECT


297 
	`__REDIRECT
 (
«no¶ìp
, (c⁄° 
time•ec
 *
__ªque°ed_time
,

298 
time•ec
 *
__ªmaöög
),

299 
__«no¶ìp64
);

300 
	`__REDIRECT_NTH
 (
˛ock_gëªs
, (
˛ockid_t
 
__˛ock_id
,

301 
time•ec
 *
__ªs
),

302 
__˛ock_gëªs64
);

303 
	`__REDIRECT_NTH
 (
˛ock_gëtime
, (
˛ockid_t
 
__˛ock_id
, 

304 
time•ec
 *
__ç
), 
__˛ock_gëtime64
)

305 
	`__n⁄nuŒ
((2));

306 
	`__REDIRECT_NTH
 (
˛ock_£âime
, (
˛ockid_t
 
__˛ock_id
, const 

307 
time•ec
 *
__ç
), 
__˛ock_£âime64
)

308 
	`__n⁄nuŒ
((2));

310 
	#«no¶ìp
 
__«no¶ìp64


	)

311 
	#˛ock_gëªs
 
__˛ock_gëªs64


	)

312 
	#˛ock_gëtime
 
__˛ock_gëtime64


	)

313 
	#˛ock_£âime
 
__˛ock_£âime64


	)

318 #ifde‡
__USE_XOPEN2K


323 #i‚de‡
__USE_TIME64_REDIRECTS


324 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

325 c⁄° 
time•ec
 *
__ªq
,

326 
time•ec
 *
__ªm
);

328 #ifde‡
__REDIRECT


329 
	`__REDIRECT
 (
˛ock_«no¶ìp
, (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

330 c⁄° 
time•ec
 *
__ªq
,

331 
time•ec
 *
__ªm
),

332 
__˛ock_«no¶ìp_time64
);

334 
	#˛ock_«no¶ìp
 
__˛ock_«no¶ìp_time64


	)

339 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

344 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

345 
sigevít
 *
__ª°ri˘
 
__evp
,

346 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

349 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

352 #i‚de‡
__USE_TIME64_REDIRECTS


353 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

354 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

355 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

358 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

359 
__THROW
;

361 #ifde‡
__REDIRECT_NTH


362 
	`__REDIRECT_NTH
 (
timî_£âime
, (
timî_t
 
__timîid
, 
__Êags
,

363 c⁄° 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

364 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
),

365 
__timî_£âime64
);

367 
	`__REDIRECT_NTH
 (
timî_gëtime
, (
timî_t
 
__timîid
,

368 
ôimî•ec
 *
__vÆue
),

369 
__timî_gëtime64
);

371 
	#timî_£âime
 
__timî_£âime64


	)

372 
	#timî_gëtime
 
__timî_gëtime64


	)

377 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

381 #ifde‡
__USE_ISOC11


382 #i‚de‡
__USE_TIME64_REDIRECTS


384 
	$time•ec_gë
 (
time•ec
 *
__ts
, 
__ba£
)

385 
__THROW
 
	`__n⁄nuŒ
 ((1));

387 #ifde‡
__REDIRECT_NTH


388 
	`__REDIRECT_NTH
 (
time•ec_gë
, (
time•ec
 *
__ts
, 
__ba£
),

389 
__time•ec_gë64
Ë
	`__n⁄nuŒ
 ((1));

391 
	#time•ec_gë
 
__time•ec_gë64


	)

397 #i‡
	`__GLIBC_USE
 (
ISOC2X
)

398 #i‚de‡
__USE_TIME64_REDIRECTS


400 
	$time•ec_gëªs
 (
time•ec
 *
__ts
, 
__ba£
)

401 
__THROW
;

403 #ifde‡
__REDIRECT_NTH


404 
	`__REDIRECT_NTH
 (
time•ec_gëªs
, (
time•ec
 *
__ts
,

405 
__ba£
),

406 
__time•ec_gëªs64
);

408 
	#time•ec_gëªs
 
__time•ec_gëªs64


	)

414 #ifde‡
__USE_XOPEN_EXTENDED


426 
gëd©e_îr
;

435 
tm
 *
	`gëd©e
 (c⁄° *
__°rög
);

438 #ifde‡
__USE_GNU


449 
	`gëd©e_r
 (c⁄° *
__ª°ri˘
 
__°rög
,

450 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

453 
__END_DECLS


	@/usr/include/unistd.h

22 #i‚def 
_UNISTD_H


23 
	#_UNISTD_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


32 #ifde‡
__USE_XOPEN2K8


34 
	#_POSIX_VERSION
 200809L

	)

35 #ñi‡
deföed
 
__USE_XOPEN2K


37 
	#_POSIX_VERSION
 200112L

	)

38 #ñi‡
deföed
 
__USE_POSIX199506


40 
	#_POSIX_VERSION
 199506L

	)

41 #ñi‡
deföed
 
__USE_POSIX199309


43 
	#_POSIX_VERSION
 199309L

	)

46 
	#_POSIX_VERSION
 199009L

	)

52 #ifde‡
__USE_XOPEN2K8


53 
	#__POSIX2_THIS_VERSION
 200809L

	)

55 #ñi‡
deföed
 
__USE_XOPEN2K


57 
	#__POSIX2_THIS_VERSION
 200112L

	)

58 #ñi‡
deföed
 
__USE_POSIX199506


60 
	#__POSIX2_THIS_VERSION
 199506L

	)

63 
	#__POSIX2_THIS_VERSION
 199209L

	)

67 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

70 
	#_POSIX2_C_VERSION
 
__POSIX2_THIS_VERSION


	)

74 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

78 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

82 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

86 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

89 #ifde‡
__USE_XOPEN2K8


90 
	#_XOPEN_VERSION
 700

	)

91 #ñi‡
deföed
 
__USE_XOPEN2K


92 
	#_XOPEN_VERSION
 600

	)

93 #ñi‡
deföed
 
__USE_UNIX98


94 
	#_XOPEN_VERSION
 500

	)

96 
	#_XOPEN_VERSION
 4

	)

100 
	#_XOPEN_XCU_VERSION
 4

	)

103 
	#_XOPEN_XPG2
 1

	)

104 
	#_XOPEN_XPG3
 1

	)

105 
	#_XOPEN_XPG4
 1

	)

108 
	#_XOPEN_UNIX
 1

	)

112 
	#_XOPEN_ENH_I18N
 1

	)

115 
	#_XOPEN_LEGACY
 1

	)

202 
	~<bôs/posix_›t.h
>

205 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


206 
	~<bôs/ívú⁄míts.h
>

210 
	#STDIN_FILENO
 0

	)

211 
	#STDOUT_FILENO
 1

	)

212 
	#STDERR_FILENO
 2

	)

217 
	~<bôs/ty≥s.h
>

219 #i‚def 
__ssize_t_deföed


220 
__ssize_t
 
	tssize_t
;

221 
	#__ssize_t_deföed


	)

224 
	#__√ed_size_t


	)

225 
	#__√ed_NULL


	)

226 
	~<°ddef.h
>

228 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


231 #i‚de‡
__gid_t_deföed


232 
__gid_t
 
	tgid_t
;

233 
	#__gid_t_deföed


	)

236 #i‚de‡
__uid_t_deföed


237 
__uid_t
 
	tuid_t
;

238 
	#__uid_t_deföed


	)

241 #i‚de‡
__off_t_deföed


242 #i‚de‡
__USE_FILE_OFFSET64


243 
__off_t
 
	toff_t
;

245 
__off64_t
 
	toff_t
;

247 
	#__off_t_deföed


	)

249 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


250 
__off64_t
 
	toff64_t
;

251 
	#__off64_t_deföed


	)

254 #i‚de‡
__u£c⁄ds_t_deföed


255 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

256 
	#__u£c⁄ds_t_deföed


	)

259 #i‚de‡
__pid_t_deföed


260 
__pid_t
 
	tpid_t
;

261 
	#__pid_t_deföed


	)

265 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


266 #i‚de‡
__öçå_t_deföed


267 
__öçå_t
 
	töçå_t
;

268 
	#__öçå_t_deföed


	)

272 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


273 #i‚de‡
__sockÀn_t_deföed


274 
__sockÀn_t
 
	tsockÀn_t
;

275 
	#__sockÀn_t_deföed


	)

281 
	#R_OK
 4

	)

282 
	#W_OK
 2

	)

283 
	#X_OK
 1

	)

284 
	#F_OK
 0

	)

287 
	$ac˚ss
 (c⁄° *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_GNU


292 
	$euidac˚ss
 (c⁄° *
__«me
, 
__ty≥
)

293 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$óc˚ss
 (c⁄° *
__«me
, 
__ty≥
)

297 
__THROW
 
	`__n⁄nuŒ
 ((1));

300 
	$execvót
 (
__fd
, c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

301 *c⁄° 
__ívp
[], 
__Êags
)

302 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

305 #ifde‡
__USE_ATFILE


309 
	$Ác˚sßt
 (
__fd
, c⁄° *
__fûe
, 
__ty≥
, 
__Êag
)

310 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

315 #i‚def 
_STDIO_H


316 
	#SEEK_SET
 0

	)

317 
	#SEEK_CUR
 1

	)

318 
	#SEEK_END
 2

	)

319 #ifde‡
__USE_GNU


320 
	#SEEK_DATA
 3

	)

321 
	#SEEK_HOLE
 4

	)

325 #i‡
deföed
 
__USE_MISC
 && !deföed 
L_SET


327 
	#L_SET
 
SEEK_SET


	)

328 
	#L_INCR
 
SEEK_CUR


	)

329 
	#L_XTND
 
SEEK_END


	)

338 #i‚de‡
__USE_FILE_OFFSET64


339 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

341 #ifde‡
__REDIRECT_NTH


342 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

343 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

344 
l£ek64
);

346 
	#l£ek
 
l£ek64


	)

349 #ifde‡
__USE_LARGEFILE64


350 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

351 
__THROW
;

358 
	`˛o£
 (
__fd
);

360 #ifde‡
__USE_MISC


363 
	$˛o£‰om
 (
__lowfd
Ë
__THROW
;

371 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur


372 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

378 
ssize_t
 
	$wrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
Ë
__wur


379 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

381 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


382 #i‚de‡
__USE_FILE_OFFSET64


389 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off_t
 
__off£t
Ë
__wur


391 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

398 
ssize_t
 
	$pwrôe
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

399 
__off_t
 
__off£t
Ë
__wur


400 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

403 #ifde‡
__REDIRECT


404 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

405 
__off64_t
 
__off£t
),

406 
¥ód64
Ë
__wur


407 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

408 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, c⁄° *
__buf
,

409 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

410 
pwrôe64
Ë
__wur


411 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

413 
	#¥ód
 
¥ód64


	)

414 
	#pwrôe
 
pwrôe64


	)

418 #ifde‡
__USE_LARGEFILE64


422 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

423 
__off64_t
 
__off£t
Ë
__wur


424 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

427 
ssize_t
 
	$pwrôe64
 (
__fd
, c⁄° *
__buf
, 
size_t
 
__n
,

428 
__off64_t
 
__off£t
Ë
__wur


429 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2, 3));

437 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

439 #ifde‡
__USE_GNU


442 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

452 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

464 
	`¶ìp
 (
__£c⁄ds
);

466 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

467 || 
deföed
 
__USE_MISC


472 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

473 
__THROW
;

480 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

489 
	`∑u£
 ();

493 
	$chown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

494 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

496 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


498 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

503 
	$lchown
 (c⁄° *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

504 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

508 #ifde‡
__USE_ATFILE


511 
	$fchow«t
 (
__fd
, c⁄° *
__fûe
, 
__uid_t
 
__ow√r
,

512 
__gid_t
 
__group
, 
__Êag
)

513 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

517 
	$chdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

519 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


521 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

531 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

533 #ifdef 
__USE_GNU


537 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

540 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

541 || 
deföed
 
__USE_MISC


545 *
	$gëwd
 (*
__buf
)

546 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur


547 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1));

552 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

555 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

557 #ifde‡
__USE_GNU


560 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

564 **
__ívú⁄
;

565 #ifde‡
__USE_GNU


566 **
ívú⁄
;

572 
	$execve
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[],

573 *c⁄° 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

575 #ifde‡
__USE_XOPEN2K8


578 
	$„xecve
 (
__fd
, *c⁄° 
__¨gv
[], *c⁄° 
__ívp
[])

579 
__THROW
 
	`__n⁄nuŒ
 ((2));

584 
	$execv
 (c⁄° *
__∑th
, *c⁄° 
__¨gv
[])

585 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

589 
	$exe˛e
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

590 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

594 
	$exe˛
 (c⁄° *
__∑th
, c⁄° *
__¨g
, ...)

595 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

599 
	$execvp
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[])

600 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

605 
	$exe˛p
 (c⁄° *
__fûe
, c⁄° *
__¨g
, ...)

606 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

608 #ifde‡
__USE_GNU


611 
	$execv≥
 (c⁄° *
__fûe
, *c⁄° 
__¨gv
[],

612 *c⁄° 
__ívp
[])

613 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

617 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


619 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

624 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

630 
	~<bôs/c⁄‚ame.h
>

633 
	$∑thc⁄f
 (c⁄° *
__∑th
, 
__«me
)

634 
__THROW
 
	`__n⁄nuŒ
 ((1));

637 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

640 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

642 #ifdef 
__USE_POSIX2


644 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW


645 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

650 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

653 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

656 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

659 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

660 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


661 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

668 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

670 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


682 
	$£çgΩ
 (Ë
__THROW
;

689 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

691 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


693 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

697 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

700 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

703 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

706 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

711 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur


712 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 1);

713 #ifdef 
__USE_GNU


715 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

722 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

724 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


727 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

730 #ifde‡
__USE_XOPEN2K


732 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

739 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

741 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


744 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

747 #ifde‡
__USE_XOPEN2K


749 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

752 #ifde‡
__USE_GNU


755 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

756 
__THROW
;

760 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

761 
__THROW
;

765 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

766 
__THROW
 
__wur
;

770 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

771 
__THROW
 
__wur
;

778 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

780 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

781 || 
deföed
 
__USE_MISC


786 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

789 #ifde‡
__USE_GNU


793 
__pid_t
 
	$_F‹k
 (Ë
__THROW
;

799 *
	$ây«me
 (
__fd
Ë
__THROW
;

803 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

804 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur


805 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

809 
	$ißây
 (
__fd
Ë
__THROW
;

811 #ifde‡
__USE_MISC


814 
	$ây¶Ÿ
 (Ë
__THROW
;

819 
	$lök
 (c⁄° *
__‰om
, c⁄° *
__to
)

820 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

822 #ifde‡
__USE_ATFILE


825 
	$lök©
 (
__‰omfd
, c⁄° *
__‰om
, 
__tofd
,

826 c⁄° *
__to
, 
__Êags
)

827 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

830 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


832 
	$symlök
 (c⁄° *
__‰om
, c⁄° *
__to
)

833 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

838 
ssize_t
 
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
,

839 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

840 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur


841 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 2, 3);

845 #ifde‡
__USE_ATFILE


847 
	$symlök©
 (c⁄° *
__‰om
, 
__tofd
,

848 c⁄° *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

851 
ssize_t
 
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

852 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

853 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur


854 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 3, 4);

858 
	$u∆ök
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

860 #ifde‡
__USE_ATFILE


862 
	$u∆ök©
 (
__fd
, c⁄° *
__«me
, 
__Êag
)

863 
__THROW
 
	`__n⁄nuŒ
 ((2));

867 
	$rmdú
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

871 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

874 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

881 *
	`gëlogö
 ();

882 #ifde‡
__USE_POSIX199506


889 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1))

890 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

893 #ifdef 
__USE_MISC


895 
	$£éogö
 (c⁄° *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

899 #ifdef 
__USE_POSIX2


903 
	~<bôs/gë›t_posix.h
>

907 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


911 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1))

912 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

916 #i‡
deföed
 
__USE_MISC


919 
	$£tho°«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

920 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

924 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

930 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

931 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur


932 
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

933 
	$£tdomaö«me
 (c⁄° *
__«me
, 
size_t
 
__Àn
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 2));

939 
	$vh™gup
 (Ë
__THROW
;

942 
	$ªvoke
 (c⁄° *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

950 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

951 
size_t
 
__off£t
, 
__sˇÀ
)

952 
__THROW
 
	`__n⁄nuŒ
 ((1));

958 
	$ac˘
 (c⁄° *
__«me
Ë
__THROW
;

962 *
	$gëu£rshñl
 (Ë
__THROW
;

963 
	$ídu£rshñl
 (Ë
__THROW
;

964 
	$£tu£rshñl
 (Ë
__THROW
;

970 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

974 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

977 
	$chroŸ
 (c⁄° *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

981 *
	$gë∑ss
 (c⁄° *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

989 
	`fsync
 (
__fd
);

992 #ifde‡
__USE_GNU


995 
	$syncfs
 (
__fd
Ë
__THROW
;

999 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


1002 
	`gëho°id
 ();

1005 
	$sync
 (Ë
__THROW
;

1008 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K


1011 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1016 
	$gëdèbÀsize
 (Ë
__THROW
;

1022 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1025 #i‚de‡
__USE_FILE_OFFSET64


1026 
	$åunˇã
 (c⁄° *
__fûe
, 
__off_t
 
__Àngth
)

1027 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1029 #ifde‡
__REDIRECT_NTH


1030 
	`__REDIRECT_NTH
 (
åunˇã
,

1031 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
),

1032 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1034 
	#åunˇã
 
åunˇã64


	)

1037 #ifde‡
__USE_LARGEFILE64


1038 
	$åunˇã64
 (c⁄° *
__fûe
, 
__off64_t
 
__Àngth
)

1039 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1044 #i‡
deföed
 
__USE_POSIX199309
 \

1045 || 
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1048 #i‚de‡
__USE_FILE_OFFSET64


1049 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1051 #ifde‡
__REDIRECT_NTH


1052 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1053 
·runˇã64
Ë
__wur
;

1055 
	#·runˇã
 
·runˇã64


	)

1058 #ifde‡
__USE_LARGEFILE64


1059 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1065 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1066 || 
deföed
 
__USE_MISC


1070 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1076 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1080 #ifde‡
__USE_MISC


1091 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1096 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1108 
	#F_ULOCK
 0

	)

1109 
	#F_LOCK
 1

	)

1110 
	#F_TLOCK
 2

	)

1111 
	#F_TEST
 3

	)

1113 #i‚de‡
__USE_FILE_OFFSET64


1114 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1116 #ifde‡
__REDIRECT


1117 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1118 
lockf64
Ë
__wur
;

1120 
	#lockf
 
lockf64


	)

1123 #ifde‡
__USE_LARGEFILE64


1124 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1129 #ifde‡
__USE_GNU


1134 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1135 (
__exãnsi⁄__
 \

1136 ({ 
__ªsu…
; \

1137 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1138 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1139 
__ªsu…
; 
	}
}))

	)

1142 
ssize_t
 
c›y_fûe_ønge
 (
__öfd
, 
__off64_t
 *
__pöoff
,

1143 
__outfd
, 
__off64_t
 *
__poutoff
,

1144 
size_t
 
__Àngth
, 
__Êags
);

1147 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1150 
fd©async
 (
__fûdes
);

1153 #ifde‡
__USE_MISC


1162 *
	$¸y±
 (c⁄° *
__key
, c⁄° *
__ß…
)

1163 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1166 #ifdef 
__USE_XOPEN


1171 
	$swab
 (c⁄° *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1172 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2))

1173 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 1, 3))

1174 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

1181 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K


1183 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1186 *
	`cu£rid
 (*
__s
);

1192 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_XOPEN2K


1193 
	$±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1194 (*
__∑ª¡
) (),

1195 (*
__chûd
Ë()Ë
__THROW
;

1198 #ifde‡
__USE_MISC


1201 
	$gëíå›y
 (*
__buf„r
, 
size_t
 
__Àngth
Ë
__wur


1202 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

1205 #ifde‡
__USE_GNU


1211 
	$˛o£_ønge
 (
__fd
, 
__max_fd
,

1212 
__Êags
Ë
__THROW
;

1216 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1217 
	~<bôs/uni°d.h
>

1221 
	~<bôs/uni°d_ext.h
>

1223 
__END_DECLS


	@/usr/include/wchar.h

23 #i‚de‡
_WCHAR_H


24 
	#_WCHAR_H
 1

	)

26 
	#__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


	)

27 
	~<bôs/libc-hódî-°¨t.h
>

30 
	~<bôs/Êﬂä.h
>

32 
	#__√ed_size_t


	)

33 
	#__√ed_wch¨_t


	)

34 
	#__√ed_NULL


	)

35 
	~<°ddef.h
>

37 
	#__√ed___va_li°


	)

38 
	~<°d¨g.h
>

40 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_XOPEN2K8


41 #ifde‡
__GNUC__


42 #i‚de‡
_VA_LIST_DEFINED


43 
__gnuc_va_li°
 
	tva_li°
;

44 
	#_VA_LIST_DEFINED


	)

47 
	~<°d¨g.h
>

51 
	~<bôs/wch¨.h
>

52 
	~<bôs/ty≥s/wöt_t.h
>

53 
	~<bôs/ty≥s/mb°©e_t.h
>

54 
	~<bôs/ty≥s/__FILE.h
>

56 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


57 
	~<bôs/ty≥s/FILE.h
>

59 #ifde‡
__USE_XOPEN2K8


60 
	~<bôs/ty≥s/loˇÀ_t.h
>

64 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

65 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

68 #i‚de‡
WCHAR_MIN


70 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

71 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

74 #i‚de‡
WEOF


75 
	#WEOF
 (0xffffffffu)

	)

85 #i‡(
deföed
 
__USE_XOPEN
 && !deföed 
__USE_GNU
 \

86 && !(
deföed
 
	g__USE_XOPEN2K
 && !deföed 
	g__USE_XOPEN2KXSI
))

87 
	~<bôs/w˘y≥-wch¨.h
>

90 
__BEGIN_DECLS


94 
	gtm
;

98 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

99 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

100 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

103 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

104 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

105 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

107 #ifde‡
__USE_MISC


109 
size_t
 
	$wc¶˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

110 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

111 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

115 
size_t
 
	$wc¶ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

116 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

117 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
	`__©å_ac˚ss
 ((
__ªad_wrôe__
, 1, 3));

121 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

122 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
)

123 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

125 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

126 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

130 
	$wcscmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
)

131 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

133 
	$wc¢cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

134 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

136 #ifde‡
__USE_XOPEN2K8


138 
	$wcsˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

141 
	$wc¢ˇ£cmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

142 
size_t
 
__n
Ë
__THROW
;

146 
	$wcsˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

147 
loˇÀ_t
 
__loc
Ë
__THROW
;

149 
	$wc¢ˇ£cmp_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

150 
size_t
 
__n
, 
loˇÀ_t
 
__loc
Ë
__THROW
;

155 
	$wcscﬁl
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
Ë
__THROW
;

159 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

160 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

162 #ifde‡
__USE_XOPEN2K8


168 
	$wcscﬁl_l
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

169 
loˇÀ_t
 
__loc
Ë
__THROW
;

174 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

175 
size_t
 
__n
, 
loˇÀ_t
 
__loc
Ë
__THROW
;

178 
wch¨_t
 *
	$wcsdup
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW


179 
__©åibuã_mÆloc__
 
__©å_dóŒoc_‰ì
;

183 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


184 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

185 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

186 "C++" c⁄° 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

187 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

189 
wch¨_t
 *
	$wcschr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

190 
__THROW
 
__©åibuã_puª__
;

193 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


194 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

195 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

196 "C++" c⁄° 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

197 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

199 
wch¨_t
 *
	$wc§chr
 (c⁄° 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

200 
__THROW
 
__©åibuã_puª__
;

203 #ifde‡
__USE_GNU


206 
wch¨_t
 *
	$wcsch∫ul
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__wc
)

207 
__THROW
 
__©åibuã_puª__
;

212 
size_t
 
	$wcsc•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ªje˘
)

213 
__THROW
 
__©åibuã_puª__
;

216 
size_t
 
	$wcs•n
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

217 
__THROW
 
__©åibuã_puª__
;

219 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


220 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

221 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

222 "C++" c⁄° 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
,

223 c⁄° 
wch¨_t
 *
__ac˚±
)

224 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

226 
wch¨_t
 *
	$wc•brk
 (c⁄° 
wch¨_t
 *
__wcs
, c⁄° wch¨_à*
__ac˚±
)

227 
__THROW
 
__©åibuã_puª__
;

230 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


231 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

232 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

233 "C++" c⁄° 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
,

234 c⁄° 
wch¨_t
 *
__√edÀ
)

235 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

237 
wch¨_t
 *
	$wcs°r
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

238 
__THROW
 
__©åibuã_puª__
;

242 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

243 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

244 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

247 
size_t
 
	$wc¶í
 (c⁄° 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

249 #ifde‡
__USE_XOPEN


251 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


252 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

253 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

254 "C++" c⁄° 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
,

255 c⁄° 
wch¨_t
 *
__√edÀ
)

256 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

258 
wch¨_t
 *
	$wcswcs
 (c⁄° 
wch¨_t
 *
__hay°ack
, c⁄° wch¨_à*
__√edÀ
)

259 
__THROW
 
__©åibuã_puª__
;

263 #ifde‡
__USE_XOPEN2K8


265 
size_t
 
	$wc¢Àn
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

266 
__THROW
 
__©åibuã_puª__
;

271 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


272 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

273 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

274 "C++" c⁄° 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
,

275 
size_t
 
__n
)

276 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

278 
wch¨_t
 *
	$wmemchr
 (c⁄° 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

279 
__THROW
 
__©åibuã_puª__
;

283 
	$wmemcmp
 (c⁄° 
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

284 
__THROW
 
__©åibuã_puª__
;

287 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

288 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

292 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

293 
__THROW
;

296 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

298 #ifde‡
__USE_GNU


301 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

302 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

303 
__THROW
;

309 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

313 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

317 
	$mbsöô
 (c⁄° 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

321 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

322 c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

323 
mb°©e_t
 *
__ª°ri˘
 
__p
Ë
__THROW
;

326 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

327 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

330 
size_t
 
	$__mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

331 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

332 
size_t
 
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

333 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

335 #ifde‡
__USE_EXTERN_INLINES


341 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

342 
__exã∫_ölöe
 
wöt_t


343 
	`__NTH
 (
	$btowc
 (
__c
))

344 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

345 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

347 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

348 
__exã∫_ölöe
 

349 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

350 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

351 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

353 
__exã∫_ölöe
 
size_t


354 
__NTH
 (
	$mbæí
 (c⁄° *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

355 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

356 {  (
__ps
 !
NULL


357 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

362 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

363 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

364 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

368 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

369 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

370 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 #ifdef 
__USE_XOPEN2K8


376 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

377 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

378 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

382 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

383 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

384 
size_t
 
__nwc
, size_à
__Àn
,

385 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

390 #ifde‡
__USE_XOPEN


392 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

396 
	$wcswidth
 (c⁄° 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

402 
	$wc°od
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

403 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

405 #ifde‡
__USE_ISOC99


407 
	$wc°of
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

408 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

409 
	$wc°ﬁd
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

410 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

413 #i‡
	`__GLIBC_USE
 (
IEC_60559_TYPES_EXT
Ë&& __GLIBC_USE (
ISOC2X
)

416 #i‡
__HAVE_FLOAT16


417 
_Flﬂt16
 
	$wc°of16
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

418 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

421 #i‡
__HAVE_FLOAT32


422 
_Flﬂt32
 
	$wc°of32
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

423 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

426 #i‡
__HAVE_FLOAT64


427 
_Flﬂt64
 
	$wc°of64
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

428 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

431 #i‡
__HAVE_FLOAT128


432 
_Flﬂt128
 
	$wc°of128
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

433 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

436 #i‡
__HAVE_FLOAT32X


437 
_Flﬂt32x
 
	$wc°of32x
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

438 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

441 #i‡
__HAVE_FLOAT64X


442 
_Flﬂt64x
 
	$wc°of64x
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

443 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

446 #i‡
__HAVE_FLOAT128X


447 
_Flﬂt128x
 
	$wc°of128x
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

455 
	$wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

460 
	$wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

461 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

462 
__THROW
;

464 #ifde‡
__USE_ISOC99


467 
__exãnsi⁄__


468 
	$wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

469 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

470 
__THROW
;

474 
__exãnsi⁄__


475 
	$wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

476 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

477 
__ba£
Ë
__THROW
;

480 #ifde‡
__USE_GNU


483 
__exãnsi⁄__


484 
	$wc°oq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

485 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

486 
__THROW
;

490 
__exãnsi⁄__


491 
	$wc°ouq
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

492 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

493 
__ba£
Ë
__THROW
;

498 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

499 #ifde‡
__REDIRECT


500 
	`__REDIRECT_NTH
 (
wc°ﬁ
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

501 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

502 
__ba£
), 
__isoc23_wc°ﬁ
);

503 
	`__REDIRECT_NTH
 (
wc°oul
,

504 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
), 
__isoc23_wc°oul
);

507 
__exãnsi⁄__


508 
	`__REDIRECT_NTH
 (
wc°ﬁl
,

509 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

510 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

511 
__ba£
), 
__isoc23_wc°ﬁl
);

512 
__exãnsi⁄__


513 
	`__REDIRECT_NTH
 (
wc°ouŒ
,

514 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

515 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

516 
__ba£
), 
__isoc23_wc°ouŒ
);

517 #ifde‡
__USE_GNU


518 
__exãnsi⁄__


519 
	`__REDIRECT_NTH
 (
wc°oq
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

520 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

521 
__ba£
), 
__isoc23_wc°ﬁl
);

522 
__exãnsi⁄__


523 
	`__REDIRECT_NTH
 (
wc°ouq
,

524 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

525 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

526 
__ba£
), 
__isoc23_wc°ouŒ
);

529 
	$__isoc23_wc°ﬁ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

530 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

531 
__THROW
;

532 
	$__isoc23_wc°oul
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
)

535 
__THROW
;

536 
__exãnsi⁄__


537 
	$__isoc23_wc°ﬁl
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
)

540 
__THROW
;

541 
__exãnsi⁄__


542 
	$__isoc23_wc°ouŒ
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
)

545 
__THROW
;

546 
	#wc°ﬁ
 
__isoc23_wc°ﬁ


	)

547 
	#wc°oul
 
__isoc23_wc°oul


	)

548 
	#wc°ﬁl
 
__isoc23_wc°ﬁl


	)

549 
	#wc°ouŒ
 
__isoc23_wc°ouŒ


	)

550 #ifde‡
__USE_GNU


551 
	#wc°oq
 
__isoc23_wc°ﬁl


	)

552 
	#wc°ouq
 
__isoc23_wc°ouŒ


	)

557 #ifde‡
__USE_GNU


561 
	$wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

562 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

563 
loˇÀ_t
 
__loc
Ë
__THROW
;

565 
	$wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

566 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

567 
__ba£
, 
loˇÀ_t
 
__loc
Ë
__THROW
;

569 
__exãnsi⁄__


570 
	$wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

571 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

572 
__ba£
, 
loˇÀ_t
 
__loc
Ë
__THROW
;

574 
__exãnsi⁄__


575 
	$wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

576 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

577 
__ba£
, 
loˇÀ_t
 
__loc
)

578 
__THROW
;

582 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

583 #ifde‡
__REDIRECT


584 
	`__REDIRECT_NTH
 (
wc°ﬁ_l
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

585 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

586 
__ba£
, 
loˇÀ_t
 
__loc
),

587 
__isoc23_wc°ﬁ_l
);

588 
	`__REDIRECT_NTH
 (
wc°oul_l
,

589 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

590 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

591 
__ba£
, 
loˇÀ_t
 
__loc
),

592 
__isoc23_wc°oul_l
);

593 
__exãnsi⁄__


594 
	`__REDIRECT_NTH
 (
wc°ﬁl_l
,

595 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

596 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

597 
__ba£
, 
loˇÀ_t
 
__loc
),

598 
__isoc23_wc°ﬁl_l
);

599 
__exãnsi⁄__


600 
	`__REDIRECT_NTH
 (
wc°ouŒ_l
,

601 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

602 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

603 
__ba£
, 
loˇÀ_t
 
__loc
),

604 
__isoc23_wc°ouŒ_l
);

606 
	$__isoc23_wc°ﬁ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

607 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

608 
loˇÀ_t
 
__loc
Ë
__THROW
;

609 
	$__isoc23_wc°oul_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

610 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

611 
__ba£
, 
loˇÀ_t
 
__loc
)

612 
__THROW
;

613 
__exãnsi⁄__


614 
	$__isoc23_wc°ﬁl_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

615 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

616 
__ba£
, 
loˇÀ_t
 
__loc
)

617 
__THROW
;

618 
__exãnsi⁄__


619 
	$__isoc23_wc°ouŒ_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

620 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

621 
__ba£
, 
loˇÀ_t
 
__loc
)

622 
__THROW
;

623 
	#wc°ﬁ_l
 
__isoc23_wc°ﬁ_l


	)

624 
	#wc°oul_l
 
__isoc23_wc°oul_l


	)

625 
	#wc°ﬁl_l
 
__isoc23_wc°ﬁl_l


	)

626 
	#wc°ouŒ_l
 
__isoc23_wc°ouŒ_l


	)

630 
	$wc°od_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

631 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

632 
__THROW
;

634 
	$wc°of_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

635 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
loˇÀ_t
 
__loc
)

636 
__THROW
;

638 
	$wc°ﬁd_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

639 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

640 
loˇÀ_t
 
__loc
Ë
__THROW
;

642 #i‡
__HAVE_FLOAT16


643 
_Flﬂt16
 
	$wc°of16_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

644 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

645 
loˇÀ_t
 
__loc
Ë
__THROW
;

648 #i‡
__HAVE_FLOAT32


649 
_Flﬂt32
 
	$wc°of32_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

650 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

651 
loˇÀ_t
 
__loc
Ë
__THROW
;

654 #i‡
__HAVE_FLOAT64


655 
_Flﬂt64
 
	$wc°of64_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

656 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

657 
loˇÀ_t
 
__loc
Ë
__THROW
;

660 #i‡
__HAVE_FLOAT128


661 
_Flﬂt128
 
	$wc°of128_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

662 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

663 
loˇÀ_t
 
__loc
Ë
__THROW
;

666 #i‡
__HAVE_FLOAT32X


667 
_Flﬂt32x
 
	$wc°of32x_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

668 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

669 
loˇÀ_t
 
__loc
Ë
__THROW
;

672 #i‡
__HAVE_FLOAT64X


673 
_Flﬂt64x
 
	$wc°of64x_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

674 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

675 
loˇÀ_t
 
__loc
Ë
__THROW
;

678 #i‡
__HAVE_FLOAT128X


679 
_Flﬂt128x
 
	$wc°of128x_l
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

680 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

681 
loˇÀ_t
 
__loc
Ë
__THROW
;

686 #ifde‡
__USE_XOPEN2K8


689 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

690 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

694 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

695 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

696 
__THROW
;

702 #i‡
deföed
 
__USE_XOPEN2K8
 || 
	`__GLIBC_USE
 (
LIB_EXT2
)

703 #i‚de‡
__©å_dóŒoc_f˛o£


704 #i‡
deföed
 
__has_buûtö


705 #i‡
	`__has_buûtö
 (
__buûtö_f˛o£
)

708 
	#__©å_dóŒoc_f˛o£
 
	`__©å_dóŒoc
 (
__buûtö_f˛o£
, 1)

	)

712 #i‚de‡
__©å_dóŒoc_f˛o£


713 
	#__©å_dóŒoc_f˛o£


	)

718 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW


719 
__©åibuã_mÆloc__
 
__©å_dóŒoc_f˛o£
;

722 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


725 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

732 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

733 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

739 
	`w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

742 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

743 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

744 
__THROW
 ;

750 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

751 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

752 
__gnuc_va_li°
 
__¨g
)

758 
	`vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

759 
__gnuc_va_li°
 
__¨g
)

763 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

764 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

765 
__gnuc_va_li°
 
__¨g
)

766 
__THROW
 ;

773 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

774 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

780 
	`wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

783 
	$swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

784 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

785 
__THROW
 ;

791 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
Ë&& !
deföed
 
__LDBL_COMPAT
 \

792 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

793 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

794 #ifde‡
__REDIRECT


795 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

796 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

797 
__isoc23_fwsˇnf
)

799 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

800 
__isoc23_wsˇnf
)

802 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

803 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

804 ...), 
__isoc23_swsˇnf
)

807 
	`__isoc23_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

808 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

809 
	`__isoc23_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

810 
	$__isoc23_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

811 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

812 
__THROW
;

813 
	#fwsˇnf
 
__isoc23_fwsˇnf


	)

814 
	#wsˇnf
 
__isoc23_wsˇnf


	)

815 
	#swsˇnf
 
__isoc23_swsˇnf


	)

818 #ifde‡
__REDIRECT


819 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

820 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

821 
__isoc99_fwsˇnf
)

823 
	`__REDIRECT
 (
wsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

824 
__isoc99_wsˇnf
)

826 
	`__REDIRECT_NTH
 (
swsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

827 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

828 ...), 
__isoc99_swsˇnf
)

831 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

832 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

833 
	`__isoc99_wsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

834 
	$__isoc99_swsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

835 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

836 
__THROW
;

837 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

838 
	#wsˇnf
 
__isoc99_wsˇnf


	)

839 
	#swsˇnf
 
__isoc99_swsˇnf


	)

846 #ifde‡
__USE_ISOC99


851 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

852 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

853 
__gnuc_va_li°
 
__¨g
)

859 
	`vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

860 
__gnuc_va_li°
 
__¨g
)

863 
	$vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

864 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__gnuc_va_li°
 
__¨g
)

866 
__THROW
 ;

869 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
) \

870 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

871 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
) \

872 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0

873 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

874 #ifde‡
__REDIRECT


875 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

876 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

877 
__gnuc_va_li°
 
__¨g
), 
__isoc23_vfwsˇnf
)

879 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

880 
__gnuc_va_li°
 
__¨g
), 
__isoc23_vwsˇnf
)

882 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

883 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

884 
__gnuc_va_li°
 
__¨g
), 
__isoc23_vswsˇnf
)

887 
	`__isoc23_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

888 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

889 
__gnuc_va_li°
 
__¨g
);

890 
	`__isoc23_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

891 
__gnuc_va_li°
 
__¨g
);

892 
	$__isoc23_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

893 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

894 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

895 
	#vfwsˇnf
 
__isoc23_vfwsˇnf


	)

896 
	#vwsˇnf
 
__isoc23_vwsˇnf


	)

897 
	#vswsˇnf
 
__isoc23_vswsˇnf


	)

900 #ifde‡
__REDIRECT


901 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

902 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

903 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

905 
	`__REDIRECT
 (
vwsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

906 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

908 
	`__REDIRECT_NTH
 (
vswsˇnf
, (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

909 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

910 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

913 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

914 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

915 
__gnuc_va_li°
 
__¨g
);

916 
	`__isoc99_vwsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

917 
__gnuc_va_li°
 
__¨g
);

918 
	$__isoc99_vswsˇnf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s
,

919 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

920 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

921 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

922 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

923 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

935 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

936 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

942 
wöt_t
 
	`gëwch¨
 ();

949 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

950 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

956 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

964 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

965 
__FILE
 *
__ª°ri˘
 
__°ªam
);

971 
	`Âutws
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

972 
__FILE
 *
__ª°ri˘
 
__°ªam
);

979 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

982 #ifde‡
__USE_GNU


990 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

991 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

999 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

1007 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

1016 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

1017 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

1026 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

1027 
__FILE
 *
__ª°ri˘
 
__°ªam
);

1035 
	`Âutws_u∆ocked
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__ws
,

1036 
__FILE
 *
__ª°ri˘
 
__°ªam
);

1043 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

1044 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

1045 c⁄° 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

1047 #ifde‡
__USE_GNU


1050 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

1051 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

1052 c⁄° 
tm
 *
__ª°ri˘
 
__ç
,

1053 
loˇÀ_t
 
__loc
Ë
__THROW
;

1057 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1059 
	~<bôs/wch¨2-de˛.h
>

1064 #i‡
deföed
 
__LDBL_COMPAT
 || 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

1065 
	~<bôs/wch¨-ldbl.h
>

1068 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


1070 
	~<bôs/wch¨2.h
>

1073 
__END_DECLS


	@/usr/include/alloca.h

18 #i‚def 
_ALLOCA_H


19 
	#_ALLOCA_H
 1

	)

21 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 
	g__BEGIN_DECLS


29 #unde‡
Æloˇ


32 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

34 #ifdef 
__GNUC__


35 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

38 
__END_DECLS


	@/usr/include/bits/confname.h

19 #i‚de‡
_UNISTD_H


26 
	m_PC_LINK_MAX
,

27 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

28 
	m_PC_MAX_CANON
,

29 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

30 
	m_PC_MAX_INPUT
,

31 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

32 
	m_PC_NAME_MAX
,

33 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

34 
	m_PC_PATH_MAX
,

35 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

36 
	m_PC_PIPE_BUF
,

37 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

38 
	m_PC_CHOWN_RESTRICTED
,

39 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

40 
	m_PC_NO_TRUNC
,

41 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

42 
	m_PC_VDISABLE
,

43 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

44 
	m_PC_SYNC_IO
,

45 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

46 
	m_PC_ASYNC_IO
,

47 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

48 
	m_PC_PRIO_IO
,

49 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

50 
	m_PC_SOCK_MAXBUF
,

51 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

52 
	m_PC_FILESIZEBITS
,

53 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

54 
	m_PC_REC_INCR_XFER_SIZE
,

55 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

56 
	m_PC_REC_MAX_XFER_SIZE
,

57 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

58 
	m_PC_REC_MIN_XFER_SIZE
,

59 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

60 
	m_PC_REC_XFER_ALIGN
,

61 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

62 
	m_PC_ALLOC_SIZE_MIN
,

63 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

64 
	m_PC_SYMLINK_MAX
,

65 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

66 
	m_PC_2_SYMLINKS


67 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

73 
	m_SC_ARG_MAX
,

74 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

75 
	m_SC_CHILD_MAX
,

76 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

77 
	m_SC_CLK_TCK
,

78 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

79 
	m_SC_NGROUPS_MAX
,

80 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

81 
	m_SC_OPEN_MAX
,

82 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

83 
	m_SC_STREAM_MAX
,

84 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

85 
	m_SC_TZNAME_MAX
,

86 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

87 
	m_SC_JOB_CONTROL
,

88 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

89 
	m_SC_SAVED_IDS
,

90 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

91 
	m_SC_REALTIME_SIGNALS
,

92 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

93 
	m_SC_PRIORITY_SCHEDULING
,

94 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

95 
	m_SC_TIMERS
,

96 
	#_SC_TIMERS
 
_SC_TIMERS


	)

97 
	m_SC_ASYNCHRONOUS_IO
,

98 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

99 
	m_SC_PRIORITIZED_IO
,

100 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

101 
	m_SC_SYNCHRONIZED_IO
,

102 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

103 
	m_SC_FSYNC
,

104 
	#_SC_FSYNC
 
_SC_FSYNC


	)

105 
	m_SC_MAPPED_FILES
,

106 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

107 
	m_SC_MEMLOCK
,

108 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

109 
	m_SC_MEMLOCK_RANGE
,

110 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

111 
	m_SC_MEMORY_PROTECTION
,

112 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

113 
	m_SC_MESSAGE_PASSING
,

114 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

115 
	m_SC_SEMAPHORES
,

116 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

117 
	m_SC_SHARED_MEMORY_OBJECTS
,

118 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

119 
	m_SC_AIO_LISTIO_MAX
,

120 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

121 
	m_SC_AIO_MAX
,

122 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

123 
	m_SC_AIO_PRIO_DELTA_MAX
,

124 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

125 
	m_SC_DELAYTIMER_MAX
,

126 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

127 
	m_SC_MQ_OPEN_MAX
,

128 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

129 
	m_SC_MQ_PRIO_MAX
,

130 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

131 
	m_SC_VERSION
,

132 
	#_SC_VERSION
 
_SC_VERSION


	)

133 
	m_SC_PAGESIZE
,

134 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

135 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

136 
	m_SC_RTSIG_MAX
,

137 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

138 
	m_SC_SEM_NSEMS_MAX
,

139 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

140 
	m_SC_SEM_VALUE_MAX
,

141 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

142 
	m_SC_SIGQUEUE_MAX
,

143 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

144 
	m_SC_TIMER_MAX
,

145 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

149 
	m_SC_BC_BASE_MAX
,

150 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

151 
	m_SC_BC_DIM_MAX
,

152 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

153 
	m_SC_BC_SCALE_MAX
,

154 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

155 
	m_SC_BC_STRING_MAX
,

156 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

157 
	m_SC_COLL_WEIGHTS_MAX
,

158 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

159 
	m_SC_EQUIV_CLASS_MAX
,

160 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

161 
	m_SC_EXPR_NEST_MAX
,

162 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

163 
	m_SC_LINE_MAX
,

164 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

165 
	m_SC_RE_DUP_MAX
,

166 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

167 
	m_SC_CHARCLASS_NAME_MAX
,

168 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

170 
	m_SC_2_VERSION
,

171 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

172 
	m_SC_2_C_BIND
,

173 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

174 
	m_SC_2_C_DEV
,

175 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

176 
	m_SC_2_FORT_DEV
,

177 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

178 
	m_SC_2_FORT_RUN
,

179 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

180 
	m_SC_2_SW_DEV
,

181 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

182 
	m_SC_2_LOCALEDEF
,

183 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

185 
	m_SC_PII
,

186 
	#_SC_PII
 
_SC_PII


	)

187 
	m_SC_PII_XTI
,

188 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

189 
	m_SC_PII_SOCKET
,

190 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

191 
	m_SC_PII_INTERNET
,

192 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

193 
	m_SC_PII_OSI
,

194 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

195 
	m_SC_POLL
,

196 
	#_SC_POLL
 
_SC_POLL


	)

197 
	m_SC_SELECT
,

198 
	#_SC_SELECT
 
_SC_SELECT


	)

199 
	m_SC_UIO_MAXIOV
,

200 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

201 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

202 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

203 
	m_SC_PII_INTERNET_STREAM
,

204 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

205 
	m_SC_PII_INTERNET_DGRAM
,

206 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

207 
	m_SC_PII_OSI_COTS
,

208 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

209 
	m_SC_PII_OSI_CLTS
,

210 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

211 
	m_SC_PII_OSI_M
,

212 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

213 
	m_SC_T_IOV_MAX
,

214 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

217 
	m_SC_THREADS
,

218 
	#_SC_THREADS
 
_SC_THREADS


	)

219 
	m_SC_THREAD_SAFE_FUNCTIONS
,

220 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

221 
	m_SC_GETGR_R_SIZE_MAX
,

222 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

223 
	m_SC_GETPW_R_SIZE_MAX
,

224 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

225 
	m_SC_LOGIN_NAME_MAX
,

226 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

227 
	m_SC_TTY_NAME_MAX
,

228 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

229 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

230 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

231 
	m_SC_THREAD_KEYS_MAX
,

232 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

233 
	m_SC_THREAD_STACK_MIN
,

234 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

235 
	m_SC_THREAD_THREADS_MAX
,

236 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

237 
	m_SC_THREAD_ATTR_STACKADDR
,

238 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

239 
	m_SC_THREAD_ATTR_STACKSIZE
,

240 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

241 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

242 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

243 
	m_SC_THREAD_PRIO_INHERIT
,

244 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

245 
	m_SC_THREAD_PRIO_PROTECT
,

246 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

247 
	m_SC_THREAD_PROCESS_SHARED
,

248 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

250 
	m_SC_NPROCESSORS_CONF
,

251 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

252 
	m_SC_NPROCESSORS_ONLN
,

253 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

254 
	m_SC_PHYS_PAGES
,

255 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

256 
	m_SC_AVPHYS_PAGES
,

257 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

258 
	m_SC_ATEXIT_MAX
,

259 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

260 
	m_SC_PASS_MAX
,

261 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

263 
	m_SC_XOPEN_VERSION
,

264 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

265 
	m_SC_XOPEN_XCU_VERSION
,

266 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

267 
	m_SC_XOPEN_UNIX
,

268 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

269 
	m_SC_XOPEN_CRYPT
,

270 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

271 
	m_SC_XOPEN_ENH_I18N
,

272 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

273 
	m_SC_XOPEN_SHM
,

274 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

276 
	m_SC_2_CHAR_TERM
,

277 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

278 
	m_SC_2_C_VERSION
,

279 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

280 
	m_SC_2_UPE
,

281 
	#_SC_2_UPE
 
_SC_2_UPE


	)

283 
	m_SC_XOPEN_XPG2
,

284 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

285 
	m_SC_XOPEN_XPG3
,

286 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

287 
	m_SC_XOPEN_XPG4
,

288 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

290 
	m_SC_CHAR_BIT
,

291 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

292 
	m_SC_CHAR_MAX
,

293 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

294 
	m_SC_CHAR_MIN
,

295 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

296 
	m_SC_INT_MAX
,

297 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

298 
	m_SC_INT_MIN
,

299 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

300 
	m_SC_LONG_BIT
,

301 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

302 
	m_SC_WORD_BIT
,

303 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

304 
	m_SC_MB_LEN_MAX
,

305 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

306 
	m_SC_NZERO
,

307 
	#_SC_NZERO
 
_SC_NZERO


	)

308 
	m_SC_SSIZE_MAX
,

309 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

310 
	m_SC_SCHAR_MAX
,

311 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

312 
	m_SC_SCHAR_MIN
,

313 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

314 
	m_SC_SHRT_MAX
,

315 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

316 
	m_SC_SHRT_MIN
,

317 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

318 
	m_SC_UCHAR_MAX
,

319 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

320 
	m_SC_UINT_MAX
,

321 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

322 
	m_SC_ULONG_MAX
,

323 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

324 
	m_SC_USHRT_MAX
,

325 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

327 
	m_SC_NL_ARGMAX
,

328 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

329 
	m_SC_NL_LANGMAX
,

330 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

331 
	m_SC_NL_MSGMAX
,

332 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

333 
	m_SC_NL_NMAX
,

334 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

335 
	m_SC_NL_SETMAX
,

336 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

337 
	m_SC_NL_TEXTMAX
,

338 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

340 
	m_SC_XBS5_ILP32_OFF32
,

341 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

342 
	m_SC_XBS5_ILP32_OFFBIG
,

343 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

344 
	m_SC_XBS5_LP64_OFF64
,

345 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

346 
	m_SC_XBS5_LPBIG_OFFBIG
,

347 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

349 
	m_SC_XOPEN_LEGACY
,

350 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

351 
	m_SC_XOPEN_REALTIME
,

352 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

353 
	m_SC_XOPEN_REALTIME_THREADS
,

354 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

356 
	m_SC_ADVISORY_INFO
,

357 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

358 
	m_SC_BARRIERS
,

359 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

360 
	m_SC_BASE
,

361 
	#_SC_BASE
 
_SC_BASE


	)

362 
	m_SC_C_LANG_SUPPORT
,

363 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

364 
	m_SC_C_LANG_SUPPORT_R
,

365 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

366 
	m_SC_CLOCK_SELECTION
,

367 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

368 
	m_SC_CPUTIME
,

369 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

370 
	m_SC_THREAD_CPUTIME
,

371 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

372 
	m_SC_DEVICE_IO
,

373 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

374 
	m_SC_DEVICE_SPECIFIC
,

375 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

376 
	m_SC_DEVICE_SPECIFIC_R
,

377 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

378 
	m_SC_FD_MGMT
,

379 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

380 
	m_SC_FIFO
,

381 
	#_SC_FIFO
 
_SC_FIFO


	)

382 
	m_SC_PIPE
,

383 
	#_SC_PIPE
 
_SC_PIPE


	)

384 
	m_SC_FILE_ATTRIBUTES
,

385 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

386 
	m_SC_FILE_LOCKING
,

387 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

388 
	m_SC_FILE_SYSTEM
,

389 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

390 
	m_SC_MONOTONIC_CLOCK
,

391 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

392 
	m_SC_MULTI_PROCESS
,

393 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

394 
	m_SC_SINGLE_PROCESS
,

395 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

396 
	m_SC_NETWORKING
,

397 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

398 
	m_SC_READER_WRITER_LOCKS
,

399 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

400 
	m_SC_SPIN_LOCKS
,

401 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

402 
	m_SC_REGEXP
,

403 
	#_SC_REGEXP
 
_SC_REGEXP


	)

404 
	m_SC_REGEX_VERSION
,

405 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

406 
	m_SC_SHELL
,

407 
	#_SC_SHELL
 
_SC_SHELL


	)

408 
	m_SC_SIGNALS
,

409 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

410 
	m_SC_SPAWN
,

411 
	#_SC_SPAWN
 
_SC_SPAWN


	)

412 
	m_SC_SPORADIC_SERVER
,

413 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

414 
	m_SC_THREAD_SPORADIC_SERVER
,

415 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

416 
	m_SC_SYSTEM_DATABASE
,

417 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

418 
	m_SC_SYSTEM_DATABASE_R
,

419 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

420 
	m_SC_TIMEOUTS
,

421 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

422 
	m_SC_TYPED_MEMORY_OBJECTS
,

423 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

424 
	m_SC_USER_GROUPS
,

425 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

426 
	m_SC_USER_GROUPS_R
,

427 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

428 
	m_SC_2_PBS
,

429 
	#_SC_2_PBS
 
_SC_2_PBS


	)

430 
	m_SC_2_PBS_ACCOUNTING
,

431 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

432 
	m_SC_2_PBS_LOCATE
,

433 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

434 
	m_SC_2_PBS_MESSAGE
,

435 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

436 
	m_SC_2_PBS_TRACK
,

437 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

438 
	m_SC_SYMLOOP_MAX
,

439 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

440 
	m_SC_STREAMS
,

441 
	#_SC_STREAMS
 
_SC_STREAMS


	)

442 
	m_SC_2_PBS_CHECKPOINT
,

443 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

445 
	m_SC_V6_ILP32_OFF32
,

446 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

447 
	m_SC_V6_ILP32_OFFBIG
,

448 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

449 
	m_SC_V6_LP64_OFF64
,

450 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

451 
	m_SC_V6_LPBIG_OFFBIG
,

452 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

454 
	m_SC_HOST_NAME_MAX
,

455 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

456 
	m_SC_TRACE
,

457 
	#_SC_TRACE
 
_SC_TRACE


	)

458 
	m_SC_TRACE_EVENT_FILTER
,

459 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

460 
	m_SC_TRACE_INHERIT
,

461 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

462 
	m_SC_TRACE_LOG
,

463 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

465 
	m_SC_LEVEL1_ICACHE_SIZE
,

466 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

467 
	m_SC_LEVEL1_ICACHE_ASSOC
,

468 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

469 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

470 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

471 
	m_SC_LEVEL1_DCACHE_SIZE
,

472 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

473 
	m_SC_LEVEL1_DCACHE_ASSOC
,

474 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

475 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

476 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

477 
	m_SC_LEVEL2_CACHE_SIZE
,

478 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

479 
	m_SC_LEVEL2_CACHE_ASSOC
,

480 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

481 
	m_SC_LEVEL2_CACHE_LINESIZE
,

482 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

483 
	m_SC_LEVEL3_CACHE_SIZE
,

484 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

485 
	m_SC_LEVEL3_CACHE_ASSOC
,

486 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

487 
	m_SC_LEVEL3_CACHE_LINESIZE
,

488 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

489 
	m_SC_LEVEL4_CACHE_SIZE
,

490 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

491 
	m_SC_LEVEL4_CACHE_ASSOC
,

492 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

493 
	m_SC_LEVEL4_CACHE_LINESIZE
,

494 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

497 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

498 
	#_SC_IPV6
 
_SC_IPV6


	)

499 
	m_SC_RAW_SOCKETS
,

500 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

502 
	m_SC_V7_ILP32_OFF32
,

503 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

504 
	m_SC_V7_ILP32_OFFBIG
,

505 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

506 
	m_SC_V7_LP64_OFF64
,

507 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

508 
	m_SC_V7_LPBIG_OFFBIG
,

509 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

511 
	m_SC_SS_REPL_MAX
,

512 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

514 
	m_SC_TRACE_EVENT_NAME_MAX
,

515 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

516 
	m_SC_TRACE_NAME_MAX
,

517 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

518 
	m_SC_TRACE_SYS_MAX
,

519 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

520 
	m_SC_TRACE_USER_EVENT_MAX
,

521 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

523 
	m_SC_XOPEN_STREAMS
,

524 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

526 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

527 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

528 
	m_SC_THREAD_ROBUST_PRIO_PROTECT
,

529 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

531 
	m_SC_MINSIGSTKSZ
,

532 
	#_SC_MINSIGSTKSZ
 
_SC_MINSIGSTKSZ


	)

534 
	m_SC_SIGSTKSZ


535 
	#_SC_SIGSTKSZ
 
_SC_SIGSTKSZ


	)

541 
	m_CS_PATH
,

542 
	#_CS_PATH
 
_CS_PATH


	)

544 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

545 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

546 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

548 
	m_CS_GNU_LIBC_VERSION
,

549 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

550 
	m_CS_GNU_LIBPTHREAD_VERSION
,

551 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

553 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

558 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

559 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

561 
	m_CS_LFS_CFLAGS
 = 1000,

562 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

563 
	m_CS_LFS_LDFLAGS
,

564 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

565 
	m_CS_LFS_LIBS
,

566 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

567 
	m_CS_LFS_LINTFLAGS
,

568 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

569 
	m_CS_LFS64_CFLAGS
,

570 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

571 
	m_CS_LFS64_LDFLAGS
,

572 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

573 
	m_CS_LFS64_LIBS
,

574 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

575 
	m_CS_LFS64_LINTFLAGS
,

576 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

579 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

583 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

584 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

585 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

590 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

591 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

592 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

593 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

595 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

596 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

598 
	m_CS_XBS5_LP64_OFF64_LIBS
,

599 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

600 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

601 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

606 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

607 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

608 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

609 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

616 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

617 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

623 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

624 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

625 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

626 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

631 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

632 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

633 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

634 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

639 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

640 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

641 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

642 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

649 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

650 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

656 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

657 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

658 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

659 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

664 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

665 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

666 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

667 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

672 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

673 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

674 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

675 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

677 
	m_CS_V6_ENV
,

678 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

679 
	m_CS_V7_ENV


680 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/dirent.h

18 #i‚de‡
_DIRENT_H


22 
	sdúít


24 #i‚de‡
__USE_FILE_OFFSET64


25 
__öo_t
 
	md_öo
;

26 
__off_t
 
	md_off
;

28 
__öo64_t
 
	md_öo
;

29 
__off64_t
 
	md_off
;

31 
	md_ª˛í
;

32 
	md_ty≥
;

33 
	md_«me
[256];

36 #ifde‡
__USE_LARGEFILE64


37 
	sdúít64


39 
__öo64_t
 
	md_öo
;

40 
__off64_t
 
	md_off
;

41 
	md_ª˛í
;

42 
	md_ty≥
;

43 
	md_«me
[256];

47 
	#d_fûío
 
d_öo


	)

49 #unde‡
_DIRENT_HAVE_D_NAMLEN


50 
	#_DIRENT_HAVE_D_RECLEN


	)

51 
	#_DIRENT_HAVE_D_OFF


	)

52 
	#_DIRENT_HAVE_D_TYPE


	)

54 #i‡
deföed
 
__OFF_T_MATCHES_OFF64_T
 && deföed 
__INO_T_MATCHES_INO64_T


56 
	#_DIRENT_MATCHES_DIRENT64
 1

	)

58 
	#_DIRENT_MATCHES_DIRENT64
 0

	)

	@/usr/include/bits/dirent_ext.h

19 #i‚de‡
_DIRENT_H


23 
	g__BEGIN_DECLS


25 #ifde‡
__USE_GNU


29 
__ssize_t
 
	$gëdíts64
 (
__fd
, *
__buf„r
, 
size_t
 
__Àngth
)

30 
__THROW
 
	`__n⁄nuŒ
 ((2));

33 
__END_DECLS


	@/usr/include/bits/dl_find_object.h

19 #i‚de‡
_DLFCN_H


23 #ifde‡
__x86_64__


24 
	#DLFO_STRUCT_HAS_EH_DBASE
 0

	)

26 
	#DLFO_STRUCT_HAS_EH_DBASE
 1

	)

28 
	#DLFO_STRUCT_HAS_EH_COUNT
 0

	)

29 
	#DLFO_EH_SEGMENT_TYPE
 
PT_GNU_EH_FRAME


	)

	@/usr/include/bits/dlfcn.h

19 #i‚de‡
_DLFCN_H


24 
	#RTLD_LAZY
 0x00001

	)

25 
	#RTLD_NOW
 0x00002

	)

26 
	#RTLD_BINDING_MASK
 0x3

	)

27 
	#RTLD_NOLOAD
 0x00004

	)

28 
	#RTLD_DEEPBIND
 0x00008

	)

33 
	#RTLD_GLOBAL
 0x00100

	)

38 
	#RTLD_LOCAL
 0

	)

41 
	#RTLD_NODELETE
 0x01000

	)

43 #ifde‡
__USE_GNU


54 
	#DL_CALL_FCT
(
f˘p
, 
¨gs
) \

55 (
	`_dl_mcou¡_wøµî_check
 ((*Ë(
f˘p
)), (*(f˘p)Ë
¨gs
)

	)

57 
__BEGIN_DECLS


60 
	$_dl_mcou¡_wøµî_check
 (*
__£lÂc
Ë
__THROW
;

62 
__END_DECLS


	@/usr/include/bits/environments.h

18 #i‚de‡
_UNISTD_H


22 
	~<bôs/w‹dsize.h
>

42 #i‡
__WORDSIZE
 == 64

56 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

57 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

58 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

61 
	#_POSIX_V7_LP64_OFF64
 1

	)

62 
	#_POSIX_V6_LP64_OFF64
 1

	)

63 
	#_XBS5_LP64_OFF64
 1

	)

69 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

70 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

71 
	#_XBS5_ILP32_OFFBIG
 1

	)

73 #i‚de‡
__x86_64__


75 
	#_POSIX_V7_ILP32_OFF32
 1

	)

76 
	#_POSIX_V6_ILP32_OFF32
 1

	)

77 
	#_XBS5_ILP32_OFF32
 1

	)

95 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

96 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

97 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


98 
	#__ILP32_OFFBIG_CFLAGS
 "-mx32"

	)

99 
	#__ILP32_OFFBIG_LDFLAGS
 "-mx32"

	)

101 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

102 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

104 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

105 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/fcntl.h

19 #i‚de‡
_FCNTL_H


23 #ifde‡
__x86_64__


24 
	#__O_LARGEFILE
 0

	)

27 #ifde‡
__x86_64__


29 
	#F_GETLK64
 5

	)

30 
	#F_SETLK64
 6

	)

31 
	#F_SETLKW64
 7

	)

35 
	sÊock


37 
	ml_ty≥
;

38 
	ml_whí˚
;

39 #i‚de‡
__USE_FILE_OFFSET64


40 
__off_t
 
	ml_°¨t
;

41 
__off_t
 
	ml_Àn
;

43 
__off64_t
 
	ml_°¨t
;

44 
__off64_t
 
	ml_Àn
;

46 
__pid_t
 
	ml_pid
;

49 #ifde‡
__USE_LARGEFILE64


50 
	sÊock64


52 
	ml_ty≥
;

53 
	ml_whí˚
;

54 
__off64_t
 
	ml_°¨t
;

55 
__off64_t
 
	ml_Àn
;

56 
__pid_t
 
	ml_pid
;

61 
	~<bôs/f˙é-löux.h
>

	@/usr/include/bits/fcntl2.h

19 #i‚def 
_FCNTL_H


25 #i‚de‡
__USE_FILE_OFFSET64


26 
	$__›í_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

27 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

28 
›í
Ë
	`__n⁄nuŒ
 ((1));

30 
	`__REDIRECT
 (
__›í_2
, (c⁄° *
__∑th
, 
__oÊag
),

31 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

32 
	`__REDIRECT
 (
__›í_Æüs
, (c⁄° *
__∑th
, 
__oÊag
, ...),

33 
›í64
Ë
	`__n⁄nuŒ
 ((1));

35 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

37 
	`__îr‹de˛
 (
__›í_missög_mode
,

40 
__f‹tify_fun˘i⁄
 

41 
	$›í
 (c⁄° *
__∑th
, 
__oÊag
, ...)

43 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

44 
	`__›í_too_m™y_¨gs
 ();

46 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

48 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

50 
	`__›í_missög_mode
 ();

51  
	`__›í_2
 (
__∑th
, 
__oÊag
);

53  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

56 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

57  
	`__›í_2
 (
__∑th
, 
__oÊag
);

59  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

60 
	}
}

63 #ifde‡
__USE_LARGEFILE64


64 
	$__›í64_2
 (c⁄° *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

65 
	`__REDIRECT
 (
__›í64_Æüs
, (c⁄° *
__∑th
, 
__oÊag
,

66 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

67 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

69 
	`__îr‹de˛
 (
__›í64_missög_mode
,

72 
__f‹tify_fun˘i⁄
 

73 
	$›í64
 (c⁄° *
__∑th
, 
__oÊag
, ...)

75 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

76 
	`__›í64_too_m™y_¨gs
 ();

78 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

80 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

82 
	`__›í64_missög_mode
 ();

83  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

85  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

88 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

89  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

91  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

92 
	}
}

96 #ifde‡
__USE_ATFILE


97 #i‚de‡
__USE_FILE_OFFSET64


98 
	$__›í©_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

99 
	`__n⁄nuŒ
 ((2));

100 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

101 
__oÊag
, ...), 
›í©
)

102 
	`__n⁄nuŒ
 ((2));

104 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, c⁄° *
__∑th
,

105 
__oÊag
), 
__›í©64_2
)

106 
	`__n⁄nuŒ
 ((2));

107 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, c⁄° *
__∑th
,

108 
__oÊag
, ...), 
›í©64
)

109 
	`__n⁄nuŒ
 ((2));

111 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

113 
	`__îr‹de˛
 (
__›í©_missög_mode
,

116 
__f‹tify_fun˘i⁄
 

117 
	$›í©
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

119 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

120 
	`__›í©_too_m™y_¨gs
 ();

122 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

124 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

126 
	`__›í©_missög_mode
 ();

127  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

129  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

132 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

133  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

135  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

136 
	}
}

139 #ifde‡
__USE_LARGEFILE64


140 
	$__›í©64_2
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
)

141 
	`__n⁄nuŒ
 ((2));

142 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, c⁄° *
__∑th
,

143 
__oÊag
, ...), 
›í©64
)

144 
	`__n⁄nuŒ
 ((2));

145 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

147 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

150 
__f‹tify_fun˘i⁄
 

151 
	$›í©64
 (
__fd
, c⁄° *
__∑th
, 
__oÊag
, ...)

153 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

154 
	`__›í©64_too_m™y_¨gs
 ();

156 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

158 i‡(
	`__OPEN_NEEDS_MODE
 (
__oÊag
Ë&& 
	`__va_¨g_∑ck_Àn
 () < 1)

160 
	`__›í©64_missög_mode
 ();

161  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

163  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

166 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

167  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

169  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

170 
	}
}

	@/usr/include/bits/floatn.h

19 #i‚de‡
_BITS_FLOATN_H


20 
	#_BITS_FLOATN_H


	)

22 
	~<„©uªs.h
>

29 #i‡(
deföed
 
__x86_64__
 \

30 ? 
__GNUC_PREREQ
 (4, 3) \

31 : (
deföed
 
__GNU__
 ? 
	$__GNUC_PREREQ
 (4, 5Ë: 
	$__GNUC_PREREQ
 (4, 4)))

32 
	#__HAVE_FLOAT128
 1

	)

34 
	#__HAVE_FLOAT128
 0

	)

39 #i‡
__HAVE_FLOAT128


40 
	#__HAVE_DISTINCT_FLOAT128
 1

	)

42 
	#__HAVE_DISTINCT_FLOAT128
 0

	)

48 
	#__HAVE_FLOAT64X
 1

	)

54 
	#__HAVE_FLOAT64X_LONG_DOUBLE
 1

	)

56 #i‚de‡
__ASSEMBLER__


60 #i‡
__HAVE_FLOAT128


61 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

63 
	#__f128
(
x
Ëx##
q


	)

65 
	#__f128
(
x
Ëx##
f128


	)

70 #i‡
__HAVE_FLOAT128


71 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

74 
_Com∂ex
 
	t__cÊﬂt128
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__TC__
)));

75 
	#__CFLOAT128
 
__cÊﬂt128


	)

77 
	#__CFLOAT128
 
_Com∂ex
 
_Flﬂt128


	)

82 #i‡
__HAVE_FLOAT128


85 #i‡!
	`__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

86 
__Êﬂt128
 
	t_Flﬂt128
;

90 #i‡!
	`__GNUC_PREREQ
 (7, 0)

91 
	#__buûtö_huge_vÆf128
(Ë((
_Flﬂt128
Ë
	`__buûtö_huge_vÆ
 ())

	)

99 #i‡!
	`__GNUC_PREREQ
 (7, 0)

100 
	#__buûtö_c›ysignf128
 
__buûtö_c›ysignq


	)

101 
	#__buûtö_Ábsf128
 
__buûtö_Ábsq


	)

102 
	#__buûtö_öff128
(Ë((
_Flﬂt128
Ë
	`__buûtö_öf
 ())

	)

103 
	#__buûtö_«nf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«n
 (x))

	)

104 
	#__buûtö_«nsf128
(
x
Ë((
_Flﬂt128
Ë
	`__buûtö_«ns
 (x))

	)

111 #i‡!
	`__GNUC_PREREQ
 (6, 0)

112 
	#__buûtö_signbôf128
 
__signbôf128


	)

119 
	~<bôs/Êﬂä-comm⁄.h
>

	@/usr/include/bits/flt-eval-method.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__FLT_EVAL_METHOD__


24 #i‡
__FLT_EVAL_METHOD__
 == -1

25 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

27 
	#__GLIBC_FLT_EVAL_METHOD
 
__FLT_EVAL_METHOD__


	)

29 #ñi‡
deföed
 
__x86_64__


30 
	#__GLIBC_FLT_EVAL_METHOD
 0

	)

32 
	#__GLIBC_FLT_EVAL_METHOD
 2

	)

	@/usr/include/bits/fp-fast.h

19 #i‚de‡
_MATH_H


23 #ifde‡
__USE_ISOC99


27 #ifde‡
__FP_FAST_FMA


28 
	#FP_FAST_FMA
 1

	)

31 #ifde‡
__FP_FAST_FMAF


32 
	#FP_FAST_FMAF
 1

	)

35 #ifde‡
__FP_FAST_FMAL


36 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/fp-logb.h

19 #i‚de‡
_MATH_H


23 
	#__FP_LOGB0_IS_MIN
 1

	)

24 
	#__FP_LOGBNAN_IS_MIN
 1

	)

	@/usr/include/bits/getopt_posix.h

20 #i‚de‡
_GETOPT_POSIX_H


21 
	#_GETOPT_POSIX_H
 1

	)

23 #i‡!
deföed
 
_UNISTD_H
 && !deföed 
_STDIO_H


27 
	~<bôs/gë›t_c‹e.h
>

29 
	g__BEGIN_DECLS


31 #i‡
deföed
 
__USE_POSIX2
 && !deföed 
__USE_POSIX_IMPLICITLY
 \

32 && !
deföed
 
	g__USE_GNU
 && !deföed 
	g_GETOPT_H


37 #ifde‡
__REDIRECT


38 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

39 c⁄° *
__sh‹t›ts
),

40 
__posix_gë›t
);

42 
	$__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

43 c⁄° *
__sh‹t›ts
)

44 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

45 
	#gë›t
 
__posix_gë›t


	)

49 
__END_DECLS


	@/usr/include/bits/iscanonical.h

19 #i‚de‡
_MATH_H


23 
	$__isˇn⁄iˇŒ
 (
__x
)

24 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

25 
	#__isˇn⁄iˇlf
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

26 
	#__isˇn⁄iˇl
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

27 #i‡
__HAVE_DISTINCT_FLOAT128


28 
	#__isˇn⁄iˇlf128
(
x
Ë((Ë(
	`__ty≥of
 (x)Ë(x), 1)

	)

37 #i‚de‡
__˝lu•lus


38 
	#isˇn⁄iˇl
(
x
Ë
	`__MATH_TG
 ((x), 
__isˇn⁄iˇl
, (x))

	)

47 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇlf
 (__val); }

48 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇl
 (__val); }

49 
ölöe
 
	`isˇn⁄iˇl
 (
__vÆ
Ë{  
	`__isˇn⁄iˇŒ
 (__val); }

50 #i‡
__HAVE_DISTINCT_FLOAT128


51 
ölöe
 
	`isˇn⁄iˇl
 (
_Flﬂt128
 
__vÆ
Ë{  
	`__isˇn⁄iˇlf128
 (__val); }

53 
	}
}

	@/usr/include/bits/libc-header-start.h

27 #i‚de‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


31 #unde‡
__GLIBC_INTERNAL_STARTING_HEADER_IMPLEMENTATION


33 
	~<„©uªs.h
>

37 #unde‡
__GLIBC_USE_LIB_EXT2


38 #i‡(
deföed
 
__USE_GNU
 \

39 || (
deföed
 
	g__STDC_WANT_LIB_EXT2__
 && __STDC_WANT_LIB_EXT2__ > 0))

40 
	#__GLIBC_USE_LIB_EXT2
 1

	)

42 
	#__GLIBC_USE_LIB_EXT2
 0

	)

67 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT


68 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_BFP_EXT__


69 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 1

	)

71 
	#__GLIBC_USE_IEC_60559_BFP_EXT
 0

	)

73 #unde‡
__GLIBC_USE_IEC_60559_BFP_EXT_C2X


74 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

75 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 1

	)

77 
	#__GLIBC_USE_IEC_60559_BFP_EXT_C2X
 0

	)

79 #unde‡
__GLIBC_USE_IEC_60559_EXT


80 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT
Ë|| 
deföed
 
__STDC_WANT_IEC_60559_EXT__


81 
	#__GLIBC_USE_IEC_60559_EXT
 1

	)

83 
	#__GLIBC_USE_IEC_60559_EXT
 0

	)

90 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT


91 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_FUNCS_EXT__


92 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 1

	)

94 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT
 0

	)

96 #unde‡
__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X


97 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT
Ë|| __GLIBC_USE (
ISOC2X
)

98 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 1

	)

100 
	#__GLIBC_USE_IEC_60559_FUNCS_EXT_C2X
 0

	)

105 #unde‡
__GLIBC_USE_IEC_60559_TYPES_EXT


106 #i‡
deföed
 
__USE_GNU
 || deföed 
__STDC_WANT_IEC_60559_TYPES_EXT__


107 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 1

	)

109 
	#__GLIBC_USE_IEC_60559_TYPES_EXT
 0

	)

	@/usr/include/bits/math-vector.h

19 #i‚de‡
_MATH_H


25 
	~<bôs/libm-simd-de˛-°ubs.h
>

27 #i‡
deföed
 
__x86_64__
 && deföed 
__FAST_MATH__


28 #i‡
deföed
 
_OPENMP
 && _OPENMP >= 201307

30 
	#__DECL_SIMD_x86_64
 
	`_Pøgma
 ("om∞de˛¨êsimdÇŸöbønch")

	)

31 #ñi‡
__GNUC_PREREQ
 (6,0)

33 
	#__DECL_SIMD_x86_64
 
	`__©åibuã__
 ((
	`__simd__
 ("nŸöbønch")))

	)

36 #ifde‡
__DECL_SIMD_x86_64


37 #unde‡
__DECL_SIMD_cos


38 
	#__DECL_SIMD_cos
 
__DECL_SIMD_x86_64


	)

39 #unde‡
__DECL_SIMD_cosf


40 
	#__DECL_SIMD_cosf
 
__DECL_SIMD_x86_64


	)

41 #unde‡
__DECL_SIMD_sö


42 
	#__DECL_SIMD_sö
 
__DECL_SIMD_x86_64


	)

43 #unde‡
__DECL_SIMD_söf


44 
	#__DECL_SIMD_söf
 
__DECL_SIMD_x86_64


	)

45 #unde‡
__DECL_SIMD_söcos


46 
	#__DECL_SIMD_söcos
 
__DECL_SIMD_x86_64


	)

47 #unde‡
__DECL_SIMD_söcosf


48 
	#__DECL_SIMD_söcosf
 
__DECL_SIMD_x86_64


	)

49 #unde‡
__DECL_SIMD_log


50 
	#__DECL_SIMD_log
 
__DECL_SIMD_x86_64


	)

51 #unde‡
__DECL_SIMD_logf


52 
	#__DECL_SIMD_logf
 
__DECL_SIMD_x86_64


	)

53 #unde‡
__DECL_SIMD_exp


54 
	#__DECL_SIMD_exp
 
__DECL_SIMD_x86_64


	)

55 #unde‡
__DECL_SIMD_expf


56 
	#__DECL_SIMD_expf
 
__DECL_SIMD_x86_64


	)

57 #unde‡
__DECL_SIMD_pow


58 
	#__DECL_SIMD_pow
 
__DECL_SIMD_x86_64


	)

59 #unde‡
__DECL_SIMD_powf


60 
	#__DECL_SIMD_powf
 
__DECL_SIMD_x86_64


	)

61 #unde‡
__DECL_SIMD_acos


62 
	#__DECL_SIMD_acos
 
__DECL_SIMD_x86_64


	)

63 #unde‡
__DECL_SIMD_acosf


64 
	#__DECL_SIMD_acosf
 
__DECL_SIMD_x86_64


	)

65 #unde‡
__DECL_SIMD_©™


66 
	#__DECL_SIMD_©™
 
__DECL_SIMD_x86_64


	)

67 #unde‡
__DECL_SIMD_©™f


68 
	#__DECL_SIMD_©™f
 
__DECL_SIMD_x86_64


	)

69 #unde‡
__DECL_SIMD_asö


70 
	#__DECL_SIMD_asö
 
__DECL_SIMD_x86_64


	)

71 #unde‡
__DECL_SIMD_asöf


72 
	#__DECL_SIMD_asöf
 
__DECL_SIMD_x86_64


	)

73 #unde‡
__DECL_SIMD_hypŸ


74 
	#__DECL_SIMD_hypŸ
 
__DECL_SIMD_x86_64


	)

75 #unde‡
__DECL_SIMD_hypŸf


76 
	#__DECL_SIMD_hypŸf
 
__DECL_SIMD_x86_64


	)

77 #unde‡
__DECL_SIMD_exp2


78 
	#__DECL_SIMD_exp2
 
__DECL_SIMD_x86_64


	)

79 #unde‡
__DECL_SIMD_exp2f


80 
	#__DECL_SIMD_exp2f
 
__DECL_SIMD_x86_64


	)

81 #unde‡
__DECL_SIMD_exp10


82 
	#__DECL_SIMD_exp10
 
__DECL_SIMD_x86_64


	)

83 #unde‡
__DECL_SIMD_exp10f


84 
	#__DECL_SIMD_exp10f
 
__DECL_SIMD_x86_64


	)

85 #unde‡
__DECL_SIMD_cosh


86 
	#__DECL_SIMD_cosh
 
__DECL_SIMD_x86_64


	)

87 #unde‡
__DECL_SIMD_coshf


88 
	#__DECL_SIMD_coshf
 
__DECL_SIMD_x86_64


	)

89 #unde‡
__DECL_SIMD_expm1


90 
	#__DECL_SIMD_expm1
 
__DECL_SIMD_x86_64


	)

91 #unde‡
__DECL_SIMD_expm1f


92 
	#__DECL_SIMD_expm1f
 
__DECL_SIMD_x86_64


	)

93 #unde‡
__DECL_SIMD_söh


94 
	#__DECL_SIMD_söh
 
__DECL_SIMD_x86_64


	)

95 #unde‡
__DECL_SIMD_söhf


96 
	#__DECL_SIMD_söhf
 
__DECL_SIMD_x86_64


	)

97 #unde‡
__DECL_SIMD_cbπ


98 
	#__DECL_SIMD_cbπ
 
__DECL_SIMD_x86_64


	)

99 #unde‡
__DECL_SIMD_cbπf


100 
	#__DECL_SIMD_cbπf
 
__DECL_SIMD_x86_64


	)

101 #unde‡
__DECL_SIMD_©™2


102 
	#__DECL_SIMD_©™2
 
__DECL_SIMD_x86_64


	)

103 #unde‡
__DECL_SIMD_©™2f


104 
	#__DECL_SIMD_©™2f
 
__DECL_SIMD_x86_64


	)

105 #unde‡
__DECL_SIMD_log10


106 
	#__DECL_SIMD_log10
 
__DECL_SIMD_x86_64


	)

107 #unde‡
__DECL_SIMD_log10f


108 
	#__DECL_SIMD_log10f
 
__DECL_SIMD_x86_64


	)

109 #unde‡
__DECL_SIMD_log2


110 
	#__DECL_SIMD_log2
 
__DECL_SIMD_x86_64


	)

111 #unde‡
__DECL_SIMD_log2f


112 
	#__DECL_SIMD_log2f
 
__DECL_SIMD_x86_64


	)

113 #unde‡
__DECL_SIMD_log1p


114 
	#__DECL_SIMD_log1p
 
__DECL_SIMD_x86_64


	)

115 #unde‡
__DECL_SIMD_log1pf


116 
	#__DECL_SIMD_log1pf
 
__DECL_SIMD_x86_64


	)

117 #unde‡
__DECL_SIMD_©™h


118 
	#__DECL_SIMD_©™h
 
__DECL_SIMD_x86_64


	)

119 #unde‡
__DECL_SIMD_©™hf


120 
	#__DECL_SIMD_©™hf
 
__DECL_SIMD_x86_64


	)

121 #unde‡
__DECL_SIMD_acosh


122 
	#__DECL_SIMD_acosh
 
__DECL_SIMD_x86_64


	)

123 #unde‡
__DECL_SIMD_acoshf


124 
	#__DECL_SIMD_acoshf
 
__DECL_SIMD_x86_64


	)

125 #unde‡
__DECL_SIMD_îf


126 
	#__DECL_SIMD_îf
 
__DECL_SIMD_x86_64


	)

127 #unde‡
__DECL_SIMD_îff


128 
	#__DECL_SIMD_îff
 
__DECL_SIMD_x86_64


	)

129 #unde‡
__DECL_SIMD_ènh


130 
	#__DECL_SIMD_ènh
 
__DECL_SIMD_x86_64


	)

131 #unde‡
__DECL_SIMD_ènhf


132 
	#__DECL_SIMD_ènhf
 
__DECL_SIMD_x86_64


	)

133 #unde‡
__DECL_SIMD_asöh


134 
	#__DECL_SIMD_asöh
 
__DECL_SIMD_x86_64


	)

135 #unde‡
__DECL_SIMD_asöhf


136 
	#__DECL_SIMD_asöhf
 
__DECL_SIMD_x86_64


	)

137 #unde‡
__DECL_SIMD_îfc


138 
	#__DECL_SIMD_îfc
 
__DECL_SIMD_x86_64


	)

139 #unde‡
__DECL_SIMD_îfcf


140 
	#__DECL_SIMD_îfcf
 
__DECL_SIMD_x86_64


	)

141 #unde‡
__DECL_SIMD_èn


142 
	#__DECL_SIMD_èn
 
__DECL_SIMD_x86_64


	)

143 #unde‡
__DECL_SIMD_ènf


144 
	#__DECL_SIMD_ènf
 
__DECL_SIMD_x86_64


	)

	@/usr/include/bits/mathcalls-helper-functions.h

20 
__MATHDECL_ALIAS
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
), 
Â˛assify
)

21 
__©åibuã__
 ((
__c⁄°__
));

24 
__MATHDECL_ALIAS
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
), 
signbô
)

25 
__©åibuã__
 ((
__c⁄°__
));

29 
__MATHDECL_ALIAS
 (, 
__isöf
,, (
_MdoubÀ_
 
__vÆue
), 
isöf
)

30 
__©åibuã__
 ((
__c⁄°__
));

33 
__MATHDECL_ALIAS
 (, 
__föôe
,, (
_MdoubÀ_
 
__vÆue
), 
föôe
)

34 
__©åibuã__
 ((
__c⁄°__
));

37 
__MATHDECL_ALIAS
 (, 
__i¢™
,, (
_MdoubÀ_
 
__vÆue
), 
i¢™
)

38 
__©åibuã__
 ((
__c⁄°__
));

41 
__MATHDECL_ALIAS
 (, 
__i£qsig
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), 
i£qsig
);

44 
__MATHDECL_ALIAS
 (, 
__issig«lög
,, (
_MdoubÀ_
 
__vÆue
), 
issig«lög
)

45 
__©åibuã__
 ((
__c⁄°__
));

	@/usr/include/bits/mathcalls-narrow.h

19 #i‚de‡
_MATH_H


24 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
add
), 
__MATHCALL_REDIR_NAME
 (add), 2);

27 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
div
), 
__MATHCALL_REDIR_NAME
 (div), 2);

30 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
fma
), 
__MATHCALL_REDIR_NAME2
 (fma), 3);

33 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
mul
), 
__MATHCALL_REDIR_NAME
 (mul), 2);

36 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
sqπ
), 
__MATHCALL_REDIR_NAME2
 (sqrt), 1);

39 
__MATHCALL_NARROW
 (
__MATHCALL_NAME
 (
sub
), 
__MATHCALL_REDIR_NAME
 (sub), 2);

	@/usr/include/bits/mathcalls.h

45 #i‚de‡
_MATH_H


53 
__MATHCALL_VEC
 (
acos
,, (
_MdoubÀ_
 
__x
));

55 
__MATHCALL_VEC
 (
asö
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL_VEC
 (
©™
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL_VEC
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

62 
__MATHCALL_VEC
 (
cos
,, (
_MdoubÀ_
 
__x
));

64 
__MATHCALL_VEC
 (
sö
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL_VEC
 (
èn
,, (
_MdoubÀ_
 
__x
));

71 
__MATHCALL_VEC
 (
cosh
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL_VEC
 (
söh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL_VEC
 (
ènh
,, (
_MdoubÀ_
 
__x
));

77 #ifde‡
__USE_GNU


79 
__MATHDECL_VEC
 (,
söcos
,,

80 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

83 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


85 
__MATHCALL_VEC
 (
acosh
,, (
_MdoubÀ_
 
__x
));

87 
__MATHCALL_VEC
 (
asöh
,, (
_MdoubÀ_
 
__x
));

89 
__MATHCALL_VEC
 (
©™h
,, (
_MdoubÀ_
 
__x
));

95 
__MATHCALL_VEC
 (
exp
,, (
_MdoubÀ_
 
__x
));

98 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

101 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

104 
__MATHCALL_VEC
 (
log
,, (
_MdoubÀ_
 
__x
));

107 
__MATHCALL_VEC
 (
log10
,, (
_MdoubÀ_
 
__x
));

110 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
)Ë
__n⁄nuŒ
 ((2));

112 #i‡
__GLIBC_USE
 (
IEC_60559_FUNCS_EXT_C2X
)

114 
__MATHCALL_VEC
 (
exp10
,, (
_MdoubÀ_
 
__x
));

117 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


119 
__MATHCALL_VEC
 (
expm1
,, (
_MdoubÀ_
 
__x
));

122 
__MATHCALL_VEC
 (
log1p
,, (
_MdoubÀ_
 
__x
));

125 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

128 #ifde‡
__USE_ISOC99


130 
__MATHCALL_VEC
 (
exp2
,, (
_MdoubÀ_
 
__x
));

133 
__MATHCALL_VEC
 (
log2
,, (
_MdoubÀ_
 
__x
));

140 
__MATHCALL_VEC
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

143 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

145 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


147 
__MATHCALL_VEC
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

150 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


152 
__MATHCALL_VEC
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

159 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

162 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

165 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

168 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

170 #ifde‡
__USE_MISC


171 #i‡((!
deföed
 
__˝lu•lus
 \

172 || 
	g__˝lu•lus
 < 201103L \

173 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

174 && !
__MATH_DECLARING_FLOATN


177 
__MATHDECL_ALIAS
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
), isinf)

178 
__©åibuã__
 ((
__c⁄°__
));

181 #i‡!
__MATH_DECLARING_FLOATN


183 
__MATHDECL_ALIAS
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
), finite)

184 
__©åibuã__
 ((
__c⁄°__
));

187 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

191 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

196 #ifde‡
__USE_ISOC99


198 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

201 #ifde‡
__USE_ISOC99


203 
__MATHCALL
 (
«n
,, (c⁄° *
__ègb
));

207 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

208 #i‡((!
deföed
 
__˝lu•lus
 \

209 || 
	g__˝lu•lus
 < 201103L \

210 || 
	g__MATH_DECLARING_DOUBLE
 == 0)) \

211 && !
__MATH_DECLARING_FLOATN


213 
__MATHDECL_ALIAS
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
), isnan)

214 
__©åibuã__
 ((
__c⁄°__
));

218 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && 
__MATH_DECLARING_DOUBLE
)

220 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

221 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

222 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

223 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

224 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

225 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_ISOC99


231 
__MATHCALL_VEC
 (
îf
,, (
_MdoubÀ_
));

232 
__MATHCALL_VEC
 (
îfc
,, (
_MdoubÀ_
));

233 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

236 #ifde‡
__USE_ISOC99


238 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

241 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

242 #i‡!
__MATH_DECLARING_FLOATN


244 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

248 #ifde‡
__USE_MISC


252 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

256 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


259 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

262 
__MATHCALL
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

263 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT
 && !
__MATH_DECLARING_FLOATN


264 
__MATHCALL
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
));

267 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


269 
__MATHCALL
 (
√xtdown
,, (
_MdoubÀ_
 
__x
));

271 
__MATHCALL
 (
√xtup
,, (
_MdoubÀ_
 
__x
));

275 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

277 #ifde‡
__USE_ISOC99


279 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

283 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

286 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


288 
__MATHDECL
 (, 
Œogb
,, (
_MdoubÀ_
 
__x
));

291 #ifde‡
__USE_ISOC99


293 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

297 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

301 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

305 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

310 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

317 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

318 
__exãnsi⁄__


319 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

323 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

324 
__exãnsi⁄__


325 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

329 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

331 #i‡!
__MATH_DECLARING_FLOATN
 || 
deföed
 
__USE_GNU
 || !
__GLIBC_USE
 (
ISOC2X
)

333 
__MATHCALLX
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

336 
__MATHCALLX
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

340 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

343 #i‡
__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
Ë|| 
__MATH_DECLARING_FLOATN


345 
__MATHCALLX
 (
roundeví
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

349 
__MATHDECL
 (
__ötmax_t
, 
‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

350 
__width
));

354 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂ
,, (
_MdoubÀ_
 
__x
, 
__round
,

355 
__width
));

360 
__MATHDECL
 (
__ötmax_t
, 
‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

361 
__width
));

366 
__MATHDECL
 (
__uötmax_t
, 
u‰omÂx
,, (
_MdoubÀ_
 
__x
, 
__round
,

367 
__width
));

370 
__MATHDECL_1
 (, 
ˇn⁄iˇlize
,, (
_MdoubÀ_
 *
__cx
, c⁄° _MdoubÀ_ *
__x
));

373 #i‡(
__GLIBC_USE
 (
IEC_60559_BFP_EXT
) \

374 || (
	g__MATH_DECLARING_FLOATN
 \

375 && (
deföed
 
	g__USE_GNU
 || !
	$__GLIBC_USE
 (
ISOC2X
))))

377 
	`__MATHCALLX
 (
fmaxmag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

380 
	`__MATHCALLX
 (
fmömag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

383 #i‡
	`__GLIBC_USE
 (
ISOC2X
)

385 
	`__MATHCALLX
 (
fmaximum
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

388 
	`__MATHCALLX
 (
fmöimum
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

391 
	`__MATHCALLX
 (
fmaximum_num
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

394 
	`__MATHCALLX
 (
fmöimum_num
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

397 
	`__MATHCALLX
 (
fmaximum_mag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

400 
	`__MATHCALLX
 (
fmöimum_mag
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

403 
	`__MATHCALLX
 (
fmaximum_mag_num
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

406 
	`__MATHCALLX
 (
fmöimum_mag_num
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

409 #i‡
	`__GLIBC_USE
 (
IEC_60559_EXT
Ë|| 
__MATH_DECLARING_FLOATN


411 
	`__MATHDECL_1
 (, 
tŸÆ‹dî
,, (c⁄° 
_MdoubÀ_
 *
__x
,

412 c⁄° 
_MdoubÀ_
 *
__y
))

413 
__©åibuã_puª__
;

416 
	`__MATHDECL_1
 (, 
tŸÆ‹dîmag
,, (c⁄° 
_MdoubÀ_
 *
__x
,

417 c⁄° 
_MdoubÀ_
 *
__y
))

418 
__©åibuã_puª__
;

421 
	`__MATHCALL
 (
gë∑ylﬂd
,, (c⁄° 
_MdoubÀ_
 *
__x
));

424 
	`__MATHDECL_1
 (, 
£çaylﬂd
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

427 
	`__MATHDECL_1
 (, 
£çaylﬂdsig
,, (
_MdoubÀ_
 *
__x
, _MdoubÀ_ 
__∑ylﬂd
));

430 #i‡(
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

431 && 
__MATH_DECLARING_DOUBLE
 \

432 && !
deföed
 
__USE_XOPEN2K8
)) \

433 && !
__MATH_DECLARING_FLOATN


435 
	`__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mman.h

19 #i‚de‡
_SYS_MMAN_H


27 
	#MAP_32BIT
 0x40

	)

28 
	#MAP_ABOVE4G
 0x80

	)

30 #ifde‡
__USE_MISC


32 
	#SHADOW_STACK_SET_TOKEN
 0x1

	)

35 
	~<bôs/mm™-m≠-Êags-gíîic.h
>

38 
	~<bôs/mm™-löux.h
>

	@/usr/include/bits/mman_ext.h

19 #i‚de‡
_SYS_MMAN_H


23 #ifde‡
__USE_GNU


24 
	giovec
;

25 
__ssize_t
 
	$¥o˚ss_madvi£
 (
__pid_fd
, c⁄° 
iovec
 *
__iov
,

26 
size_t
 
__cou¡
, 
__advi˚
,

27 
__Êags
)

28 
__THROW
;

30 
	$¥o˚ss_mªÀa£
 (
pidfd
, 
Êags
Ë
__THROW
;

	@/usr/include/bits/posix1_lim.h

24 #i‚def 
_BITS_POSIX1_LIM_H


25 
	#_BITS_POSIX1_LIM_H
 1

	)

27 
	~<bôs/w‹dsize.h
>

32 
	#_POSIX_AIO_LISTIO_MAX
 2

	)

35 
	#_POSIX_AIO_MAX
 1

	)

38 
	#_POSIX_ARG_MAX
 4096

	)

41 #ifde‡
__USE_XOPEN2K


42 
	#_POSIX_CHILD_MAX
 25

	)

44 
	#_POSIX_CHILD_MAX
 6

	)

48 
	#_POSIX_DELAYTIMER_MAX
 32

	)

52 
	#_POSIX_HOST_NAME_MAX
 255

	)

55 
	#_POSIX_LINK_MAX
 8

	)

58 
	#_POSIX_LOGIN_NAME_MAX
 9

	)

61 
	#_POSIX_MAX_CANON
 255

	)

65 
	#_POSIX_MAX_INPUT
 255

	)

68 
	#_POSIX_MQ_OPEN_MAX
 8

	)

71 
	#_POSIX_MQ_PRIO_MAX
 32

	)

74 
	#_POSIX_NAME_MAX
 14

	)

77 #ifde‡
__USE_XOPEN2K


78 
	#_POSIX_NGROUPS_MAX
 8

	)

80 
	#_POSIX_NGROUPS_MAX
 0

	)

84 #ifde‡
__USE_XOPEN2K


85 
	#_POSIX_OPEN_MAX
 20

	)

87 
	#_POSIX_OPEN_MAX
 16

	)

90 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


93 
	#_POSIX_FD_SETSIZE
 
_POSIX_OPEN_MAX


	)

97 
	#_POSIX_PATH_MAX
 256

	)

100 
	#_POSIX_PIPE_BUF
 512

	)

104 
	#_POSIX_RE_DUP_MAX
 255

	)

107 
	#_POSIX_RTSIG_MAX
 8

	)

110 
	#_POSIX_SEM_NSEMS_MAX
 256

	)

113 
	#_POSIX_SEM_VALUE_MAX
 32767

	)

116 
	#_POSIX_SIGQUEUE_MAX
 32

	)

119 
	#_POSIX_SSIZE_MAX
 32767

	)

122 
	#_POSIX_STREAM_MAX
 8

	)

125 
	#_POSIX_SYMLINK_MAX
 255

	)

129 
	#_POSIX_SYMLOOP_MAX
 8

	)

132 
	#_POSIX_TIMER_MAX
 32

	)

135 
	#_POSIX_TTY_NAME_MAX
 9

	)

138 #ifde‡
__USE_XOPEN2K


139 
	#_POSIX_TZNAME_MAX
 6

	)

141 
	#_POSIX_TZNAME_MAX
 3

	)

144 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


146 
	#_POSIX_QLIMIT
 1

	)

150 
	#_POSIX_HIWAT
 
_POSIX_PIPE_BUF


	)

153 
	#_POSIX_UIO_MAXIOV
 16

	)

157 
	#_POSIX_CLOCKRES_MIN
 20000000

	)

161 
	~<bôs/loˇl_lim.h
>

164 #i‚def 
SSIZE_MAX


168 #i‡
__WORDSIZE
 =64 || 
__WORDSIZE32_SIZE_ULONG


169 
	#SSIZE_MAX
 
LONG_MAX


	)

171 
	#SSIZE_MAX
 
INT_MAX


	)

179 #i‚def 
NGROUPS_MAX


180 
	#NGROUPS_MAX
 8

	)

	@/usr/include/bits/posix_opt.h

19 #i‚def 
_BITS_POSIX_OPT_H


20 
	#_BITS_POSIX_OPT_H
 1

	)

23 
	#_POSIX_JOB_CONTROL
 1

	)

26 
	#_POSIX_SAVED_IDS
 1

	)

32 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

35 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

38 
	#_POSIX_FSYNC
 200809L

	)

41 
	#_POSIX_MAPPED_FILES
 200809L

	)

44 
	#_POSIX_MEMLOCK
 200809L

	)

47 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

50 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

53 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

57 
	#_POSIX_VDISABLE
 '\0'

	)

60 
	#_POSIX_NO_TRUNC
 1

	)

63 
	#_XOPEN_REALTIME
 1

	)

66 
	#_XOPEN_REALTIME_THREADS
 1

	)

69 
	#_XOPEN_SHM
 1

	)

72 
	#_POSIX_THREADS
 200809L

	)

75 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

76 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

79 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

82 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

85 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

88 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

92 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

94 #ifde‡
__USE_XOPEN2K8


96 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

99 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

103 
	#_POSIX_SEMAPHORES
 200809L

	)

106 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

109 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

110 
	#_POSIX_ASYNC_IO
 1

	)

112 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

114 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

117 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

120 
	#_LFS_LARGEFILE
 1

	)

121 
	#_LFS64_LARGEFILE
 1

	)

122 
	#_LFS64_STDIO
 1

	)

125 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

128 
	#_POSIX_CPUTIME
 0

	)

131 
	#_POSIX_THREAD_CPUTIME
 0

	)

134 
	#_POSIX_REGEXP
 1

	)

137 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

140 
	#_POSIX_SHELL
 1

	)

143 
	#_POSIX_TIMEOUTS
 200809L

	)

146 
	#_POSIX_SPIN_LOCKS
 200809L

	)

149 
	#_POSIX_SPAWN
 200809L

	)

152 
	#_POSIX_TIMERS
 200809L

	)

155 
	#_POSIX_BARRIERS
 200809L

	)

158 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

161 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

164 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

167 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

170 
	#_POSIX_ADVISORY_INFO
 200809L

	)

173 
	#_POSIX_IPV6
 200809L

	)

176 
	#_POSIX_RAW_SOCKETS
 200809L

	)

179 
	#_POSIX2_CHAR_TERM
 200809L

	)

182 
	#_POSIX_SPORADIC_SERVER
 -1

	)

183 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

186 
	#_POSIX_TRACE
 -1

	)

187 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

188 
	#_POSIX_TRACE_INHERIT
 -1

	)

189 
	#_POSIX_TRACE_LOG
 -1

	)

192 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

	@/usr/include/bits/stat.h

18 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


22 #i‚de‡
_BITS_STAT_H


23 
	#_BITS_STAT_H
 1

	)

25 
	~<bôs/°ru˘_°©.h
>

29 
	#__S_IFMT
 0170000

	)

32 
	#__S_IFDIR
 0040000

	)

33 
	#__S_IFCHR
 0020000

	)

34 
	#__S_IFBLK
 0060000

	)

35 
	#__S_IFREG
 0100000

	)

36 
	#__S_IFIFO
 0010000

	)

37 
	#__S_IFLNK
 0120000

	)

38 
	#__S_IFSOCK
 0140000

	)

42 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

43 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

44 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

48 
	#__S_ISUID
 04000

	)

49 
	#__S_ISGID
 02000

	)

50 
	#__S_ISVTX
 01000

	)

51 
	#__S_IREAD
 0400

	)

52 
	#__S_IWRITE
 0200

	)

53 
	#__S_IEXEC
 0100

	)

55 #ifde‡
__USE_ATFILE


56 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

57 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/statx.h

21 #i‚de‡
_SYS_STAT_H


22 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
°©x
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

29 #ifde‡
__has_ö˛ude


30 #i‡
__has_ö˛ude
 ("linux/stat.h")

31 
	~"löux/°©.h
"

32 #ifde‡
STATX_TYPE


33 
	#__°©x_time°amp_deföed
 1

	)

34 
	#__°©x_deföed
 1

	)

39 
	~<bôs/°©x-gíîic.h
>

	@/usr/include/bits/stdint-intn.h

19 #i‚de‡
_BITS_STDINT_INTN_H


20 
	#_BITS_STDINT_INTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__öt8_t
 
	töt8_t
;

25 
__öt16_t
 
	töt16_t
;

26 
__öt32_t
 
	töt32_t
;

27 
__öt64_t
 
	töt64_t
;

	@/usr/include/bits/stdint-least.h

19 #i‚de‡
_BITS_STDINT_LEAST_H


20 
	#_BITS_STDINT_LEAST_H
 1

	)

22 
	~<bôs/ty≥s.h
>

25 
__öt_Àa°8_t
 
	töt_Àa°8_t
;

26 
__öt_Àa°16_t
 
	töt_Àa°16_t
;

27 
__öt_Àa°32_t
 
	töt_Àa°32_t
;

28 
__öt_Àa°64_t
 
	töt_Àa°64_t
;

31 
__uöt_Àa°8_t
 
	tuöt_Àa°8_t
;

32 
__uöt_Àa°16_t
 
	tuöt_Àa°16_t
;

33 
__uöt_Àa°32_t
 
	tuöt_Àa°32_t
;

34 
__uöt_Àa°64_t
 
	tuöt_Àa°64_t
;

	@/usr/include/bits/stdint-uintn.h

19 #i‚de‡
_BITS_STDINT_UINTN_H


20 
	#_BITS_STDINT_UINTN_H
 1

	)

22 
	~<bôs/ty≥s.h
>

24 
__uöt8_t
 
	tuöt8_t
;

25 
__uöt16_t
 
	tuöt16_t
;

26 
__uöt32_t
 
	tuöt32_t
;

27 
__uöt64_t
 
	tuöt64_t
;

	@/usr/include/bits/stdio-ldbl.h

19 #i‚de‡
_STDIO_H


23 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

24 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

25 
	$__LDBL_REDIR_DECL
 (
•rötf
)

26 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

27 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

28 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

29 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

30 #i‡
deföed
 
__LDBL_COMPAT


31 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

32 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc23_fsˇnf
)

33 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc23_sˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc23_ssˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

38 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

40 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

41 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

42 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__isoc23_fsˇnfõì128
)

43 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__isoc23_sˇnfõì128
)

44 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__isoc23_ssˇnfõì128
)

46 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__isoc99_fsˇnfõì128
)

47 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__isoc99_sˇnfõì128
)

48 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__isoc99_ssˇnfõì128
)

51 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

54 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

55 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

56 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

59 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


60 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

61 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

64 #ifdef 
__USE_ISOC99


65 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

66 #i‡
deföed
 
__LDBL_COMPAT


67 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

68 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc23_vfsˇnf
)

69 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc23_vsˇnf
)

70 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc23_vssˇnf
)

72 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

73 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

74 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

76 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

77 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

78 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__isoc23_vfsˇnfõì128
)

79 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__isoc23_vsˇnfõì128
)

80 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__isoc23_vssˇnfõì128
)

82 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__isoc99_vfsˇnfõì128
)

83 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__isoc99_vsˇnfõì128
)

84 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__isoc99_vssˇnfõì128
)

87 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

90 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

91 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

92 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

96 #ifde‡
__USE_XOPEN2K8


97 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

98 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

101 #ifde‡
__USE_GNU


102 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

103 
	$__LDBL_REDIR2_DECL
 (
a•rötf
)

104 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

105 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

106 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

109 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


110 
	$__LDBL_REDIR2_DECL
 (
•rötf_chk
)

111 
	$__LDBL_REDIR2_DECL
 (
v•rötf_chk
)

112 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


113 
	$__LDBL_REDIR2_DECL
 (
¢¥ötf_chk
)

114 
	$__LDBL_REDIR2_DECL
 (
v¢¥ötf_chk
)

116 #i‡
__USE_FORTIFY_LEVEL
 > 1

117 
	$__LDBL_REDIR2_DECL
 (
Ârötf_chk
)

118 
	$__LDBL_REDIR2_DECL
 (
¥ötf_chk
)

119 
	$__LDBL_REDIR2_DECL
 (
vÂrötf_chk
)

120 
	$__LDBL_REDIR2_DECL
 (
v¥ötf_chk
)

121 #ifde‡
__USE_XOPEN2K8


122 
	$__LDBL_REDIR2_DECL
 (
d¥ötf_chk
)

123 
	$__LDBL_REDIR2_DECL
 (
vd¥ötf_chk
)

125 #ifde‡
__USE_GNU


126 
	$__LDBL_REDIR2_DECL
 (
a•rötf_chk
)

127 
	$__LDBL_REDIR2_DECL
 (
va•rötf_chk
)

128 
	$__LDBL_REDIR2_DECL
 (
ob°ack_¥ötf_chk
)

129 
	$__LDBL_REDIR2_DECL
 (
ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

19 #i‚de‡
_BITS_STDIO_H


20 
	#_BITS_STDIO_H
 1

	)

22 #i‚de‡
_STDIO_H


26 #i‚de‡
__exã∫_ölöe


27 
	#__STDIO_INLINE
 
ölöe


	)

29 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

33 #ifde‡
__USE_EXTERN_INLINES


36 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄
)

38 
__STDIO_INLINE
 

39 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

41  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

42 
	}
}

46 
__STDIO_INLINE
 

47 
	$gëch¨
 ()

49  
	`gëc
 (
°dö
);

50 
	}
}

53 #ifde‡
__USE_MISC


55 
__STDIO_INLINE
 

56 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

58  
	`__gëc_u∆ocked_body
 (
__Â
);

59 
	}
}

63 #ifde‡
__USE_POSIX199506


65 
__STDIO_INLINE
 

66 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

68  
	`__gëc_u∆ocked_body
 (
__Â
);

69 
	}
}

72 
__STDIO_INLINE
 

73 
	$gëch¨_u∆ocked
 ()

75  
	`__gëc_u∆ocked_body
 (
°dö
);

76 
	}
}

81 
__STDIO_INLINE
 

82 
	$putch¨
 (
__c
)

84  
	`putc
 (
__c
, 
°dout
);

85 
	}
}

88 #ifde‡
__USE_MISC


90 
__STDIO_INLINE
 

91 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

93  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

94 
	}
}

98 #ifde‡
__USE_POSIX199506


100 
__STDIO_INLINE
 

101 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

103  
	`__putc_u∆ocked_body
 (
__c
, 
__°ªam
);

104 
	}
}

107 
__STDIO_INLINE
 

108 
	$putch¨_u∆ocked
 (
__c
)

110  
	`__putc_u∆ocked_body
 (
__c
, 
°dout
);

111 
	}
}

115 #ifdef 
__USE_GNU


117 
__STDIO_INLINE
 
__ssize_t


118 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

120  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

121 
	}
}

125 #ifde‡
__USE_MISC


127 
__STDIO_INLINE
 

128 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

130  
	`__„of_u∆ocked_body
 (
__°ªam
);

131 
	}
}

134 
__STDIO_INLINE
 

135 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

137  
	`__„º‹_u∆ocked_body
 (
__°ªam
);

138 
	}
}

144 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

145 && !
deföed
 
	g__˝lu•lus


147 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

148 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

149 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

150 && (
size_t
Ë(
size
) != 0) \

151 ? ({ *
__±r
 = (*Ë(
±r
); \

152 
FILE
 *
__°ªam
 = (
°ªam
); \

153 
size_t
 
__˙t
; \

154 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

155 
__˙t
 > 0; --__cnt) \

157 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
); \

158 i‡(
__c
 =
EOF
) \

160 *
__±r
++ = 
__c
; \

162 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

163 / (
size_t
Ë(
size
); }) \

164 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

165 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

167 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

168 (Ë(
n
), (
size_t
) 0) \

169 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

171 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

172 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

173 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

174 && (
size_t
Ë(
size
) != 0) \

175 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

176 
FILE
 *
__°ªam
 = (
°ªam
); \

177 
size_t
 
__˙t
; \

178 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

179 
__˙t
 > 0; --__cnt) \

180 i‡(
	`putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

182 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

183 / (
size_t
Ë(
size
); }) \

184 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

185 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

187 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

188 (Ë(
n
), (
size_t
) 0) \

189 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

193 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2-decl.h

19 #i‚de‡
_BITS_STDIO2_DEC_H


20 
	#_BITS_STDIO2_DEC_H
 1

	)

22 #i‚de‡
_STDIO_H


26 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 c⁄° *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW


28 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

29 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

30 c⁄° *
__ª°ri˘
 
__f‹m©
,

31 
__gnuc_va_li°
 
__≠
Ë
__THROW


32 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3));

34 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


36 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

37 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

38 ...Ë
__THROW


39 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

40 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

41 
size_t
 
__¶í
, c⁄° *
__ª°ri˘
 
__f‹m©
,

42 
__gnuc_va_li°
 
__≠
Ë
__THROW


43 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

47 #i‡
__USE_FORTIFY_LEVEL
 > 1

49 
	$__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

50 c⁄° *
__ª°ri˘
 
__f‹m©
, ...)

51 
	`__n⁄nuŒ
 ((1));

52 
	`__¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
, ...);

53 
	$__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

54 c⁄° *
__ª°ri˘
 
__f‹m©
,

55 
__gnuc_va_li°
 
__≠
Ë
	`__n⁄nuŒ
 ((1));

56 
	`__v¥ötf_chk
 (
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

57 
__gnuc_va_li°
 
__≠
);

59 #ifde‡
__USE_XOPEN2K8


60 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, c⁄° *
__ª°ri˘
 
__fmt
,

61 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

62 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

63 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

64 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

67 #ifde‡
__USE_GNU


69 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

70 c⁄° *
__ª°ri˘
 
__fmt
, ...)

71 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

72 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

73 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__¨g
)

74 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

75 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

76 
__Êag
, c⁄° *
__ª°ri˘
 
__f‹m©
,

78 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

79 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

80 
__Êag
,

81 c⁄° *
__ª°ri˘
 
__f‹m©
,

82 
__gnuc_va_li°
 
__¨gs
)

83 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

88 #i‡
	`__GLIBC_USE
 (
DEPRECATED_GETS
)

89 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

90 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

93 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

96 *
	`__REDIRECT
 (
__fgës_Æüs
,

97 (*
__ª°ri˘
 
__s
, 
__n
,

98 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
)

99 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

100 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

101 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

102 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

103 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

106 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

107 
FILE
 *
__ª°ri˘
 
__°ªam
)

108 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë
	`__n⁄nuŒ
 ((4));

110 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

111 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

112 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

113 
‰ód
Ë
__wur
;

114 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

115 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

116 
size_t
 
__size
, size_à
__n
,

117 
FILE
 *
__ª°ri˘
 
__°ªam
),

118 
__‰ód_chk
)

119 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

122 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

123 
size_t
 
__size
, size_à
__n
,

124 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
 
	`__n⁄nuŒ
 ((5));

126 #ifde‡
__USE_GNU


127 *
	`__REDIRECT_FORTIFY
 (
__fgës_u∆ocked_Æüs
,

128 (*
__ª°ri˘
 
__s
, 
__n
,

129 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
)

130 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

131 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

132 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

133 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

134 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

138 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

139 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
)

140 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë
	`__n⁄nuŒ
 ((4));

143 #ifde‡
__USE_MISC


144 #unde‡
‰ód_u∆ocked


145 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

146 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

147 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

148 
‰ód_u∆ocked
Ë
__wur
;

149 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

150 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

151 
size_t
 
__size
, size_à
__n
,

152 
FILE
 *
__ª°ri˘
 
__°ªam
),

153 
__‰ód_u∆ocked_chk
)

154 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

157 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

158 
size_t
 
__size
, size_à
__n
,

159 
FILE
 *
__ª°ri˘
 
__°ªam
)

160 
__wur
 
	`__n⁄nuŒ
 ((5));

	@/usr/include/bits/stdio2.h

19 #i‚de‡
_BITS_STDIO2_H


20 
	#_BITS_STDIO2_H
 1

	)

22 #i‚de‡
_STDIO_H


26 #ifde‡
__va_¨g_∑ck


27 
__f‹tify_fun˘i⁄
 

28 
__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
, ...))

30  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

31 
	`__glibc_objsize
 (
__s
), 
__fmt
,

32 
	`__va_¨g_∑ck
 ());

33 
	}
}

34 #ñi‡!
deföed
 
__˝lu•lus


35 
	#•rötf
(
°r
, ...) \

36 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, \

37 
	`__glibc_objsize
 (
°r
), 
__VA_ARGS__
)

	)

40 
__f‹tify_fun˘i⁄
 

41 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, c⁄° *__ª°ri˘ 
__fmt
,

42 
__gnuc_va_li°
 
__≠
))

44  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

45 
	`__glibc_objsize
 (
__s
), 
__fmt
, 
__≠
);

46 
	}
}

48 #i‡
deföed
 
__USE_ISOC99
 || deföed 
__USE_UNIX98


49 #ifde‡
__va_¨g_∑ck


50 
__f‹tify_fun˘i⁄
 

51 
__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

52 c⁄° *
__ª°ri˘
 
__fmt
, ...))

54  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

55 
	`__glibc_objsize
 (
__s
), 
__fmt
,

56 
	`__va_¨g_∑ck
 ());

57 
	}
}

58 #ñi‡!
deföed
 
__˝lu•lus


59 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

60 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, \

61 
	`__glibc_objsize
 (
°r
), 
__VA_ARGS__
)

	)

64 
__f‹tify_fun˘i⁄
 

65 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

66 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

68  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

69 
	`__glibc_objsize
 (
__s
), 
__fmt
, 
__≠
);

70 
	}
}

74 #i‡
__USE_FORTIFY_LEVEL
 > 1

75 #ifde‡
__va_¨g_∑ck


76 
__f‹tify_fun˘i⁄
 
__n⁄nuŒ
 ((1)) 

77 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° *__ª°ri˘ 
__fmt
, ...)

79  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

80 
	`__va_¨g_∑ck
 ());

81 
	}
}

83 
__f‹tify_fun˘i⁄
 

84 
	$¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, ...)

86  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

87 
	}
}

88 #ñi‡!
deföed
 
__˝lu•lus


89 
	#¥ötf
(...) \

90 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

91 
	#Ârötf
(
°ªam
, ...) \

92 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

95 
__f‹tify_fun˘i⁄
 

96 
	$v¥ötf
 (c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

98 #ifde‡
__USE_EXTERN_INLINES


99  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

101  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

103 
	}
}

105 
__f‹tify_fun˘i⁄
 
__n⁄nuŒ
 ((1)) 

106 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

107 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

109  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

110 
	}
}

112 #ifde‡
__USE_XOPEN2K8


113 #ifde‡
__va_¨g_∑ck


114 
__f‹tify_fun˘i⁄
 

115 
	$d¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, ...)

117  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

118 
	`__va_¨g_∑ck
 ());

119 
	}
}

120 #ñi‡!
deföed
 
__˝lu•lus


121 
	#d¥ötf
(
fd
, ...) \

122 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

125 
__f‹tify_fun˘i⁄
 

126 
	$vd¥ötf
 (
__fd
, c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

128  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

132 #ifde‡
__USE_GNU


133 #ifde‡
__va_¨g_∑ck


134 
__f‹tify_fun˘i⁄
 

135 
__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
, ...))

137  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

138 
	`__va_¨g_∑ck
 ());

139 
	}
}

141 
__f‹tify_fun˘i⁄
 

142 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

145  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

146 
	`__va_¨g_∑ck
 ());

147 
	}
}

149 
__f‹tify_fun˘i⁄
 

150 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

151 c⁄° *
__ª°ri˘
 
__fmt
, ...))

153  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

154 
	`__va_¨g_∑ck
 ());

155 
	}
}

156 #ñi‡!
deföed
 
__˝lu•lus


157 
	#a•rötf
(
±r
, ...) \

158 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

159 
	#__a•rötf
(
±r
, ...) \

160 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

161 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

162 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

165 
__f‹tify_fun˘i⁄
 

166 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, c⁄° *__ª°ri˘ 
__fmt
,

167 
__gnuc_va_li°
 
__≠
))

169  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

170 
	}
}

172 
__f‹tify_fun˘i⁄
 

173 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

174 c⁄° *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

176  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

177 
__≠
);

178 
	}
}

184 #i‡
__GLIBC_USE
 (
DEPRECATED_GETS
)

185 
__f‹tify_fun˘i⁄
 
__wur
 *

186 
	$gës
 (*
__°r
)

188 i‡(
	`__glibc_objsize
 (
__°r
Ë!(
size_t
) -1)

189  
	`__gës_chk
 (
__°r
, 
	`__glibc_objsize
 (__str));

190  
	`__gës_w¨n
 (
__°r
);

191 
	}
}

194 
__f‹tify_fun˘i⁄
 
__wur
 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2)

195 
	`__n⁄nuŒ
 ((3)) *

196 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

198 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__s
);

199 i‡(
	`__glibc_ß„_‹_unknown_Àn
 (
__n
,  (), 
__sz
))

200  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

201 i‡(
	`__glibc_unß„_Àn
 (
__n
,  (), 
__sz
))

202  
	`__fgës_chk_w¨n
 (
__s
, 
__sz
, 
__n
, 
__°ªam
);

203  
	`__fgës_chk
 (
__s
, 
__sz
, 
__n
, 
__°ªam
);

204 
	}
}

206 
__f‹tify_fun˘i⁄
 
__wur
 
__n⁄nuŒ
 ((4)Ë
size_t


207 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

208 
FILE
 *
__ª°ri˘
 
__°ªam
)

210 
size_t
 
__sz
 = 
	`__glibc_objsize0
 (
__±r
);

211 i‡(
	`__glibc_ß„_‹_unknown_Àn
 (
__n
, 
__size
, 
__sz
))

212  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

213 i‡(
	`__glibc_unß„_Àn
 (
__n
, 
__size
, 
__sz
))

214  
	`__‰ód_chk_w¨n
 (
__±r
, 
__sz
, 
__size
, 
__n
, 
__°ªam
);

215  
	`__‰ód_chk
 (
__±r
, 
__sz
, 
__size
, 
__n
, 
__°ªam
);

216 
	}
}

218 #ifde‡
__USE_GNU


219 
__f‹tify_fun˘i⁄
 
__wur
 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2)

220 
	`__n⁄nuŒ
 ((3)) *

221 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

223 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__s
);

224 i‡(
	`__glibc_ß„_‹_unknown_Àn
 (
__n
,  (), 
__sz
))

225  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

226 i‡(
	`__glibc_unß„_Àn
 (
__n
,  (), 
__sz
))

227  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
__sz
, 
__n
, 
__°ªam
);

228  
	`__fgës_u∆ocked_chk
 (
__s
, 
__sz
, 
__n
, 
__°ªam
);

229 
	}
}

232 #ifde‡
__USE_MISC


233 #unde‡
‰ód_u∆ocked


234 
__f‹tify_fun˘i⁄
 
__wur
 
__n⁄nuŒ
 ((4)Ë
size_t


235 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

236 
FILE
 *
__ª°ri˘
 
__°ªam
)

238 
size_t
 
__sz
 = 
	`__glibc_objsize0
 (
__±r
);

239 i‡(
	`__glibc_ß„_‹_unknown_Àn
 (
__n
, 
__size
, 
__sz
))

241 #ifde‡
__USE_EXTERN_INLINES


242 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

243 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

244 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

245 && 
__size
 * 
__n
 <= 8)

247 
size_t
 
__˙t
 = 
__size
 * 
__n
;

248 *
__˝å
 = (*Ë
__±r
;

249 i‡(
__˙t
 == 0)

252 ; 
__˙t
 > 0; --__cnt)

254 
__c
 = 
	`gëc_u∆ocked
 (
__°ªam
);

255 i‡(
__c
 =
EOF
)

257 *
__˝å
++ = 
__c
;

259  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

262  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

264 i‡(
	`__glibc_unß„_Àn
 (
__n
, 
__size
, 
__sz
))

265  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
__sz
, 
__size
, 
__n
, 
__°ªam
);

266  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
__sz
, 
__size
, 
__n
, 
__°ªam
);

268 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‚de‡
_BITS_STDIO_LIM_H


20 
	#_BITS_STDIO_LIM_H
 1

	)

22 #i‚de‡
_STDIO_H


26 
	#FILENAME_MAX
 4096

	)

	@/usr/include/bits/stdlib-bsearch.h

19 
__exã∫_ölöe
 *

20 
	$b£¨ch
 (c⁄° *
__key
, c⁄° *
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

21 
__com∑r_‚_t
 
__com∑r
)

23 
size_t
 
__l
, 
__u
, 
__idx
;

24 c⁄° *
__p
;

25 
__com∑ris⁄
;

27 
__l
 = 0;

28 
__u
 = 
__nmemb
;

29 
__l
 < 
__u
)

31 
__idx
 = (
__l
 + 
__u
) / 2;

32 
__p
 = (c⁄° *Ë(((c⁄° *Ë
__ba£
Ë+ (
__idx
 * 
__size
));

33 
__com∑ris⁄
 = (*
__com∑r
Ë(
__key
, 
__p
);

34 i‡(
__com∑ris⁄
 < 0)

35 
__u
 = 
__idx
;

36 i‡(
__com∑ris⁄
 > 0)

37 
__l
 = 
__idx
 + 1;

40 #i‡
	`__GNUC_PREREQ
(4, 6)

41 #¥agm®
GCC
 
dügno°ic
 
push


42 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wcast-qual"

44  (*Ë
__p
;

45 #i‡
	`__GNUC_PREREQ
(4, 6)

46 #¥agm®
GCC
 
dügno°ic
 
p›


51  
NULL
;

52 
	}
}

	@/usr/include/bits/stdlib-float.h

19 #i‚de‡
_STDLIB_H


23 #ifde‡
__USE_EXTERN_INLINES


24 
__exã∫_ölöe
 

25 
__NTH
 (
	$©of
 (c⁄° *
__≈å
))

27  
	`°πod
 (
__≈å
, (**Ë
NULL
);

28 
	}
}

	@/usr/include/bits/stdlib-ldbl.h

19 #i‚de‡
_STDLIB_H


23 #ifdef 
__USE_ISOC99


24 #ifde‡
__LDBL_COMPAT


25 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
__°πoõì128
)

31 #ifde‡
__USE_GNU


32 #ifde‡
__LDBL_COMPAT


33 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

35 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
__°πoõì128_l
)

39 #i‡
	`__GLIBC_USE
 (
IEC_60559_BFP_EXT_C2X
)

40 #ifde‡
__LDBL_COMPAT


41 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
°r‰omd
)

43 
	$__LDBL_REDIR1_DECL
 (
°r‰oml
, 
__°r‰omõì128
)

47 #ifde‡
__USE_MISC


48 #i‡
deföed
 
__LDBL_COMPAT


49 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

50 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

51 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

52 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

53 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

54 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

55 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
__qecvtõì128
)

56 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
__qfcvtõì128
)

57 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
__qgcvtõì128
)

58 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
__qecvtõì128_r
)

59 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
__qfcvtõì128_r
)

61 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

	@/usr/include/bits/stdlib.h

19 #i‚de‡
_STDLIB_H


23 *
	$__ªÆ∑th_chk
 (c⁄° *
__ª°ri˘
 
__«me
,

24 *
__ª°ri˘
 
__ªsﬁved
,

25 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

26 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

27 (c⁄° *
__ª°ri˘
 
__«me
,

28 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

29 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

30 (c⁄° *
__ª°ri˘
 
__«me
,

31 *
__ª°ri˘
 
__ªsﬁved
,

32 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


33 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

36 
__f‹tify_fun˘i⁄
 
__wur
 *

37 
	`__NTH
 (
	$ªÆ∑th
 (c⁄° *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

39 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__ªsﬁved
);

41 i‡(
__sz
 =(
size_t
) -1)

42  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

44 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


45 i‡(
	`__glibc_unß„_Àn
 (
PATH_MAX
,  (), 
__sz
))

46  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
__sz
);

48  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
__sz
);

49 
	}
}

52 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

53 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2))

54 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__f‹tify_fun˘i⁄
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67  
	`__glibc_f‹tify
 (
±¢ame_r
, 
__buÊí
,  (),

68 
	`__glibc_objsize
 (
__buf
),

69 
__fd
, 
__buf
, 
__buÊí
);

70 
	}
}

73 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

74 
__THROW
 
__wur
;

75 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

76 
w˘omb
Ë
__wur
;

78 
__f‹tify_fun˘i⁄
 
__wur
 

79 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

84 
	#__STDLIB_MB_LEN_MAX
 16

	)

85 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


88 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1

89 && 
__STDLIB_MB_LEN_MAX
 > 
	`__glibc_objsize
 (
__s
))

90  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__glibc_objsize
 (__s));

91  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

92 
	}
}

95 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

96 c⁄° *
__ª°ri˘
 
__§c
,

97 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW


98 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

99 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_nuŒd°
,

100 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

101 c⁄° *
__ª°ri˘
 
__§c
,

102 
size_t
 
__Àn
), 
mb°owcs
)

103 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

104 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

105 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

106 c⁄° *
__ª°ri˘
 
__§c
,

107 
size_t
 
__Àn
), 
mb°owcs
)

108 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

109 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

110 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

111 c⁄° *
__ª°ri˘
 
__§c
,

112 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

113 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

116 
__f‹tify_fun˘i⁄
 
size_t


117 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° *__ª°ri˘ 
__§c
,

118 
size_t
 
__Àn
))

120 i‡(
	`__buûtö_c⁄°™t_p
 (
__d°
 =
NULL
) && __dst == NULL)

121  
	`__mb°owcs_nuŒd°
 (
__d°
, 
__§c
, 
__Àn
);

123  
	`__glibc_f‹tify_n
 (
mb°owcs
, 
__Àn
,  (
wch¨_t
),

124 
	`__glibc_objsize
 (
__d°
), __d°, 
__§c
, 
__Àn
);

125 
	}
}

127 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

128 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

129 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW


130 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

131 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

132 (*
__ª°ri˘
 
__d°
,

133 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

134 
size_t
 
__Àn
), 
wc°ombs
)

135 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 3)Ë__©å_ac˚s†((
__ªad_⁄ly__
, 2));

136 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

137 (*
__ª°ri˘
 
__d°
,

138 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

139 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

140 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

142 
__f‹tify_fun˘i⁄
 
size_t


143 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__§c
,

144 
size_t
 
__Àn
))

146  
	`__glibc_f‹tify
 (
wc°ombs
, 
__Àn
,  (),

147 
	`__glibc_objsize
 (
__d°
),

148 
__d°
, 
__§c
, 
__Àn
);

149 
	}
}

	@/usr/include/bits/string_fortified.h

18 #i‚de‡
_BITS_STRING_FORTIFIED_H


19 
	#_BITS_STRING_FORTIFIED_H
 1

	)

21 #i‚de‡
_STRING_H


25 
__f‹tify_fun˘i⁄
 *

26 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

27 
size_t
 
__Àn
))

29  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

30 
	`__glibc_objsize0
 (
__de°
));

31 
	}
}

33 
__f‹tify_fun˘i⁄
 *

34 
__NTH
 (
	$memmove
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__Àn
))

36  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
,

37 
	`__glibc_objsize0
 (
__de°
));

38 
	}
}

40 #ifde‡
__USE_GNU


41 
__f‹tify_fun˘i⁄
 *

42 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

43 
size_t
 
__Àn
))

45  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

46 
	`__glibc_objsize0
 (
__de°
));

47 
	}
}

56 
__f‹tify_fun˘i⁄
 *

57 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

59  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
,

60 
	`__glibc_objsize0
 (
__de°
));

61 
	}
}

63 #ifde‡
__USE_MISC


64 
	~<bôs/°rögs_f‹tifõd.h
>

66 
	$__ex∂icô_bzîo_chk
 (*
__de°
, 
size_t
 
__Àn
, size_à
__de°Àn
)

67 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
	`__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 2);

69 
__f‹tify_fun˘i⁄
 

70 
	`__NTH
 (
	$ex∂icô_bzîo
 (*
__de°
, 
size_t
 
__Àn
))

72 
	`__ex∂icô_bzîo_chk
 (
__de°
, 
__Àn
, 
	`__glibc_objsize0
 (__dest));

73 
	}
}

76 
__f‹tify_fun˘i⁄
 *

77 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

79  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

80 
	}
}

82 #ifde‡
__USE_XOPEN2K8


83 
__f‹tify_fun˘i⁄
 *

84 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

86  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

87 
	}
}

91 
__f‹tify_fun˘i⁄
 *

92 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

93 
size_t
 
__Àn
))

95  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
,

96 
	`__glibc_objsize
 (
__de°
));

97 
	}
}

99 #ifde‡
__USE_XOPEN2K8


100 #i‡
__GNUC_PREREQ
 (4, 7Ë|| 
__glibc_˛™g_¥îeq
 (2, 6)

101 
__f‹tify_fun˘i⁄
 *

102 
__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

104  
	`__buûtö___°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
,

105 
	`__glibc_objsize
 (
__de°
));

106 
	}
}

108 *
	$__°≤˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

109 
size_t
 
__de°Àn
Ë
__THROW


110 
	$__f‹tifõd_©å_ac˚ss
 (
__wrôe_⁄ly__
, 1, 3)

111 
	`__©å_ac˚ss
 ((
__ªad_⁄ly__
, 2));

112 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
, c⁄° *
__§c
,

113 
size_t
 
__n
), 
°≤˝y
);

115 
__f‹tify_fun˘i⁄
 *

116 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
))

118 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

119 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿> 
	`__bos
 (
__de°
)))

120  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

121  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

122 
	}
}

127 
__f‹tify_fun˘i⁄
 *

128 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
))

130  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__glibc_objsize
 (__dest));

131 
	}
}

134 
__f‹tify_fun˘i⁄
 *

135 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

136 
size_t
 
__Àn
))

138  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
,

139 
	`__glibc_objsize
 (
__de°
));

140 
	}
}

142 #ifde‡
__USE_MISC


143 
size_t
 
	$__°æ˝y_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

144 
size_t
 
__de°Àn
Ë
__THROW
;

145 
size_t
 
	`__REDIRECT_NTH
 (
__°æ˝y_Æüs
,

146 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
),

147 
°æ˝y
);

149 
__f‹tify_fun˘i⁄
 
size_t


150 
	`__NTH
 (
	$°æ˝y
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

151 
size_t
 
__n
))

153 i‡(
	`__glibc_objsize
 (
__de°
Ë!(
size_t
) -1

154 && (!
	`__buûtö_c⁄°™t_p
 (
__n
 > 
	`__glibc_objsize
 (
__de°
))

155 || 
__n
 > 
	`__glibc_objsize
 (
__de°
)))

156  
	`__°æ˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__glibc_objsize
 (__dest));

157  
	`__°æ˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

158 
	}
}

160 
size_t
 
	$__°æˇt_chk
 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
,

161 
size_t
 
__de°Àn
Ë
__THROW
;

162 
size_t
 
	`__REDIRECT_NTH
 (
__°æˇt_Æüs
,

163 (*
__de°
, c⁄° *
__§c
, 
size_t
 
__n
),

164 
°æˇt
);

166 
__f‹tify_fun˘i⁄
 
size_t


167 
	`__NTH
 (
	$°æˇt
 (*
__ª°ri˘
 
__de°
, c⁄° *__ª°ri˘ 
__§c
,

168 
size_t
 
__n
))

170 i‡(
	`__glibc_objsize
 (
__de°
Ë!(
size_t
) -1

171 && (!
	`__buûtö_c⁄°™t_p
 (
__n
 > 
	`__glibc_objsize
 (
__de°
))

172 || 
__n
 > 
	`__glibc_objsize
 (
__de°
)))

173  
	`__°æˇt_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__glibc_objsize
 (__dest));

174  
	`__°æˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

175 
	}
}

	@/usr/include/bits/time.h

23 #i‚de‡
_BITS_TIME_H


24 
	#_BITS_TIME_H
 1

	)

26 
	~<bôs/ty≥s.h
>

34 
	#CLOCKS_PER_SEC
 ((
__˛ock_t
Ë1000000)

	)

36 #i‡(!
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_POSIX
) \

37 && !
deföed
 
__USE_XOPEN2K


40 
__sysc⁄f
 ();

41 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

44 #ifde‡
__USE_POSIX199309


46 
	#CLOCK_REALTIME
 0

	)

48 
	#CLOCK_MONOTONIC
 1

	)

50 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

52 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

54 
	#CLOCK_MONOTONIC_RAW
 4

	)

56 
	#CLOCK_REALTIME_COARSE
 5

	)

58 
	#CLOCK_MONOTONIC_COARSE
 6

	)

60 
	#CLOCK_BOOTTIME
 7

	)

62 
	#CLOCK_REALTIME_ALARM
 8

	)

64 
	#CLOCK_BOOTTIME_ALARM
 9

	)

66 
	#CLOCK_TAI
 11

	)

69 
	#TIMER_ABSTIME
 1

	)

72 #ifde‡
__USE_GNU


73 
	~<bôs/timex.h
>

75 
__BEGIN_DECLS


78 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
 
	`__n⁄nuŒ
((2));

80 #ifde‡
__USE_TIME64_REDIRECTS


81 #i‡
	`deföed
(
__REDIRECT_NTH
)

82 
	`__REDIRECT_NTH
 (
˛ock_adjtime
, (
__˛ockid_t
 
__˛ock_id
,

83 
timex
 *
__utx
),

84 
__˛ock_adjtime64
Ë
	`__n⁄nuŒ
((2));

86 
	#˛ock_adjtime
 
__˛ock_adjtime64


	)

90 
__END_DECLS


	@/usr/include/bits/types.h

23 #i‚def 
_BITS_TYPES_H


24 
	#_BITS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/w‹dsize.h
>

28 
	~<bôs/timesize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 
__öt8_t
 
	t__öt_Àa°8_t
;

53 
__uöt8_t
 
	t__uöt_Àa°8_t
;

54 
__öt16_t
 
	t__öt_Àa°16_t
;

55 
__uöt16_t
 
	t__uöt_Àa°16_t
;

56 
__öt32_t
 
	t__öt_Àa°32_t
;

57 
__uöt32_t
 
	t__uöt_Àa°32_t
;

58 
__öt64_t
 
	t__öt_Àa°64_t
;

59 
__uöt64_t
 
	t__uöt_Àa°64_t
;

62 #i‡
__WORDSIZE
 == 64

63 
	t__quad_t
;

64 
	t__u_quad_t
;

66 
__exãnsi⁄__
 
	t__quad_t
;

67 
__exãnsi⁄__
 
	t__u_quad_t
;

71 #i‡
__WORDSIZE
 == 64

72 
	t__ötmax_t
;

73 
	t__uötmax_t
;

75 
__exãnsi⁄__
 
	t__ötmax_t
;

76 
__exãnsi⁄__
 
	t__uötmax_t
;

109 
	#__S16_TYPE
 

	)

110 
	#__U16_TYPE
 

	)

111 
	#__S32_TYPE
 

	)

112 
	#__U32_TYPE
 

	)

113 
	#__SLONGWORD_TYPE
 

	)

114 
	#__ULONGWORD_TYPE
 

	)

115 #i‡
__WORDSIZE
 == 32

116 
	#__SQUAD_TYPE
 
__öt64_t


	)

117 
	#__UQUAD_TYPE
 
__uöt64_t


	)

118 
	#__SWORD_TYPE
 

	)

119 
	#__UWORD_TYPE
 

	)

120 
	#__SLONG32_TYPE
 

	)

121 
	#__ULONG32_TYPE
 

	)

122 
	#__S64_TYPE
 
__öt64_t


	)

123 
	#__U64_TYPE
 
__uöt64_t


	)

126 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

127 #ñi‡
__WORDSIZE
 == 64

128 
	t__SQUAD_TYPE
 

	)

129 
	t__UQUAD_TYPE
 

	)

130 
	t__SWORD_TYPE
 

	)

131 
	t__UWORD_TYPE
 

	)

132 
	t__SLONG32_TYPE
 

	)

133 
	t__ULONG32_TYPE
 

	)

134 
	t__S64_TYPE
 

	)

135 
	t__U64_TYPE
 

	)

137 
	t__STD_TYPE
 

	)

141 
	~<bôs/ty≥sizes.h
>

142 
	~<bôs/time64.h
>

145 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

146 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

147 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

148 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

149 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

150 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

151 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

152 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

153 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

154 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

155 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

156 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

157 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

158 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

159 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

160 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

161 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

162 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

163 
__STD_TYPE
 
__SUSECONDS64_T_TYPE
 
	g__su£c⁄ds64_t
;

165 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

166 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

169 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

172 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

175 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

180 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

181 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

184 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

185 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

188 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

189 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

192 
__STD_TYPE
 
__FSWORD_T_TYPE
 
	g__fsw‹d_t
;

194 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

197 
__STD_TYPE
 
__SYSCALL_SLONG_TYPE
 
	g__sysˇŒ_¶⁄g_t
;

199 
__STD_TYPE
 
__SYSCALL_ULONG_TYPE
 
	g__sysˇŒ_ul⁄g_t
;

203 
__off64_t
 
	t__loff_t
;

204 *
	t__ˇddr_t
;

207 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

210 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

215 
	t__sig_©omic_t
;

220 #i‡
__TIMESIZE
 =64 && 
deföed
 
__LIBC


221 
	#__time64_t
 
__time_t


	)

222 #ñi‡
__TIMESIZE
 != 64

223 
__STD_TYPE
 
__TIME64_T_TYPE
 
	g__time64_t
;

226 #unde‡
__STD_TYPE


	@/usr/include/bits/types/FILE.h

1 #i‚de‡
__FILE_deföed


2 
	#__FILE_deföed
 1

	)

4 
	g_IO_FILE
;

7 
_IO_FILE
 
	tFILE
;

	@/usr/include/bits/types/__FILE.h

1 #i‚de‡
____FILE_deföed


2 
	#____FILE_deföed
 1

	)

4 
	g_IO_FILE
;

5 
_IO_FILE
 
	t__FILE
;

	@/usr/include/bits/types/__fpos64_t.h

1 #i‚de‡
_____Âos64_t_deföed


2 
	#_____Âos64_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos64_t


12 
__off64_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos64_t
;

	@/usr/include/bits/types/__fpos_t.h

1 #i‚de‡
_____Âos_t_deföed


2 
	#_____Âos_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/__mb°©e_t.h
>

10 
	s_G_Âos_t


12 
__off_t
 
	m__pos
;

13 
__mb°©e_t
 
	m__°©e
;

14 } 
	t__Âos_t
;

	@/usr/include/bits/types/clock_t.h

1 #i‚de‡
__˛ock_t_deföed


2 
	#__˛ock_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ock_t
 
	t˛ock_t
;

	@/usr/include/bits/types/clockid_t.h

1 #i‚de‡
__˛ockid_t_deföed


2 
	#__˛ockid_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__˛ockid_t
 
	t˛ockid_t
;

	@/usr/include/bits/types/cookie_io_functions_t.h

18 #i‚de‡
__cookõ_io_fun˘i⁄s_t_deföed


19 
	#__cookõ_io_fun˘i⁄s_t_deföed
 1

	)

21 
	~<bôs/ty≥s.h
>

27 
__ssize_t
 
	tcookõ_ªad_fun˘i⁄_t
 (*
	t__cookõ
, *
	t__buf
,

28 
	tsize_t
 
	t__nbyãs
);

36 
__ssize_t
 
	tcookõ_wrôe_fun˘i⁄_t
 (*
	t__cookõ
, c⁄° *
	t__buf
,

37 
	tsize_t
 
	t__nbyãs
);

45 
	tcookõ_£ek_fun˘i⁄_t
 (*
	t__cookõ
, 
	t__off64_t
 *
	t__pos
, 
	t__w
);

48 
	tcookõ_˛o£_fun˘i⁄_t
 (*
	t__cookõ
);

55 
	s_IO_cookõ_io_fun˘i⁄s_t


57 
cookõ_ªad_fun˘i⁄_t
 *
	mªad
;

58 
cookõ_wrôe_fun˘i⁄_t
 *
	mwrôe
;

59 
cookõ_£ek_fun˘i⁄_t
 *
	m£ek
;

60 
cookõ_˛o£_fun˘i⁄_t
 *
	m˛o£
;

61 } 
	tcookõ_io_fun˘i⁄s_t
;

	@/usr/include/bits/types/locale_t.h

19 #i‚de‡
_BITS_TYPES_LOCALE_T_H


20 
	#_BITS_TYPES_LOCALE_T_H
 1

	)

22 
	~<bôs/ty≥s/__loˇÀ_t.h
>

24 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/bits/types/mbstate_t.h

1 #i‚de‡
__mb°©e_t_deföed


2 
	#__mb°©e_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__mb°©e_t.h
>

6 
__mb°©e_t
 
	tmb°©e_t
;

	@/usr/include/bits/types/struct_FILE.h

18 #i‚de‡
__°ru˘_FILE_deföed


19 
	#__°ru˘_FILE_deföed
 1

	)

25 #i‡
deföed
 
_IO_USE_OLD_IO_FILE
 && !deföed 
_LIBC


29 #i‡
deföed
 
_IO_lock_t_deföed
 && !deföed 
_LIBC


33 
	~<bôs/ty≥s.h
>

35 
	g_IO_FILE
;

36 
	g_IO_m¨kî
;

37 
	g_IO_codecvt
;

38 
	g_IO_wide_d©a
;

42 #i‚de‡
_IO_lock_t_deföed


43 
	t_IO_lock_t
;

49 
	s_IO_FILE


51 
	m_Êags
;

54 *
	m_IO_ªad_±r
;

55 *
	m_IO_ªad_íd
;

56 *
	m_IO_ªad_ba£
;

57 *
	m_IO_wrôe_ba£
;

58 *
	m_IO_wrôe_±r
;

59 *
	m_IO_wrôe_íd
;

60 *
	m_IO_buf_ba£
;

61 *
	m_IO_buf_íd
;

64 *
	m_IO_ßve_ba£
;

65 *
	m_IO_backup_ba£
;

66 *
	m_IO_ßve_íd
;

68 
_IO_m¨kî
 *
	m_m¨kîs
;

70 
_IO_FILE
 *
	m_chaö
;

72 
	m_fûío
;

73 
	m_Êags2
;

74 
__off_t
 
	m_ﬁd_off£t
;

77 
	m_cur_cﬁumn
;

78 sig√d 
	m_vèbÀ_off£t
;

79 
	m_sh‹tbuf
[1];

81 
_IO_lock_t
 *
	m_lock
;

82 #ifde‡
_IO_USE_OLD_IO_FILE


85 
	s_IO_FILE_com∂ëe


87 
_IO_FILE
 
	m_fûe
;

89 
__off64_t
 
	m_off£t
;

91 
_IO_codecvt
 *
	m_codecvt
;

92 
_IO_wide_d©a
 *
	m_wide_d©a
;

93 
_IO_FILE
 *
	m_‰ìªs_li°
;

94 *
	m_‰ìªs_buf
;

95 
size_t
 
	m__∑d5
;

96 
	m_mode
;

98 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

102 
	#__gëc_u∆ocked_body
(
_Â
) \

103 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
) \

104 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

106 
	#__putc_u∆ocked_body
(
_ch
, 
_Â
) \

107 (
	`__glibc_u∆ikñy
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
) \

108 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

109 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

111 
	#_IO_EOF_SEEN
 0x0010

	)

112 
	#__„of_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

114 
	#_IO_ERR_SEEN
 0x0020

	)

115 
	#__„º‹_u∆ocked_body
(
_Â
Ë(((_Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

117 
	#_IO_USER_LOCK
 0x8000

	)

	@/usr/include/bits/types/struct_itimerspec.h

1 #i‚de‡
__ôimî•ec_deföed


2 
	#__ôimî•ec_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

5 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

8 
	sôimî•ec


10 
time•ec
 
	mô_öãrvÆ
;

11 
time•ec
 
	mô_vÆue
;

	@/usr/include/bits/types/struct_timespec.h

2 #i‚de‡
_STRUCT_TIMESPEC


3 
	#_STRUCT_TIMESPEC
 1

	)

5 
	~<bôs/ty≥s.h
>

6 
	~<bôs/ídün.h
>

7 
	~<bôs/ty≥s/time_t.h
>

11 
	stime•ec


13 #ifde‡
__USE_TIME64_REDIRECTS


14 
__time64_t
 
	mtv_£c
;

16 
__time_t
 
	mtv_£c
;

18 #i‡
__WORDSIZE
 == 64 \

19 || (
deföed
 
	m__SYSCALL_WORDSIZE
 && __SYSCALL_WORDSIZE == 64) \

20 || (
__TIMESIZE
 =32 && !
deföed
 
__USE_TIME64_REDIRECTS
)

21 
__sysˇŒ_¶⁄g_t
 
tv_n£c
;

23 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


25 
	mtv_n£c
;

27 
	mtv_n£c
;

	@/usr/include/bits/types/struct_tm.h

1 #i‚de‡
__°ru˘_tm_deföed


2 
	#__°ru˘_tm_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
	stm


9 
	mtm_£c
;

10 
	mtm_mö
;

11 
	mtm_hour
;

12 
	mtm_mday
;

13 
	mtm_m⁄
;

14 
	mtm_yór
;

15 
	mtm_wday
;

16 
	mtm_yday
;

17 
	mtm_isd°
;

19 #ifdef 
__USE_MISC


20 
	mtm_gmtoff
;

21 c⁄° *
	mtm_z⁄e
;

23 
	m__tm_gmtoff
;

24 c⁄° *
	m__tm_z⁄e
;

	@/usr/include/bits/types/time_t.h

1 #i‚de‡
__time_t_deföed


2 
	#__time_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 #ifde‡
__USE_TIME64_REDIRECTS


8 
__time64_t
 
	ttime_t
;

10 
__time_t
 
	ttime_t
;

	@/usr/include/bits/types/timer_t.h

1 #i‚de‡
__timî_t_deföed


2 
	#__timî_t_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

7 
__timî_t
 
	ttimî_t
;

	@/usr/include/bits/types/wint_t.h

1 #i‚de‡
__wöt_t_deföed


2 
	#__wöt_t_deföed
 1

	)

9 #i‚de‡
_WINT_T


10 
	#_WINT_T
 1

	)

16 #i‚de‡
__WINT_TYPE__


17 
	#__WINT_TYPE__
 

	)

20 
__WINT_TYPE__
 
	twöt_t
;

	@/usr/include/bits/unistd.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/uni°d-de˛.h
>

25 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


26 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

28  
	`__glibc_f‹tify
 (
ªad
, 
__nbyãs
,  (),

29 
	`__glibc_objsize0
 (
__buf
),

30 
__fd
, 
__buf
, 
__nbyãs
);

31 
	}
}

33 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


34 #i‚de‡
__USE_FILE_OFFSET64


35 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


36 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

38  
	`__glibc_f‹tify
 (
¥ód
, 
__nbyãs
,  (),

39 
	`__glibc_objsize0
 (
__buf
),

40 
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

41 
	}
}

43 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


44 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

46  
	`__glibc_f‹tify
 (
¥ód64
, 
__nbyãs
,  (),

47 
	`__glibc_objsize0
 (
__buf
),

48 
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

49 
	}
}

52 #ifde‡
__USE_LARGEFILE64


53 
__f‹tify_fun˘i⁄
 
__wur
 
ssize_t


54 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

56  
	`__glibc_f‹tify
 (
¥ód64
, 
__nbyãs
,  (),

57 
	`__glibc_objsize0
 (
__buf
),

58 
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

59 
	}
}

63 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


64 
__f‹tify_fun˘i⁄
 
__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


65 
__NTH
 (
	$ªadlök
 (c⁄° *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

66 
size_t
 
__Àn
))

68  
	`__glibc_f‹tify
 (
ªadlök
, 
__Àn
,  (),

69 
	`__glibc_objsize
 (
__buf
),

70 
__∑th
, 
__buf
, 
__Àn
);

71 
	}
}

74 #ifde‡
__USE_ATFILE


75 
__f‹tify_fun˘i⁄
 
__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


76 
__NTH
 (
	$ªadlök©
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

77 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

79  
	`__glibc_f‹tify
 (
ªadlök©
, 
__Àn
,  (),

80 
	`__glibc_objsize
 (
__buf
),

81 
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

82 
	}
}

85 
__f‹tify_fun˘i⁄
 
__wur
 *

86 
__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

88  
	`__glibc_f‹tify
 (
gëcwd
, 
__size
,  (),

89 
	`__glibc_objsize
 (
__buf
),

90 
__buf
, 
__size
);

91 
	}
}

93 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


94 
__f‹tify_fun˘i⁄
 
__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

95 
__NTH
 (
	$gëwd
 (*
__buf
))

97 i‡(
	`__glibc_objsize
 (
__buf
Ë!(
size_t
) -1)

98  
	`__gëwd_chk
 (
__buf
, 
	`__glibc_objsize
 (__buf));

99  
	`__gëwd_w¨n
 (
__buf
);

100 
	}
}

103 
__f‹tify_fun˘i⁄
 
size_t


104 
__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

106  
	`__glibc_f‹tify
 (
c⁄f°r
, 
__Àn
,  (),

107 
	`__glibc_objsize
 (
__buf
),

108 
__«me
, 
__buf
, 
__Àn
);

109 
	}
}

112 
__f‹tify_fun˘i⁄
 

113 
__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

115  
	`__glibc_f‹tify
 (
gëgroups
, 
__size
,  (
__gid_t
),

116 
	`__glibc_objsize
 (
__li°
),

117 
__size
, 
__li°
);

118 
	}
}

121 
__f‹tify_fun˘i⁄
 

122 
__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

124  
	`__glibc_f‹tify
 (
ây«me_r
, 
__buÊí
,  (),

125 
	`__glibc_objsize
 (
__buf
),

126 
__fd
, 
__buf
, 
__buÊí
);

127 
	}
}

130 #ifde‡
__USE_POSIX199506


131 
__f‹tify_fun˘i⁄
 

132 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

134  
	`__glibc_f‹tify
 (
gëlogö_r
, 
__buÊí
,  (),

135 
	`__glibc_objsize
 (
__buf
),

136 
__buf
, 
__buÊí
);

137 
	}
}

141 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


142 
__f‹tify_fun˘i⁄
 

143 
__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

145  
	`__glibc_f‹tify
 (
gëho°«me
, 
__buÊí
,  (),

146 
	`__glibc_objsize
 (
__buf
),

147 
__buf
, 
__buÊí
);

148 
	}
}

152 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

153 
__f‹tify_fun˘i⁄
 

154 
__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

156  
	`__glibc_f‹tify
 (
gëdomaö«me
, 
__buÊí
,  (),

157 
	`__glibc_objsize
 (
__buf
),

158 
__buf
, 
__buÊí
);

159 
	}
}

	@/usr/include/bits/unistd_ext.h

19 #i‚de‡
_UNISTD_H


23 #ifde‡
__USE_GNU


34 
__pid_t
 
	$gëtid
 (Ë
__THROW
;

36 #ifde‡
__has_ö˛ude


37 #i‡
	`__has_ö˛ude
 ("linux/close_range.h")

38 
	~"löux/˛o£_ønge.h
"

42 #i‚de‡
CLOSE_RANGE_UNSHARE


43 
	#CLOSE_RANGE_UNSHARE
 (1U << 1)

	)

46 #i‚de‡
CLOSE_RANGE_CLOEXEC


47 
	#CLOSE_RANGE_CLOEXEC
 (1U << 2)

	)

	@/usr/include/bits/waitflags.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


25 
	#WNOHANG
 1

	)

26 
	#WUNTRACED
 2

	)

29 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

36 
	#__WNOTHREAD
 0x20000000

	)

38 
	#__WALL
 0x40000000

	)

39 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

19 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


28 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

31 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

34 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

37 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

40 
	#__WIFSIGNALED
(
°©us
) \

41 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

44 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

48 #ifde‡
WCONTINUED


49 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

53 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

56 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

57 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

58 
	#__W_CONTINUED
 0xffff

	)

59 
	#__WCOREFLAG
 0x80

	)

	@/usr/include/bits/wchar-ldbl.h

19 #i‚de‡
_WCHAR_H


23 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


24 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

25 
__LDBL_REDIR_DECL
 (
w¥ötf
);

26 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

28 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

30 #i‡!
__GLIBC_USE
 (
DEPRECATED_SCANF
)

31 #i‡
deföed
 
__LDBL_COMPAT


32 #i‡
__GLIBC_USE
 (
C2X_STRTOL
)

33 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc23_fwsˇnf
)

34 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc23_wsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc23_swsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

38 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

39 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

41 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

42 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

43 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__isoc23_fwsˇnfõì128
)

44 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__isoc23_wsˇnfõì128
)

45 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__isoc23_swsˇnfõì128
)

47 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__isoc99_fwsˇnfõì128
)

48 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__isoc99_wsˇnfõì128
)

49 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__isoc99_swsˇnfõì128
)

52 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

55 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

61 #ifde‡
__USE_ISOC99


62 #ifde‡
__LDBL_COMPAT


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

65 
	$__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
__wc°oõì128
)

67 #i‡!
	`__GLIBC_USE
 (
DEPRECATED_SCANF
)

68 #i‡
deföed
 
__LDBL_COMPAT


69 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

70 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc23_vfwsˇnf
)

71 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc23_vwsˇnf
)

72 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc23_vswsˇnf
)

74 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

75 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

76 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

78 #ñi‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

79 #i‡
	`__GLIBC_USE
 (
C2X_STRTOL
)

80 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__isoc23_vfwsˇnfõì128
)

81 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__isoc23_vwsˇnfõì128
)

82 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__isoc23_vswsˇnfõì128
)

84 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__isoc99_vfwsˇnfõì128
)

85 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__isoc99_vwsˇnfõì128
)

86 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__isoc99_vswsˇnfõì128
)

89 #îr‹ 
bôs
/
°dlib
-
ldbl
.
h
 
ö˛uded
 
whí
 
no
Üdb»
ªdúe˘i⁄s
 
¨e
 
ªquúed
.

92 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

93 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

94 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

98 #ifde‡
__USE_GNU


99 #ifde‡
__LDBL_COMPAT


100 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

102 
	$__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
__wc°oõì128_l
)

106 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__f‹tify_fun˘i⁄


107 
	$__LDBL_REDIR2_DECL
 (
sw¥ötf_chk
)

108 
	$__LDBL_REDIR2_DECL
 (
vsw¥ötf_chk
)

109 #i‡
__USE_FORTIFY_LEVEL
 > 1

110 
	$__LDBL_REDIR2_DECL
 (
fw¥ötf_chk
)

111 
	$__LDBL_REDIR2_DECL
 (
w¥ötf_chk
)

112 
	$__LDBL_REDIR2_DECL
 (
vfw¥ötf_chk
)

113 
	$__LDBL_REDIR2_DECL
 (
vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

19 #i‚de‡
_BITS_WCHAR_H


20 
	#_BITS_WCHAR_H
 1

	)

33 #ifde‡
__WCHAR_MAX__


34 
	#__WCHAR_MAX
 
__WCHAR_MAX__


	)

35 #ñi‡
L
'\0' - 1 > 0

36 
	#__WCHAR_MAX
 (0xffffffffu + 
L
'\0')

	)

38 
	#__WCHAR_MAX
 (0x7ffffff‡+ 
L
'\0')

	)

41 #ifde‡
__WCHAR_MIN__


42 
	#__WCHAR_MIN
 
__WCHAR_MIN__


	)

43 #ñi‡
L
'\0' - 1 > 0

44 
	#__WCHAR_MIN
 (
L
'\0' + 0)

	)

46 
	#__WCHAR_MIN
 (-
__WCHAR_MAX
 - 1)

	)

	@/usr/include/bits/wchar2-decl.h

19 #i‚de‡
_BITS_WCHAR2_DECL_H


20 
	#_BITS_WCHAR2_DECL_H
 1

	)

22 #i‚de‡
_WCHAR_H


27 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

28 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

29 
size_t
 
__ns1
Ë
__THROW
;

30 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

31 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

32 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

33 
wmem˝y
);

34 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

35 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

36 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

37 
size_t
 
__ns1
), 
__wmem˝y_chk
)

38 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

41 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

42 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

43 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

44 c⁄° 
wch¨_t
 *
__s2
,

45 
size_t
 
__n
), 
wmemmove
);

46 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

47 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
,

48 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

49 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

53 #ifde‡
__USE_GNU


55 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

56 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

57 
size_t
 
__ns1
Ë
__THROW
;

58 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

59 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

60 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
,

61 
size_t
 
__n
), 
wmemp˝y
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

63 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

64 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

65 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

66 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

72 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

73 
size_t
 
__ns
Ë
__THROW
;

74 
wch¨_t
 *
	`__REDIRECT_FORTIFY_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

75 
size_t
 
__n
), 
wmem£t
);

76 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

77 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

78 
size_t
 
__ns
), 
__wmem£t_chk
)

79 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

82 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

83 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

84 
size_t
 
__n
Ë
__THROW
;

85 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

86 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

87 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

89 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

90 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

91 
size_t
 
__de°Àn
Ë
__THROW
;

92 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

93 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

94 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

96 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

97 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

98 
size_t
 
__de°Àn
Ë
__THROW
;

99 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

100 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

101 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

102 
size_t
 
__n
), 
wc¢˝y
);

103 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

104 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

105 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

106 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

107 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

110 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

111 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

112 
size_t
 
__de°Àn
Ë
__THROW
;

114 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

115 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

116 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

117 
size_t
 
__n
), 
w˝n˝y
);

118 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

119 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

120 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

121 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

122 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

125 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

126 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

127 
size_t
 
__de°Àn
Ë
__THROW
;

128 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

129 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

130 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

132 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

133 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

134 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

135 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

136 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

137 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__§c
,

138 
size_t
 
__n
), 
wc¢ˇt
);

140 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

141 
__Êag
, 
size_t
 
__s_Àn
,

142 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

143 
__THROW
 ;

144 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

145 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

146 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

147 
sw¥ötf
);

149 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

150 
__Êag
, 
size_t
 
__s_Àn
,

151 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

152 
__gnuc_va_li°
 
__¨g
)

153 
__THROW
 ;

154 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

155 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

156 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

157 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

160 #i‡
__USE_FORTIFY_LEVEL
 > 1

162 
	`__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

163 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

164 
	`__w¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

166 
	`__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

167 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

168 
__gnuc_va_li°
 
__≠
);

169 
	`__vw¥ötf_chk
 (
__Êag
, c⁄° 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

170 
__gnuc_va_li°
 
__≠
);

174 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

175 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

176 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

177 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

178 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

179 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

180 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

181 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

182 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

185 #ifde‡
__USE_GNU


187 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

188 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

189 
__wur
;

190 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

191 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

192 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

193 
__wur
;

194 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

195 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

196 
__FILE
 *
__ª°ri˘
 
__°ªam
),

197 
__fgëws_u∆ocked_chk
)

198 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

203 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

204 
mb°©e_t
 *
__ª°ri˘
 
__p
,

205 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

206 
size_t
 
	`__REDIRECT_FORTIFY_NTH
 (
__w¸tomb_Æüs
,

207 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

208 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

210 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

211 c⁄° **
__ª°ri˘
 
__§c
,

212 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

213 
size_t
 
__d°Àn
Ë
__THROW
;

214 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

215 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

216 c⁄° **
__ª°ri˘
 
__§c
,

217 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

218 
mb§towcs
);

219 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

220 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

221 c⁄° **
__ª°ri˘
 
__§c
,

222 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

223 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

224 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

227 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

228 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

229 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

230 
size_t
 
__d°Àn
Ë
__THROW
;

231 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

232 (*
__ª°ri˘
 
__d°
,

233 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

234 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

235 
wc§tombs
);

236 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

237 (*
__ª°ri˘
 
__d°
,

238 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

239 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

240 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

241 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

243 #ifdef 
__USE_XOPEN2K8


245 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

246 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

247 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

248 
size_t
 
__d°Àn
Ë
__THROW
;

249 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

250 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

251 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

252 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

253 
mb¢πowcs
);

254 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

255 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

256 c⁄° **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

257 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

258 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

259 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

262 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

263 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

264 
size_t
 
__nwc
, size_à
__Àn
,

265 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

266 
__THROW
;

267 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

268 (*
__ª°ri˘
 
__d°
,

269 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

270 
size_t
 
__nwc
, size_à
__Àn
,

271 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

272 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

273 (*
__ª°ri˘
 
__d°
,

274 c⁄° 
wch¨_t
 **
__ª°ri˘
 
__§c
,

275 
size_t
 
__nwc
, size_à
__Àn
,

276 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

277 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

278 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

282 #ifde‡
__USE_MISC


283 
size_t
 
	$__wc¶˝y_chk
 (
wch¨_t
 *
__de°
, c⁄° wch¨_à*
__§c
, 
size_t
 
__n
,

284 
size_t
 
__de°Àn
Ë
__THROW
;

285 
size_t
 
	`__REDIRECT_NTH
 (
__wc¶˝y_Æüs
,

286 (
wch¨_t
 *
__de°
, c⁄° wch¨_à*
__§c
,

287 
size_t
 
__n
), 
wc¶˝y
);

289 
size_t
 
	$__wc¶ˇt_chk
 (
wch¨_t
 *
__de°
, c⁄° wch¨_à*
__§c
, 
size_t
 
__n
,

290 
size_t
 
__de°Àn
Ë
__THROW
;

291 
size_t
 
	`__REDIRECT_NTH
 (
__wc¶ˇt_Æüs
,

292 (
wch¨_t
 *
__de°
, c⁄° wch¨_à*
__§c
,

293 
size_t
 
__n
), 
wc¶ˇt
);

	@/usr/include/bits/wchar2.h

19 #i‚de‡
_WCHAR_H


23 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

24 
__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

25 
size_t
 
__n
))

27  
	`__glibc_f‹tify_n
 (
wmem˝y
, 
__n
,  (
wch¨_t
),

28 
	`__glibc_objsize0
 (
__s1
),

29 
__s1
, 
__s2
, 
__n
);

30 
	}
}

32 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

33 
__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, c⁄° wch¨_à*
__s2
, 
size_t
 
__n
))

35  
	`__glibc_f‹tify_n
 (
wmemmove
, 
__n
,  (
wch¨_t
),

36 
	`__glibc_objsize0
 (
__s1
),

37 
__s1
, 
__s2
, 
__n
);

38 
	}
}

40 #ifde‡
__USE_GNU


41 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

42 
__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, c⁄° wch¨_à*__ª°ri˘ 
__s2
,

43 
size_t
 
__n
))

45  
	`__glibc_f‹tify_n
 (
wmemp˝y
, 
__n
,  (
wch¨_t
),

46 
	`__glibc_objsize0
 (
__s1
),

47 
__s1
, 
__s2
, 
__n
);

48 
	}
}

51 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

52 
__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

54  
	`__glibc_f‹tify_n
 (
wmem£t
, 
__n
,  (
wch¨_t
),

55 
	`__glibc_objsize0
 (
__s
),

56 
__s
, 
__c
, 
__n
);

57 
	}
}

59 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

60 
__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

62 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__de°
);

63 i‡(
__sz
 !(
size_t
) -1)

64  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
__sz
 /  (
wch¨_t
));

65  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

66 
	}
}

68 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

69 
__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

71 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__de°
);

72 i‡(
__sz
 !(
size_t
) -1)

73  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
__sz
 /  (
wch¨_t
));

74  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

75 
	}
}

77 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

78 
__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

79 
size_t
 
__n
))

81  
	`__glibc_f‹tify_n
 (
wc¢˝y
, 
__n
,  (
wch¨_t
),

82 
	`__glibc_objsize
 (
__de°
),

83 
__de°
, 
__§c
, 
__n
);

84 
	}
}

86 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

87 
__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

88 
size_t
 
__n
))

90  
	`__glibc_f‹tify_n
 (
w˝n˝y
, 
__n
,  (
wch¨_t
),

91 
	`__glibc_objsize
 (
__de°
),

92 
__de°
, 
__§c
, 
__n
);

93 
	}
}

95 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

96 
__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
))

98 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__de°
);

99 i‡(
__sz
 !(
size_t
) -1)

100  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
__sz
 /  (
wch¨_t
));

101  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

102 
	}
}

104 
__f‹tify_fun˘i⁄
 
wch¨_t
 *

105 
__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

106 
size_t
 
__n
))

108 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__de°
);

109 i‡(
__sz
 !(
size_t
) -1)

110  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
, 
__sz
 /  (
wch¨_t
));

111  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

112 
	}
}

114 #ifde‡
__USE_MISC


115 
__f‹tify_fun˘i⁄
 
size_t


116 
__NTH
 (
	$wc¶˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

117 
size_t
 
__n
))

119 i‡(
	`__glibc_objsize
 (
__de°
Ë!(
size_t
) -1

120 && (!
	`__buûtö_c⁄°™t_p
 (
__n


121 > 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
))

122 || 
__n
 > 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
)))

123  
	`__wc¶˝y_chk
 (
__de°
, 
__§c
, 
__n
,

124 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
));

125  
	`__wc¶˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

126 
	}
}

128 
__f‹tify_fun˘i⁄
 
size_t


129 
__NTH
 (
	$wc¶ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, c⁄° wch¨_à*__ª°ri˘ 
__§c
,

130 
size_t
 
__n
))

132 i‡(
	`__glibc_objsize
 (
__de°
Ë!(
size_t
) -1

133 && (!
	`__buûtö_c⁄°™t_p
 (
__n
 > 
	`__glibc_objsize
 (
__de°
)

134 /  (
wch¨_t
))

135 || 
__n
 > 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
)))

136  
	`__wc¶ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

137 
	`__glibc_objsize
 (
__de°
Ë/  (
wch¨_t
));

138  
	`__wc¶ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

139 
	}
}

142 #ifde‡
__va_¨g_∑ck


143 
__f‹tify_fun˘i⁄
 

144 
__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

145 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

147 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__s
);

148 i‡(
__sz
 !(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

149  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

150 
__sz
 /  (
wch¨_t
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

151  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

152 
	}
}

153 #ñi‡!
deföed
 
__˝lu•lus


155 
	#sw¥ötf
(
s
, 
n
, ...) \

156 (
	`__glibc_objsize
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

157 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

158 
	`__glibc_objsize
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

159 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

162 
__f‹tify_fun˘i⁄
 

163 
__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

164 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

166 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__s
);

167 i‡(
__sz
 !(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

168  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

169 
__sz
 /  (
wch¨_t
), 
__fmt
, 
__≠
);

170  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

171 
	}
}

174 #i‡
__USE_FORTIFY_LEVEL
 > 1

176 #ifde‡
__va_¨g_∑ck


177 
__f‹tify_fun˘i⁄
 

178 
	$w¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

180  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

181 
	}
}

183 
__f‹tify_fun˘i⁄
 

184 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, c⁄° 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

186  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

187 
	`__va_¨g_∑ck
 ());

188 
	}
}

189 #ñi‡!
deföed
 
__˝lu•lus


190 
	#w¥ötf
(...) \

191 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

192 
	#fw¥ötf
(
°ªam
, ...) \

193 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

196 
__f‹tify_fun˘i⁄
 

197 
	$vw¥ötf
 (c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

199  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__f‹tify_fun˘i⁄
 

203 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

204 c⁄° 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

206  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

207 
	}
}

210 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

211 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

213 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__s
);

214 i‡(
	`__glibc_ß„_‹_unknown_Àn
 (
__n
,  (
wch¨_t
), 
__sz
))

215  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

216 i‡(
	`__glibc_unß„_Àn
 (
__n
,  (
wch¨_t
), 
__sz
))

217  
	`__fgëws_chk_w¨n
 (
__s
, 
__sz
 /  (
wch¨_t
), 
__n
, 
__°ªam
);

218  
	`__fgëws_chk
 (
__s
, 
__sz
 /  (
wch¨_t
), 
__n
, 
__°ªam
);

219 
	}
}

221 #ifde‡
__USE_GNU


222 
__f‹tify_fun˘i⁄
 
__wur
 
wch¨_t
 *

223 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

225 
size_t
 
__sz
 = 
	`__glibc_objsize
 (
__s
);

226 i‡(
	`__glibc_ß„_‹_unknown_Àn
 (
__n
,  (
wch¨_t
), 
__sz
))

227  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

228 i‡(
	`__glibc_unß„_Àn
 (
__n
,  (
wch¨_t
), 
__sz
))

229  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
__sz
 /  (
wch¨_t
), 
__n
,

230 
__°ªam
);

231  
	`__fgëws_u∆ocked_chk
 (
__s
, 
__sz
 /  (
wch¨_t
), 
__n
, 
__°ªam
);

232 
	}
}

235 
__f‹tify_fun˘i⁄
 
__wur
 
size_t


236 
__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

237 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

242 
	#__WCHAR_MB_LEN_MAX
 16

	)

243 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


246 i‡(
	`__glibc_objsize
 (
__s
Ë!(
size_t
) -1

247 && 
__WCHAR_MB_LEN_MAX
 > 
	`__glibc_objsize
 (
__s
))

248  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__glibc_objsize
 (__s));

249  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

250 
	}
}

252 
__f‹tify_fun˘i⁄
 
size_t


253 
__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

254 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

256  
	`__glibc_f‹tify_n
 (
mb§towcs
, 
__Àn
,  (
wch¨_t
),

257 
	`__glibc_objsize
 (
__d°
),

258 
__d°
, 
__§c
, 
__Àn
, 
__ps
);

259 
	}
}

261 
__f‹tify_fun˘i⁄
 
size_t


262 
__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

263 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

265  
	`__glibc_f‹tify
 (
wc§tombs
, 
__Àn
,  (),

266 
	`__glibc_objsize
 (
__d°
),

267 
__d°
, 
__§c
, 
__Àn
, 
__ps
);

268 
	}
}

271 #ifdef 
__USE_XOPEN2K8


272 
__f‹tify_fun˘i⁄
 
size_t


273 
__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, c⁄° **__ª°ri˘ 
__§c
,

274 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

276  
	`__glibc_f‹tify_n
 (
mb¢πowcs
, 
__Àn
,  (
wch¨_t
),

277 
	`__glibc_objsize
 (
__d°
),

278 
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

279 
	}
}

281 
__f‹tify_fun˘i⁄
 
size_t


282 
__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, c⁄° 
wch¨_t
 **__ª°ri˘ 
__§c
,

283 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

285  
	`__glibc_f‹tify
 (
wc¢πombs
, 
__Àn
,  (),

286 
	`__glibc_objsize
 (
__d°
),

287 
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

288 
	}
}

	@/usr/include/bits/wctype-wchar.h

23 #i‚de‡
_BITS_WCTYPE_WCHAR_H


24 
	#_BITS_WCTYPE_WCHAR_H
 1

	)

26 #i‡!
deföed
 
_WCTYPE_H
 && !deföed 
_WCHAR_H


30 
	~<bôs/ty≥s.h
>

31 
	~<bôs/ty≥s/wöt_t.h
>

38 
	tw˘y≥_t
;

40 #i‚de‡
_ISwbô


45 
	~<bôs/ídün.h
>

46 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


47 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

49 
	#_ISwbô
(
bô
) \

50 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

51 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

52 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

53 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

58 
	m__ISwuµî
 = 0,

59 
	m__ISwlowî
 = 1,

60 
	m__ISwÆpha
 = 2,

61 
	m__ISwdigô
 = 3,

62 
	m__ISwxdigô
 = 4,

63 
	m__ISw•a˚
 = 5,

64 
	m__ISw¥öt
 = 6,

65 
	m__ISwgøph
 = 7,

66 
	m__ISwbœnk
 = 8,

67 
	m__ISw˙ål
 = 9,

68 
	m__ISwpun˘
 = 10,

69 
	m__ISwÆnum
 = 11,

71 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

72 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

73 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

74 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

75 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

76 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

77 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

78 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

79 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

80 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

81 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

82 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

87 
__BEGIN_DECLS


95 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

101 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

104 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

108 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

112 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

117 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

120 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

130 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

135 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

140 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

145 #ifde‡
__USE_ISOC99


146 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

155 
w˘y≥_t
 
	$w˘y≥
 (c⁄° *
__¥›îty
Ë
__THROW
;

159 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

166 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

169 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

171 
__END_DECLS


	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__
 && !deföed 
__ILP32__


4 
	#__WORDSIZE
 64

	)

6 
	#__WORDSIZE
 32

	)

7 
	#__WORDSIZE32_SIZE_ULONG
 0

	)

8 
	#__WORDSIZE32_PTRDIFF_LONG
 0

	)

11 
	#__WORDSIZE_TIME64_COMPAT32
 1

	)

13 #ifde‡
__x86_64__


15 
	#__SYSCALL_WORDSIZE
 64

	)

	@/usr/include/features.h

18 #i‚def 
_FEATURES_H


19 
	#_FEATURES_H
 1

	)

127 #unde‡
__USE_ISOC11


128 #unde‡
__USE_ISOC99


129 #unde‡
__USE_ISOC95


130 #unde‡
__USE_ISOCXX11


131 #unde‡
__USE_POSIX


132 #unde‡
__USE_POSIX2


133 #unde‡
__USE_POSIX199309


134 #unde‡
__USE_POSIX199506


135 #unde‡
__USE_XOPEN


136 #unde‡
__USE_XOPEN_EXTENDED


137 #unde‡
__USE_UNIX98


138 #unde‡
__USE_XOPEN2K


139 #unde‡
__USE_XOPEN2KXSI


140 #unde‡
__USE_XOPEN2K8


141 #unde‡
__USE_XOPEN2K8XSI


142 #unde‡
__USE_LARGEFILE


143 #unde‡
__USE_LARGEFILE64


144 #unde‡
__USE_FILE_OFFSET64


145 #unde‡
__USE_MISC


146 #unde‡
__USE_ATFILE


147 #unde‡
__USE_DYNAMIC_STACK_SIZE


148 #unde‡
__USE_GNU


149 #unde‡
__USE_FORTIFY_LEVEL


150 #unde‡
__KERNEL_STRICT_NAMES


151 #unde‡
__GLIBC_USE_ISOC2X


152 #unde‡
__GLIBC_USE_DEPRECATED_GETS


153 #unde‡
__GLIBC_USE_DEPRECATED_SCANF


154 #unde‡
__GLIBC_USE_C2X_STRTOL


158 #i‚de‡
_LOOSE_KERNEL_NAMES


159 
	#__KERNEL_STRICT_NAMES


	)

169 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


170 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

171 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

173 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

180 #i‡
deföed
 
__˛™g_maj‹__
 && deföed 
__˛™g_mö‹__


181 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
) \

182 ((
__˛™g_maj‹__
 << 16Ë+ 
__˛™g_mö‹__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

184 
	#__glibc_˛™g_¥îeq
(
maj
, 
mö
Ë0

	)

188 
	#__GLIBC_USE
(
F
Ë
__GLIBC_USE_
 ## 
	)
F

194 #i‡(
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE
) \

195 && !
deföed
 
	g_DEFAULT_SOURCE


197 #unde‡
_DEFAULT_SOURCE


198 
	#_DEFAULT_SOURCE
 1

	)

202 #ifde‡
_GNU_SOURCE


203 #unde‡
_ISOC95_SOURCE


204 
	#_ISOC95_SOURCE
 1

	)

205 #unde‡
_ISOC99_SOURCE


206 
	#_ISOC99_SOURCE
 1

	)

207 #unde‡
_ISOC11_SOURCE


208 
	#_ISOC11_SOURCE
 1

	)

209 #unde‡
_ISOC2X_SOURCE


210 
	#_ISOC2X_SOURCE
 1

	)

211 #unde‡
_POSIX_SOURCE


212 
	#_POSIX_SOURCE
 1

	)

213 #unde‡
_POSIX_C_SOURCE


214 
	#_POSIX_C_SOURCE
 200809L

	)

215 #unde‡
_XOPEN_SOURCE


216 
	#_XOPEN_SOURCE
 700

	)

217 #unde‡
_XOPEN_SOURCE_EXTENDED


218 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

219 #unde‡
_LARGEFILE64_SOURCE


220 
	#_LARGEFILE64_SOURCE
 1

	)

221 #unde‡
_DEFAULT_SOURCE


222 
	#_DEFAULT_SOURCE
 1

	)

223 #unde‡
_ATFILE_SOURCE


224 
	#_ATFILE_SOURCE
 1

	)

225 #unde‡
_DYNAMIC_STACK_SIZE_SOURCE


226 
	#_DYNAMIC_STACK_SIZE_SOURCE
 1

	)

231 #i‡(
deföed
 
_DEFAULT_SOURCE
 \

232 || (!
deföed
 
	g__STRICT_ANSI__
 \

233 && !
deföed
 
	g_ISOC99_SOURCE
 && !deföed 
	g_ISOC11_SOURCE
 \

234 && !
deföed
 
	g_ISOC2X_SOURCE
 \

235 && !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 \

236 && !
deföed
 
	g_XOPEN_SOURCE
))

237 #unde‡
_DEFAULT_SOURCE


238 
	#_DEFAULT_SOURCE
 1

	)

242 #i‡(
deföed
 
_ISOC2X_SOURCE
 \

243 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ > 201710L))

244 
	#__GLIBC_USE_ISOC2X
 1

	)

246 
	#__GLIBC_USE_ISOC2X
 0

	)

250 #i‡(
deföed
 
_ISOC11_SOURCE
 || deföed 
_ISOC2X_SOURCE
 \

251 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 201112L))

252 
	#__USE_ISOC11
 1

	)

256 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

257 || 
deföed
 
_ISOC2X_SOURCE
 \

258 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

259 
	#__USE_ISOC99
 1

	)

263 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC11_SOURCE
 \

264 || 
deföed
 
_ISOC2X_SOURCE
 \

265 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

266 
	#__USE_ISOC95
 1

	)

269 #ifde‡
__˝lu•lus


271 #i‡
__˝lu•lus
 >= 201703L

272 
	#__USE_ISOC11
 1

	)

276 #i‡
__˝lu•lus
 >201103L || 
deföed
 
__GXX_EXPERIMENTAL_CXX0X__


277 
	#__USE_ISOCXX11
 1

	)

278 
	#__USE_ISOC99
 1

	)

285 #ifde‡
_DEFAULT_SOURCE


286 #i‡!
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE


287 
	#__USE_POSIX_IMPLICITLY
 1

	)

289 #unde‡
_POSIX_SOURCE


290 
	#_POSIX_SOURCE
 1

	)

291 #unde‡
_POSIX_C_SOURCE


292 
	#_POSIX_C_SOURCE
 200809L

	)

295 #i‡((!
deföed
 
__STRICT_ANSI__
 \

296 || (
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) >= 500)) \

297 && !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

298 
	#_POSIX_SOURCE
 1

	)

299 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

300 
	#_POSIX_C_SOURCE
 2

	)

301 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

302 
	#_POSIX_C_SOURCE
 199506L

	)

303 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

304 
	#_POSIX_C_SOURCE
 200112L

	)

306 
	#_POSIX_C_SOURCE
 200809L

	)

308 
	#__USE_POSIX_IMPLICITLY
 1

	)

317 #i‡((!
deföed
 
_POSIX_C_SOURCE
 || (_POSIX_C_SOURCE - 0) < 199506L) \

318 && (
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE
))

319 
	#_POSIX_SOURCE
 1

	)

320 #unde‡
_POSIX_C_SOURCE


321 
	#_POSIX_C_SOURCE
 199506L

	)

324 #i‡(
deföed
 
_POSIX_SOURCE
 \

325 || (
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >= 1) \

326 || 
deföed
 
_XOPEN_SOURCE
)

327 
	#__USE_POSIX
 1

	)

330 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


331 
	#__USE_POSIX2
 1

	)

334 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199309L

335 
	#__USE_POSIX199309
 1

	)

338 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 199506L

339 
	#__USE_POSIX199506
 1

	)

342 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200112L

343 
	#__USE_XOPEN2K
 1

	)

344 #unde‡
__USE_ISOC95


345 
	#__USE_ISOC95
 1

	)

346 #unde‡
__USE_ISOC99


347 
	#__USE_ISOC99
 1

	)

350 #i‡
deföed
 
_POSIX_C_SOURCE
 && (_POSIX_C_SOURCE - 0) >= 200809L

351 
	#__USE_XOPEN2K8
 1

	)

352 #unde‡
_ATFILE_SOURCE


353 
	#_ATFILE_SOURCE
 1

	)

356 #ifdef 
_XOPEN_SOURCE


357 
	#__USE_XOPEN
 1

	)

358 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

359 
	#__USE_XOPEN_EXTENDED
 1

	)

360 
	#__USE_UNIX98
 1

	)

361 #unde‡
_LARGEFILE_SOURCE


362 
	#_LARGEFILE_SOURCE
 1

	)

363 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

364 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

365 
	#__USE_XOPEN2K8
 1

	)

366 
	#__USE_XOPEN2K8XSI
 1

	)

368 
	#__USE_XOPEN2K
 1

	)

369 
	#__USE_XOPEN2KXSI
 1

	)

370 #unde‡
__USE_ISOC95


371 
	#__USE_ISOC95
 1

	)

372 #unde‡
__USE_ISOC99


373 
	#__USE_ISOC99
 1

	)

376 #ifde‡
_XOPEN_SOURCE_EXTENDED


377 
	#__USE_XOPEN_EXTENDED
 1

	)

382 #ifde‡
_LARGEFILE_SOURCE


383 
	#__USE_LARGEFILE
 1

	)

386 #ifde‡
_LARGEFILE64_SOURCE


387 
	#__USE_LARGEFILE64
 1

	)

390 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

391 
	#__USE_FILE_OFFSET64
 1

	)

394 
	~<„©uªs-time64.h
>

396 #i‡
deföed
 
_DEFAULT_SOURCE


397 
	#__USE_MISC
 1

	)

400 #ifdef 
_ATFILE_SOURCE


401 
	#__USE_ATFILE
 1

	)

404 #ifdef 
_DYNAMIC_STACK_SIZE_SOURCE


405 
	#__USE_DYNAMIC_STACK_SIZE
 1

	)

408 #ifdef 
_GNU_SOURCE


409 
	#__USE_GNU
 1

	)

412 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

413 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

414 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

415 #ñi‡!
__GNUC_PREREQ
 (4, 1)

416 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


417 #ñi‡
_FORTIFY_SOURCE
 > 2 && (
__glibc_˛™g_¥îeq
 (9, 0) \

418 || 
	$__GNUC_PREREQ
 (12, 0))

420 #i‡
_FORTIFY_SOURCE
 > 3

421 #w¨nög 
_FORTIFY_SOURCE
 > 3 
is
 
åóãd
 
like
 3 
⁄
 
this
 
∂©f‹m


423 
	#__USE_FORTIFY_LEVEL
 3

	)

424 #ñi‡
_FORTIFY_SOURCE
 > 1

425 #i‡
_FORTIFY_SOURCE
 > 2

426 #w¨nög 
_FORTIFY_SOURCE
 > 2 
is
 
åóãd
 
like
 2 
⁄
 
this
 
∂©f‹m


428 
	#__USE_FORTIFY_LEVEL
 2

	)

430 
	#__USE_FORTIFY_LEVEL
 1

	)

433 #i‚de‡
__USE_FORTIFY_LEVEL


434 
	#__USE_FORTIFY_LEVEL
 0

	)

441 #i‡
deföed
 
__˝lu•lus
 ? __˝lu•lu†>201402L : deföed 
__USE_ISOC11


442 
	#__GLIBC_USE_DEPRECATED_GETS
 0

	)

444 
	#__GLIBC_USE_DEPRECATED_GETS
 1

	)

459 #i‡(
deföed
 
__USE_GNU
 \

460 && (
deföed
 
__˝lu•lus
 \

461 ? (
__˝lu•lus
 < 201103L && !
deföed
 
__GXX_EXPERIMENTAL_CXX0X__
) \

462 : (!
deföed
 
__STDC_VERSION__
 || __STDC_VERSION__ < 199901L)))

463 
	#__GLIBC_USE_DEPRECATED_SCANF
 1

	)

465 
	#__GLIBC_USE_DEPRECATED_SCANF
 0

	)

473 #i‡
	`__GLIBC_USE
 (
ISOC2X
)

474 
	#__GLIBC_USE_C2X_STRTOL
 1

	)

476 
	#__GLIBC_USE_C2X_STRTOL
 0

	)

481 
	~<°dc-¥edef.h
>

489 #unde‡
__GNU_LIBRARY__


490 
	#__GNU_LIBRARY__
 6

	)

494 
	#__GLIBC__
 2

	)

495 
	#__GLIBC_MINOR__
 39

	)

497 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

498 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

501 #i‚de‡
__ASSEMBLER__


502 #i‚de‡
_SYS_CDEFS_H


503 
	~<sys/cdefs.h
>

508 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


509 
	#__USE_LARGEFILE
 1

	)

510 
	#__USE_LARGEFILE64
 1

	)

516 #i‡
	`__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

517 && !
deföed
 
__OPTIMIZE_SIZE__
 && !deföed 
__NO_INLINE__
 \

518 && 
deföed
 
__exã∫_ölöe


519 
	#__USE_EXTERN_INLINES
 1

	)

527 
	~<gnu/°ubs.h
>

	@/usr/include/strings.h

18 #i‚def 
_STRINGS_H


19 
	#_STRINGS_H
 1

	)

21 
	~<„©uªs.h
>

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

27 
	#__CORRECT_ISO_CPP_STRINGS_H_PROTO


	)

30 
	g__BEGIN_DECLS


32 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


34 
	$bcmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

35 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

38 
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__n
)

39 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

42 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

45 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


48 *
	`ödex
 (*
__s
, 
__c
)

49 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

50 c⁄° *
	`ödex
 (c⁄° *
__s
, 
__c
)

51 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

53 #i‡
deföed
 
__OPTIMIZE__


54 
__exã∫_Æways_ölöe
 *

55 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


57  
	`__buûtö_ödex
 (
__s
, 
__c
);

60 
__exã∫_Æways_ölöe
 const *

61 
	`ödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


63  
	`__buûtö_ödex
 (
__s
, 
__c
);

66 
	}
}

68 *
	$ödex
 (c⁄° *
__s
, 
__c
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

73 #ifde‡
__CORRECT_ISO_CPP_STRINGS_H_PROTO


76 *
	`rödex
 (*
__s
, 
__c
)

77 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

78 c⁄° *
	`rödex
 (c⁄° *
__s
, 
__c
)

79 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

81 #i‡
deföed
 
__OPTIMIZE__


82 
__exã∫_Æways_ölöe
 *

83 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


85  
	`__buûtö_rödex
 (
__s
, 
__c
);

88 
__exã∫_Æways_ölöe
 const *

89 
	`rödex
 (c⁄° *
__s
, 
__c
Ë
__THROW


91  
	`__buûtö_rödex
 (
__s
, 
__c
);

94 
	}
}

96 *
	$rödex
 (c⁄° *
__s
, 
__c
)

97 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

101 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8
 || deföed 
__USE_XOPEN2K8XSI


104 
	$ffs
 (
__i
Ë
__THROW
 
__©åibuã_c⁄°__
;

109 #ifdef 
__USE_MISC


110 
	$ff¶
 (
__l
Ë
__THROW
 
__©åibuã_c⁄°__
;

111 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

112 
__THROW
 
__©åibuã_c⁄°__
;

116 
	$°rˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
)

117 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

120 
	$°∫ˇ£cmp
 (c⁄° *
__s1
, c⁄° *
__s2
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

123 #ifdef 
__USE_XOPEN2K8


125 
	~<bôs/ty≥s/loˇÀ_t.h
>

128 
	$°rˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
, 
loˇÀ_t
 
__loc
)

129 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

133 
	$°∫ˇ£cmp_l
 (c⁄° *
__s1
, c⁄° *
__s2
,

134 
size_t
 
__n
, 
loˇÀ_t
 
__loc
)

135 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

138 
__END_DECLS


140 #i‡
	`__GNUC_PREREQ
 (3,4Ë&& 
__USE_FORTIFY_LEVEL
 > 0 \

141 && 
deföed
 
__f‹tify_fun˘i⁄


143 #i‡
deföed
 
__USE_MISC
 || !deföed 
__USE_XOPEN2K8


144 
	~<bôs/°rögs_f‹tifõd.h
>

	@/usr/include/sys/types.h

22 #i‚def 
_SYS_TYPES_H


23 
	#_SYS_TYPES_H
 1

	)

25 
	~<„©uªs.h
>

27 
	g__BEGIN_DECLS


29 
	~<bôs/ty≥s.h
>

31 #ifdef 
__USE_MISC


32 #i‚de‡
__u_ch¨_deföed


33 
__u_ch¨
 
	tu_ch¨
;

34 
__u_sh‹t
 
	tu_sh‹t
;

35 
__u_öt
 
	tu_öt
;

36 
__u_l⁄g
 
	tu_l⁄g
;

37 
__quad_t
 
	tquad_t
;

38 
__u_quad_t
 
	tu_quad_t
;

39 
__fsid_t
 
	tfsid_t
;

40 
	#__u_ch¨_deföed


	)

42 
__loff_t
 
	tloff_t
;

45 #i‚de‡
__öo_t_deföed


46 #i‚de‡
__USE_FILE_OFFSET64


47 
__öo_t
 
	töo_t
;

49 
__öo64_t
 
	töo_t
;

51 
	#__öo_t_deföed


	)

53 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


54 
__öo64_t
 
	töo64_t
;

55 
	#__öo64_t_deföed


	)

58 #i‚de‡
__dev_t_deföed


59 
__dev_t
 
	tdev_t
;

60 
	#__dev_t_deföed


	)

63 #i‚de‡
__gid_t_deföed


64 
__gid_t
 
	tgid_t
;

65 
	#__gid_t_deföed


	)

68 #i‚de‡
__mode_t_deföed


69 
__mode_t
 
	tmode_t
;

70 
	#__mode_t_deföed


	)

73 #i‚de‡
__∆ök_t_deföed


74 
__∆ök_t
 
	t∆ök_t
;

75 
	#__∆ök_t_deföed


	)

78 #i‚de‡
__uid_t_deföed


79 
__uid_t
 
	tuid_t
;

80 
	#__uid_t_deföed


	)

83 #i‚de‡
__off_t_deföed


84 #i‚de‡
__USE_FILE_OFFSET64


85 
__off_t
 
	toff_t
;

87 
__off64_t
 
	toff_t
;

89 
	#__off_t_deföed


	)

91 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


92 
__off64_t
 
	toff64_t
;

93 
	#__off64_t_deföed


	)

96 #i‚de‡
__pid_t_deföed


97 
__pid_t
 
	tpid_t
;

98 
	#__pid_t_deföed


	)

101 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

102 && !
deföed
 
__id_t_deföed


103 
__id_t
 
	tid_t
;

104 
	#__id_t_deföed


	)

107 #i‚de‡
__ssize_t_deföed


108 
__ssize_t
 
	tssize_t
;

109 
	#__ssize_t_deföed


	)

112 #ifdef 
__USE_MISC


113 #i‚de‡
__daddr_t_deföed


114 
__daddr_t
 
	tdaddr_t
;

115 
__ˇddr_t
 
	tˇddr_t
;

116 
	#__daddr_t_deföed


	)

120 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


121 
__key_t
 
	tkey_t
;

122 
	#__key_t_deföed


	)

125 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


126 
	~<bôs/ty≥s/˛ock_t.h
>

128 
	~<bôs/ty≥s/˛ockid_t.h
>

129 
	~<bôs/ty≥s/time_t.h
>

130 
	~<bôs/ty≥s/timî_t.h
>

132 #ifde‡
__USE_XOPEN


133 #i‚de‡
__u£c⁄ds_t_deföed


134 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

135 
	#__u£c⁄ds_t_deföed


	)

137 #i‚de‡
__su£c⁄ds_t_deföed


138 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

139 
	#__su£c⁄ds_t_deföed


	)

143 
	#__√ed_size_t


	)

144 
	~<°ddef.h
>

146 #ifde‡
__USE_MISC


148 
	tul⁄g
;

149 
	tush‹t
;

150 
	tuöt
;

155 
	~<bôs/°döt-öä.h
>

158 
__uöt8_t
 
	tu_öt8_t
;

159 
__uöt16_t
 
	tu_öt16_t
;

160 
__uöt32_t
 
	tu_öt32_t
;

161 
__uöt64_t
 
	tu_öt64_t
;

163 #i‡
__GNUC_PREREQ
 (2, 7)

164 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

166 
	tªgi°î_t
;

171 
	#__BIT_TYPES_DEFINED__
 1

	)

174 #ifdef 
__USE_MISC


176 
	~<ídün.h
>

179 
	~<sys/£À˘.h
>

183 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

184 && !
deföed
 
__blksize_t_deföed


185 
__blksize_t
 
	tblksize_t
;

186 
	#__blksize_t_deföed


	)

190 #i‚de‡
__USE_FILE_OFFSET64


191 #i‚de‡
__blk˙t_t_deföed


192 
__blk˙t_t
 
	tblk˙t_t
;

193 
	#__blk˙t_t_deföed


	)

195 #i‚de‡
__fsblk˙t_t_deföed


196 
__fsblk˙t_t
 
	tfsblk˙t_t
;

197 
	#__fsblk˙t_t_deföed


	)

199 #i‚de‡
__fsfû˙t_t_deföed


200 
__fsfû˙t_t
 
	tfsfû˙t_t
;

201 
	#__fsfû˙t_t_deföed


	)

204 #i‚de‡
__blk˙t_t_deföed


205 
__blk˙t64_t
 
	tblk˙t_t
;

206 
	#__blk˙t_t_deföed


	)

208 #i‚de‡
__fsblk˙t_t_deföed


209 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

210 
	#__fsblk˙t_t_deföed


	)

212 #i‚de‡
__fsfû˙t_t_deföed


213 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

214 
	#__fsfû˙t_t_deföed


	)

218 #ifde‡
__USE_LARGEFILE64


219 
__blk˙t64_t
 
	tblk˙t64_t
;

220 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

221 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

226 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


227 
	~<bôs/±hªadty≥s.h
>

230 
	g__END_DECLS


	@/usr/include/bits/endian.h

19 #i‚de‡
_BITS_ENDIAN_H


20 
	#_BITS_ENDIAN_H
 1

	)

30 
	#__LITTLE_ENDIAN
 1234

	)

31 
	#__BIG_ENDIAN
 4321

	)

32 
	#__PDP_ENDIAN
 3412

	)

35 
	~<bôs/ídü¬ess.h
>

39 #i‚de‡
__FLOAT_WORD_ORDER


40 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

43 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


44 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

45 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

	@/usr/include/bits/fcntl-linux.h

19 #i‚def 
_FCNTL_H


37 #ifde‡
__USE_GNU


38 
	~<bôs/ty≥s/°ru˘_iovec.h
>

42 
	#O_ACCMODE
 0003

	)

43 
	#O_RDONLY
 00

	)

44 
	#O_WRONLY
 01

	)

45 
	#O_RDWR
 02

	)

46 #i‚de‡
O_CREAT


47 
	#O_CREAT
 0100

	)

49 #i‚de‡
O_EXCL


50 
	#O_EXCL
 0200

	)

52 #i‚de‡
O_NOCTTY


53 
	#O_NOCTTY
 0400

	)

55 #i‚de‡
O_TRUNC


56 
	#O_TRUNC
 01000

	)

58 #i‚de‡
O_APPEND


59 
	#O_APPEND
 02000

	)

61 #i‚de‡
O_NONBLOCK


62 
	#O_NONBLOCK
 04000

	)

64 #i‚de‡
O_NDELAY


65 
	#O_NDELAY
 
O_NONBLOCK


	)

67 #i‚de‡
O_SYNC


68 
	#O_SYNC
 04010000

	)

70 
	#O_FSYNC
 
O_SYNC


	)

71 #i‚de‡
O_ASYNC


72 
	#O_ASYNC
 020000

	)

74 #i‚de‡
__O_LARGEFILE


75 
	#__O_LARGEFILE
 0100000

	)

78 #i‚de‡
__O_DIRECTORY


79 
	#__O_DIRECTORY
 0200000

	)

81 #i‚de‡
__O_NOFOLLOW


82 
	#__O_NOFOLLOW
 0400000

	)

84 #i‚de‡
__O_CLOEXEC


85 
	#__O_CLOEXEC
 02000000

	)

87 #i‚de‡
__O_DIRECT


88 
	#__O_DIRECT
 040000

	)

90 #i‚de‡
__O_NOATIME


91 
	#__O_NOATIME
 01000000

	)

93 #i‚de‡
__O_PATH


94 
	#__O_PATH
 010000000

	)

96 #i‚de‡
__O_DSYNC


97 
	#__O_DSYNC
 010000

	)

99 #i‚de‡
__O_TMPFILE


100 
	#__O_TMPFILE
 (020000000 | 
__O_DIRECTORY
)

	)

103 #i‚de‡
F_GETLK


104 #i‡!
deföed
 
__USE_FILE_OFFSET64
 && 
__TIMESIZE
 != 64

105 
	#F_GETLK
 5

	)

106 
	#F_SETLK
 6

	)

107 
	#F_SETLKW
 7

	)

109 
	#F_GETLK
 
F_GETLK64


	)

110 
	#F_SETLK
 
F_SETLK64


	)

111 
	#F_SETLKW
 
F_SETLKW64


	)

114 #i‚de‡
F_GETLK64


115 
	#F_GETLK64
 12

	)

116 
	#F_SETLK64
 13

	)

117 
	#F_SETLKW64
 14

	)

131 #ifde‡
__USE_GNU


132 
	#F_OFD_GETLK
 36

	)

133 
	#F_OFD_SETLK
 37

	)

134 
	#F_OFD_SETLKW
 38

	)

137 #ifde‡
__USE_LARGEFILE64


138 
	#O_LARGEFILE
 
__O_LARGEFILE


	)

141 #ifde‡
__USE_XOPEN2K8


142 
	#O_DIRECTORY
 
__O_DIRECTORY


	)

143 
	#O_NOFOLLOW
 
__O_NOFOLLOW


	)

144 
	#O_CLOEXEC
 
__O_CLOEXEC


	)

147 #ifde‡
__USE_GNU


148 
	#O_DIRECT
 
__O_DIRECT


	)

149 
	#O_NOATIME
 
__O_NOATIME


	)

150 
	#O_PATH
 
__O_PATH


	)

151 
	#O_TMPFILE
 
__O_TMPFILE


	)

157 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


158 
	#O_DSYNC
 
__O_DSYNC


	)

159 #i‡
deföed
 
__O_RSYNC


160 
	#O_RSYNC
 
__O_RSYNC


	)

162 
	#O_RSYNC
 
O_SYNC


	)

167 
	#F_DUPFD
 0

	)

168 
	#F_GETFD
 1

	)

169 
	#F_SETFD
 2

	)

170 
	#F_GETFL
 3

	)

171 
	#F_SETFL
 4

	)

173 #i‚de‡
__F_SETOWN


174 
	#__F_SETOWN
 8

	)

175 
	#__F_GETOWN
 9

	)

178 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


179 
	#F_SETOWN
 
__F_SETOWN


	)

180 
	#F_GETOWN
 
__F_GETOWN


	)

183 #i‚de‡
__F_SETSIG


184 
	#__F_SETSIG
 10

	)

185 
	#__F_GETSIG
 11

	)

187 #i‚de‡
__F_SETOWN_EX


188 
	#__F_SETOWN_EX
 15

	)

189 
	#__F_GETOWN_EX
 16

	)

192 #ifde‡
__USE_GNU


193 
	#F_SETSIG
 
__F_SETSIG


	)

194 
	#F_GETSIG
 
__F_GETSIG


	)

195 
	#F_SETOWN_EX
 
__F_SETOWN_EX


	)

196 
	#F_GETOWN_EX
 
__F_GETOWN_EX


	)

199 #ifde‡
__USE_GNU


200 
	#F_SETLEASE
 1024

	)

201 
	#F_GETLEASE
 1025

	)

202 
	#F_NOTIFY
 1026

	)

203 
	#F_SETPIPE_SZ
 1031

	)

204 
	#F_GETPIPE_SZ
 1032

	)

205 
	#F_ADD_SEALS
 1033

	)

206 
	#F_GET_SEALS
 1034

	)

208 
	#F_GET_RW_HINT
 1035

	)

209 
	#F_SET_RW_HINT
 1036

	)

210 
	#F_GET_FILE_RW_HINT
 1037

	)

211 
	#F_SET_FILE_RW_HINT
 1038

	)

213 #ifde‡
__USE_XOPEN2K8


214 
	#F_DUPFD_CLOEXEC
 1030

	)

219 
	#FD_CLOEXEC
 1

	)

221 #i‚de‡
F_RDLCK


223 
	#F_RDLCK
 0

	)

224 
	#F_WRLCK
 1

	)

225 
	#F_UNLCK
 2

	)

230 #i‚de‡
F_EXLCK


231 
	#F_EXLCK
 4

	)

232 
	#F_SHLCK
 8

	)

235 #ifde‡
__USE_MISC


237 
	#LOCK_SH
 1

	)

238 
	#LOCK_EX
 2

	)

239 
	#LOCK_NB
 4

	)

241 
	#LOCK_UN
 8

	)

244 #ifde‡
__USE_GNU


245 
	#LOCK_MAND
 32

	)

246 
	#LOCK_READ
 64

	)

247 
	#LOCK_WRITE
 128

	)

248 
	#LOCK_RW
 192

	)

251 #ifde‡
__USE_GNU


253 
	#DN_ACCESS
 0x00000001

	)

254 
	#DN_MODIFY
 0x00000002

	)

255 
	#DN_CREATE
 0x00000004

	)

256 
	#DN_DELETE
 0x00000008

	)

257 
	#DN_RENAME
 0x00000010

	)

258 
	#DN_ATTRIB
 0x00000020

	)

259 
	#DN_MULTISHOT
 0x80000000

	)

263 #ifde‡
__USE_GNU


265 
	e__pid_ty≥


267 
	mF_OWNER_TID
 = 0,

268 
	mF_OWNER_PID
,

269 
	mF_OWNER_PGRP
,

270 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


274 
	sf_ow√r_ex


276 
__pid_ty≥
 
	mty≥
;

277 
__pid_t
 
	mpid
;

281 #ifde‡
__USE_GNU


283 
	#F_SEAL_SEAL
 0x0001

	)

284 
	#F_SEAL_SHRINK
 0x0002

	)

285 
	#F_SEAL_GROW
 0x0004

	)

286 
	#F_SEAL_WRITE
 0x0008

	)

287 
	#F_SEAL_FUTURE_WRITE
 0x0010

	)

289 
	#F_SEAL_EXEC
 0x0020

	)

292 #ifde‡
__USE_GNU


294 
	#RWH_WRITE_LIFE_NOT_SET
 0

	)

295 
	#RWF_WRITE_LIFE_NOT_SET
 
RWH_WRITE_LIFE_NOT_SET


	)

296 
	#RWH_WRITE_LIFE_NONE
 1

	)

297 
	#RWH_WRITE_LIFE_SHORT
 2

	)

298 
	#RWH_WRITE_LIFE_MEDIUM
 3

	)

299 
	#RWH_WRITE_LIFE_LONG
 4

	)

300 
	#RWH_WRITE_LIFE_EXTREME
 5

	)

305 #ifdef 
__USE_MISC


306 
	#FAPPEND
 
O_APPEND


	)

307 
	#FFSYNC
 
O_FSYNC


	)

308 
	#FASYNC
 
O_ASYNC


	)

309 
	#FNONBLOCK
 
O_NONBLOCK


	)

310 
	#FNDELAY
 
O_NDELAY


	)

313 #i‚de‡
__POSIX_FADV_DONTNEED


314 
	#__POSIX_FADV_DONTNEED
 4

	)

315 
	#__POSIX_FADV_NOREUSE
 5

	)

318 #ifde‡
__USE_XOPEN2K


319 
	#POSIX_FADV_NORMAL
 0

	)

320 
	#POSIX_FADV_RANDOM
 1

	)

321 
	#POSIX_FADV_SEQUENTIAL
 2

	)

322 
	#POSIX_FADV_WILLNEED
 3

	)

323 
	#POSIX_FADV_DONTNEED
 
__POSIX_FADV_DONTNEED


	)

324 
	#POSIX_FADV_NOREUSE
 
__POSIX_FADV_NOREUSE


	)

328 #ifde‡
__USE_GNU


330 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

333 
	#SYNC_FILE_RANGE_WRITE
 2

	)

336 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

341 
	#SYNC_FILE_RANGE_WRITE_AND_WAIT
 (
SYNC_FILE_RANGE_WRITE
 \

342 | 
SYNC_FILE_RANGE_WAIT_BEFORE
 \

343 | 
SYNC_FILE_RANGE_WAIT_AFTER
)

	)

346 
	#SPLICE_F_MOVE
 1

	)

347 
	#SPLICE_F_NONBLOCK
 2

	)

350 
	#SPLICE_F_MORE
 4

	)

351 
	#SPLICE_F_GIFT
 8

	)

355 
	~<löux/ÁŒoc.h
>

359 
	sfûe_h™dÀ


361 
	mh™dÀ_byãs
;

362 
	mh™dÀ_ty≥
;

364 
	mf_h™dÀ
[0];

368 
	#MAX_HANDLE_SZ
 128

	)

371 #ifde‡
__USE_GNU


375 
	#AT_HANDLE_FID
 
AT_REMOVEDIR


	)

382 
	g__BEGIN_DECLS


384 #ifde‡
__USE_GNU


387 
__ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

388 
__THROW
;

395 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

396 
__Êags
);

403 
__ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

404 
size_t
 
__cou¡
, 
__Êags
);

410 
__ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

411 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

412 
__Êags
);

418 
__ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

419 
__Êags
);

425 #i‚de‡
__USE_FILE_OFFSET64


426 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

428 #ifde‡
__REDIRECT


429 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

430 
__off64_t
 
__Àn
),

431 
ÁŒoˇã64
);

433 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

436 #ifde‡
__USE_LARGEFILE64


437 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

438 
__off64_t
 
__Àn
);

443 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

444 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

445 
__Êags
Ë
__THROW
;

451 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

452 
__Êags
);

456 
__END_DECLS


	@/usr/include/bits/floatn-common.h

20 #i‚de‡
_BITS_FLOATN_COMMON_H


21 
	#_BITS_FLOATN_COMMON_H


	)

23 
	~<„©uªs.h
>

24 
	~<bôs/l⁄g-doubÀ.h
>

34 
	#__HAVE_FLOAT16
 0

	)

35 
	#__HAVE_FLOAT32
 1

	)

36 
	#__HAVE_FLOAT64
 1

	)

37 
	#__HAVE_FLOAT32X
 1

	)

38 
	#__HAVE_FLOAT128X
 0

	)

52 
	#__HAVE_DISTINCT_FLOAT16
 
__HAVE_FLOAT16


	)

53 
	#__HAVE_DISTINCT_FLOAT32
 0

	)

54 
	#__HAVE_DISTINCT_FLOAT64
 0

	)

55 
	#__HAVE_DISTINCT_FLOAT32X
 0

	)

56 
	#__HAVE_DISTINCT_FLOAT64X
 0

	)

57 
	#__HAVE_DISTINCT_FLOAT128X
 
__HAVE_FLOAT128X


	)

63 
	#__HAVE_FLOAT128_UNLIKE_LDBL
 (
__HAVE_DISTINCT_FLOAT128
 \

64 && 
__LDBL_MANT_DIG__
 !113)

	)

69 #i‡
__GNUC_PREREQ
 (7, 0Ë&& !
deföed
 
__˝lu•lus


70 
	#__HAVE_FLOATN_NOT_TYPEDEF
 1

	)

72 
	#__HAVE_FLOATN_NOT_TYPEDEF
 0

	)

75 #i‚de‡
__ASSEMBLER__


80 #i‡
__HAVE_FLOAT16


81 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

83 
	#__f16
(
x
Ë((
_Flﬂt16
Ëx##
f
)

	)

85 
	#__f16
(
x
Ëx##
f16


	)

89 #i‡
__HAVE_FLOAT32


90 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

91 
	#__f32
(
x
Ëx##
f


	)

93 
	#__f32
(
x
Ëx##
f32


	)

97 #i‡
__HAVE_FLOAT64


98 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

99 #ifde‡
__NO_LONG_DOUBLE_MATH


100 
	#__f64
(
x
Ëx##
l


	)

102 
	#__f64
(
x
Ë
	)
x

105 
	#__f64
(
x
Ëx##
f64


	)

109 #i‡
__HAVE_FLOAT32X


110 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

111 
	#__f32x
(
x
Ë
	)
x

113 
	#__f32x
(
x
Ëx##
f32x


	)

117 #i‡
__HAVE_FLOAT64X


118 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

119 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


120 
	#__f64x
(
x
Ëx##
l


	)

122 
	#__f64x
(
x
Ë
	`__f128
 (x)

	)

125 
	#__f64x
(
x
Ëx##
f64x


	)

129 #i‡
__HAVE_FLOAT128X


130 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

133 
	#__f128x
(
x
Ëx##
f128x


	)

138 #i‡
__HAVE_FLOAT16


139 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

140 
_Com∂ex
 
	t__cÊﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HC__
)));

141 
	#__CFLOAT16
 
__cÊﬂt16


	)

143 
	#__CFLOAT16
 
_Com∂ex
 
_Flﬂt16


	)

147 #i‡
__HAVE_FLOAT32


148 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

149 
	#__CFLOAT32
 
_Com∂ex
 

	)

151 
	#__CFLOAT32
 
_Com∂ex
 
_Flﬂt32


	)

155 #i‡
__HAVE_FLOAT64


156 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

157 #ifde‡
__NO_LONG_DOUBLE_MATH


158 
	#__CFLOAT64
 
_Com∂ex
 

	)

160 
	#__CFLOAT64
 
_Com∂ex
 

	)

163 
	#__CFLOAT64
 
_Com∂ex
 
_Flﬂt64


	)

167 #i‡
__HAVE_FLOAT32X


168 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

169 
	#__CFLOAT32X
 
_Com∂ex
 

	)

171 
	#__CFLOAT32X
 
_Com∂ex
 
_Flﬂt32x


	)

175 #i‡
__HAVE_FLOAT64X


176 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

177 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


178 
	#__CFLOAT64X
 
_Com∂ex
 

	)

180 
	#__CFLOAT64X
 
__CFLOAT128


	)

183 
	#__CFLOAT64X
 
_Com∂ex
 
_Flﬂt64x


	)

187 #i‡
__HAVE_FLOAT128X


188 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

191 
	#__CFLOAT128X
 
_Com∂ex
 
_Flﬂt128x


	)

196 #i‡
__HAVE_FLOAT16


198 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

199 
	t_Flﬂt16
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HF__
)));

202 #i‡!
__GNUC_PREREQ
 (7, 0)

203 
	#__buûtö_huge_vÆf16
(Ë((
_Flﬂt16
Ë
	`__buûtö_huge_vÆ
 ())

	)

204 
	#__buûtö_öff16
(Ë((
_Flﬂt16
Ë
	`__buûtö_öf
 ())

	)

205 
	#__buûtö_«nf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«n
 (x))

	)

206 
	#__buûtö_«nsf16
(
x
Ë((
_Flﬂt16
Ë
	`__buûtö_«ns
 (x))

	)

211 #i‡
__HAVE_FLOAT32


213 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

214 
	t_Flﬂt32
;

217 #i‡!
__GNUC_PREREQ
 (7, 0)

218 
	#__buûtö_huge_vÆf32
(Ë(
	`__buûtö_huge_vÆf
 ())

	)

219 
	#__buûtö_öff32
(Ë(
	`__buûtö_öff
 ())

	)

220 
	#__buûtö_«nf32
(
x
Ë(
	`__buûtö_«nf
 (x))

	)

221 
	#__buûtö_«nsf32
(
x
Ë(
	`__buûtö_«nsf
 (x))

	)

226 #i‡
__HAVE_FLOAT64


235 #ifde‡
__NO_LONG_DOUBLE_MATH


237 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

238 
	t_Flﬂt64
;

241 #i‡!
__GNUC_PREREQ
 (7, 0)

242 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

243 
	#__buûtö_öff64
(Ë(
	`__buûtö_öÊ
 ())

	)

244 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

245 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

250 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

251 
	t_Flﬂt64
;

254 #i‡!
__GNUC_PREREQ
 (7, 0)

255 
	#__buûtö_huge_vÆf64
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

256 
	#__buûtö_öff64
(Ë(
	`__buûtö_öf
 ())

	)

257 
	#__buûtö_«nf64
(
x
Ë(
	`__buûtö_«n
 (x))

	)

258 
	#__buûtö_«nsf64
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

265 #i‡
__HAVE_FLOAT32X


267 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

268 
	t_Flﬂt32x
;

271 #i‡!
__GNUC_PREREQ
 (7, 0)

272 
	#__buûtö_huge_vÆf32x
(Ë(
	`__buûtö_huge_vÆ
 ())

	)

273 
	#__buûtö_öff32x
(Ë(
	`__buûtö_öf
 ())

	)

274 
	#__buûtö_«nf32x
(
x
Ë(
	`__buûtö_«n
 (x))

	)

275 
	#__buûtö_«nsf32x
(
x
Ë(
	`__buûtö_«ns
 (x))

	)

280 #i‡
__HAVE_FLOAT64X


282 #i‡
__HAVE_FLOAT64X_LONG_DOUBLE


284 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

285 
	t_Flﬂt64x
;

288 #i‡!
__GNUC_PREREQ
 (7, 0)

289 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆl
 ())

	)

290 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öÊ
 ())

	)

291 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«∆
 (x))

	)

292 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«n¶
 (x))

	)

297 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

298 
_Flﬂt128
 
	t_Flﬂt64x
;

301 #i‡!
__GNUC_PREREQ
 (7, 0)

302 
	#__buûtö_huge_vÆf64x
(Ë(
	`__buûtö_huge_vÆf128
 ())

	)

303 
	#__buûtö_öff64x
(Ë(
	`__buûtö_öff128
 ())

	)

304 
	#__buûtö_«nf64x
(
x
Ë(
	`__buûtö_«nf128
 (x))

	)

305 
	#__buûtö_«nsf64x
(
x
Ë(
	`__buûtö_«nsf128
 (x))

	)

312 #i‡
__HAVE_FLOAT128X


314 #i‡!
__GNUC_PREREQ
 (7, 0Ë|| (
deföed
 
__˝lu•lus
 && !__GNUC_PREREQ (13, 0))

318 #i‡!
__GNUC_PREREQ
 (7, 0)

319 
	#__buûtö_huge_vÆf128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_huge_vÆ
 ())

	)

320 
	#__buûtö_öff128x
(Ë((
_Flﬂt128x
Ë
	`__buûtö_öf
 ())

	)

321 
	#__buûtö_«nf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«n
 (x))

	)

322 
	#__buûtö_«nsf128x
(
x
Ë((
_Flﬂt128x
Ë
	`__buûtö_«ns
 (x))

	)

	@/usr/include/bits/getopt_core.h

20 #i‚de‡
_GETOPT_CORE_H


21 
	#_GETOPT_CORE_H
 1

	)

28 
__BEGIN_DECLS


36 *
›èrg
;

50 
›töd
;

55 
›ãº
;

59 
›t›t
;

91 
	$gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

92 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

94 
__END_DECLS


	@/usr/include/bits/libm-simd-decl-stubs.h

19 #i‚de‡
_MATH_H


33 #i‚de‡
_BITS_LIBM_SIMD_DECL_STUBS_H


34 
	#_BITS_LIBM_SIMD_DECL_STUBS_H
 1

	)

36 
	#__DECL_SIMD_cos


	)

37 
	#__DECL_SIMD_cosf


	)

38 
	#__DECL_SIMD_co¶


	)

39 
	#__DECL_SIMD_cosf16


	)

40 
	#__DECL_SIMD_cosf32


	)

41 
	#__DECL_SIMD_cosf64


	)

42 
	#__DECL_SIMD_cosf128


	)

43 
	#__DECL_SIMD_cosf32x


	)

44 
	#__DECL_SIMD_cosf64x


	)

45 
	#__DECL_SIMD_cosf128x


	)

47 
	#__DECL_SIMD_sö


	)

48 
	#__DECL_SIMD_söf


	)

49 
	#__DECL_SIMD_söl


	)

50 
	#__DECL_SIMD_söf16


	)

51 
	#__DECL_SIMD_söf32


	)

52 
	#__DECL_SIMD_söf64


	)

53 
	#__DECL_SIMD_söf128


	)

54 
	#__DECL_SIMD_söf32x


	)

55 
	#__DECL_SIMD_söf64x


	)

56 
	#__DECL_SIMD_söf128x


	)

58 
	#__DECL_SIMD_söcos


	)

59 
	#__DECL_SIMD_söcosf


	)

60 
	#__DECL_SIMD_söco¶


	)

61 
	#__DECL_SIMD_söcosf16


	)

62 
	#__DECL_SIMD_söcosf32


	)

63 
	#__DECL_SIMD_söcosf64


	)

64 
	#__DECL_SIMD_söcosf128


	)

65 
	#__DECL_SIMD_söcosf32x


	)

66 
	#__DECL_SIMD_söcosf64x


	)

67 
	#__DECL_SIMD_söcosf128x


	)

69 
	#__DECL_SIMD_log


	)

70 
	#__DECL_SIMD_logf


	)

71 
	#__DECL_SIMD_logl


	)

72 
	#__DECL_SIMD_logf16


	)

73 
	#__DECL_SIMD_logf32


	)

74 
	#__DECL_SIMD_logf64


	)

75 
	#__DECL_SIMD_logf128


	)

76 
	#__DECL_SIMD_logf32x


	)

77 
	#__DECL_SIMD_logf64x


	)

78 
	#__DECL_SIMD_logf128x


	)

80 
	#__DECL_SIMD_exp


	)

81 
	#__DECL_SIMD_expf


	)

82 
	#__DECL_SIMD_ex∂


	)

83 
	#__DECL_SIMD_expf16


	)

84 
	#__DECL_SIMD_expf32


	)

85 
	#__DECL_SIMD_expf64


	)

86 
	#__DECL_SIMD_expf128


	)

87 
	#__DECL_SIMD_expf32x


	)

88 
	#__DECL_SIMD_expf64x


	)

89 
	#__DECL_SIMD_expf128x


	)

91 
	#__DECL_SIMD_pow


	)

92 
	#__DECL_SIMD_powf


	)

93 
	#__DECL_SIMD_powl


	)

94 
	#__DECL_SIMD_powf16


	)

95 
	#__DECL_SIMD_powf32


	)

96 
	#__DECL_SIMD_powf64


	)

97 
	#__DECL_SIMD_powf128


	)

98 
	#__DECL_SIMD_powf32x


	)

99 
	#__DECL_SIMD_powf64x


	)

100 
	#__DECL_SIMD_powf128x


	)

102 
	#__DECL_SIMD_acos


	)

103 
	#__DECL_SIMD_acosf


	)

104 
	#__DECL_SIMD_aco¶


	)

105 
	#__DECL_SIMD_acosf16


	)

106 
	#__DECL_SIMD_acosf32


	)

107 
	#__DECL_SIMD_acosf64


	)

108 
	#__DECL_SIMD_acosf128


	)

109 
	#__DECL_SIMD_acosf32x


	)

110 
	#__DECL_SIMD_acosf64x


	)

111 
	#__DECL_SIMD_acosf128x


	)

113 
	#__DECL_SIMD_©™


	)

114 
	#__DECL_SIMD_©™f


	)

115 
	#__DECL_SIMD_©™l


	)

116 
	#__DECL_SIMD_©™f16


	)

117 
	#__DECL_SIMD_©™f32


	)

118 
	#__DECL_SIMD_©™f64


	)

119 
	#__DECL_SIMD_©™f128


	)

120 
	#__DECL_SIMD_©™f32x


	)

121 
	#__DECL_SIMD_©™f64x


	)

122 
	#__DECL_SIMD_©™f128x


	)

124 
	#__DECL_SIMD_asö


	)

125 
	#__DECL_SIMD_asöf


	)

126 
	#__DECL_SIMD_asöl


	)

127 
	#__DECL_SIMD_asöf16


	)

128 
	#__DECL_SIMD_asöf32


	)

129 
	#__DECL_SIMD_asöf64


	)

130 
	#__DECL_SIMD_asöf128


	)

131 
	#__DECL_SIMD_asöf32x


	)

132 
	#__DECL_SIMD_asöf64x


	)

133 
	#__DECL_SIMD_asöf128x


	)

135 
	#__DECL_SIMD_hypŸ


	)

136 
	#__DECL_SIMD_hypŸf


	)

137 
	#__DECL_SIMD_hypŸl


	)

138 
	#__DECL_SIMD_hypŸf16


	)

139 
	#__DECL_SIMD_hypŸf32


	)

140 
	#__DECL_SIMD_hypŸf64


	)

141 
	#__DECL_SIMD_hypŸf128


	)

142 
	#__DECL_SIMD_hypŸf32x


	)

143 
	#__DECL_SIMD_hypŸf64x


	)

144 
	#__DECL_SIMD_hypŸf128x


	)

146 
	#__DECL_SIMD_exp2


	)

147 
	#__DECL_SIMD_exp2f


	)

148 
	#__DECL_SIMD_exp2l


	)

149 
	#__DECL_SIMD_exp2f16


	)

150 
	#__DECL_SIMD_exp2f32


	)

151 
	#__DECL_SIMD_exp2f64


	)

152 
	#__DECL_SIMD_exp2f128


	)

153 
	#__DECL_SIMD_exp2f32x


	)

154 
	#__DECL_SIMD_exp2f64x


	)

155 
	#__DECL_SIMD_exp2f128x


	)

157 
	#__DECL_SIMD_exp10


	)

158 
	#__DECL_SIMD_exp10f


	)

159 
	#__DECL_SIMD_exp10l


	)

160 
	#__DECL_SIMD_exp10f16


	)

161 
	#__DECL_SIMD_exp10f32


	)

162 
	#__DECL_SIMD_exp10f64


	)

163 
	#__DECL_SIMD_exp10f128


	)

164 
	#__DECL_SIMD_exp10f32x


	)

165 
	#__DECL_SIMD_exp10f64x


	)

166 
	#__DECL_SIMD_exp10f128x


	)

168 
	#__DECL_SIMD_cosh


	)

169 
	#__DECL_SIMD_coshf


	)

170 
	#__DECL_SIMD_coshl


	)

171 
	#__DECL_SIMD_coshf16


	)

172 
	#__DECL_SIMD_coshf32


	)

173 
	#__DECL_SIMD_coshf64


	)

174 
	#__DECL_SIMD_coshf128


	)

175 
	#__DECL_SIMD_coshf32x


	)

176 
	#__DECL_SIMD_coshf64x


	)

177 
	#__DECL_SIMD_coshf128x


	)

179 
	#__DECL_SIMD_expm1


	)

180 
	#__DECL_SIMD_expm1f


	)

181 
	#__DECL_SIMD_expm1l


	)

182 
	#__DECL_SIMD_expm1f16


	)

183 
	#__DECL_SIMD_expm1f32


	)

184 
	#__DECL_SIMD_expm1f64


	)

185 
	#__DECL_SIMD_expm1f128


	)

186 
	#__DECL_SIMD_expm1f32x


	)

187 
	#__DECL_SIMD_expm1f64x


	)

188 
	#__DECL_SIMD_expm1f128x


	)

190 
	#__DECL_SIMD_söh


	)

191 
	#__DECL_SIMD_söhf


	)

192 
	#__DECL_SIMD_söhl


	)

193 
	#__DECL_SIMD_söhf16


	)

194 
	#__DECL_SIMD_söhf32


	)

195 
	#__DECL_SIMD_söhf64


	)

196 
	#__DECL_SIMD_söhf128


	)

197 
	#__DECL_SIMD_söhf32x


	)

198 
	#__DECL_SIMD_söhf64x


	)

199 
	#__DECL_SIMD_söhf128x


	)

201 
	#__DECL_SIMD_cbπ


	)

202 
	#__DECL_SIMD_cbπf


	)

203 
	#__DECL_SIMD_cbπl


	)

204 
	#__DECL_SIMD_cbπf16


	)

205 
	#__DECL_SIMD_cbπf32


	)

206 
	#__DECL_SIMD_cbπf64


	)

207 
	#__DECL_SIMD_cbπf128


	)

208 
	#__DECL_SIMD_cbπf32x


	)

209 
	#__DECL_SIMD_cbπf64x


	)

210 
	#__DECL_SIMD_cbπf128x


	)

212 
	#__DECL_SIMD_©™2


	)

213 
	#__DECL_SIMD_©™2f


	)

214 
	#__DECL_SIMD_©™2l


	)

215 
	#__DECL_SIMD_©™2f16


	)

216 
	#__DECL_SIMD_©™2f32


	)

217 
	#__DECL_SIMD_©™2f64


	)

218 
	#__DECL_SIMD_©™2f128


	)

219 
	#__DECL_SIMD_©™2f32x


	)

220 
	#__DECL_SIMD_©™2f64x


	)

221 
	#__DECL_SIMD_©™2f128x


	)

223 
	#__DECL_SIMD_log10


	)

224 
	#__DECL_SIMD_log10f


	)

225 
	#__DECL_SIMD_log10l


	)

226 
	#__DECL_SIMD_log10f16


	)

227 
	#__DECL_SIMD_log10f32


	)

228 
	#__DECL_SIMD_log10f64


	)

229 
	#__DECL_SIMD_log10f128


	)

230 
	#__DECL_SIMD_log10f32x


	)

231 
	#__DECL_SIMD_log10f64x


	)

232 
	#__DECL_SIMD_log10f128x


	)

234 
	#__DECL_SIMD_log2


	)

235 
	#__DECL_SIMD_log2f


	)

236 
	#__DECL_SIMD_log2l


	)

237 
	#__DECL_SIMD_log2f16


	)

238 
	#__DECL_SIMD_log2f32


	)

239 
	#__DECL_SIMD_log2f64


	)

240 
	#__DECL_SIMD_log2f128


	)

241 
	#__DECL_SIMD_log2f32x


	)

242 
	#__DECL_SIMD_log2f64x


	)

243 
	#__DECL_SIMD_log2f128x


	)

245 
	#__DECL_SIMD_log1p


	)

246 
	#__DECL_SIMD_log1pf


	)

247 
	#__DECL_SIMD_log1∂


	)

248 
	#__DECL_SIMD_log1pf16


	)

249 
	#__DECL_SIMD_log1pf32


	)

250 
	#__DECL_SIMD_log1pf64


	)

251 
	#__DECL_SIMD_log1pf128


	)

252 
	#__DECL_SIMD_log1pf32x


	)

253 
	#__DECL_SIMD_log1pf64x


	)

254 
	#__DECL_SIMD_log1pf128x


	)

256 
	#__DECL_SIMD_©™h


	)

257 
	#__DECL_SIMD_©™hf


	)

258 
	#__DECL_SIMD_©™hl


	)

259 
	#__DECL_SIMD_©™hf16


	)

260 
	#__DECL_SIMD_©™hf32


	)

261 
	#__DECL_SIMD_©™hf64


	)

262 
	#__DECL_SIMD_©™hf128


	)

263 
	#__DECL_SIMD_©™hf32x


	)

264 
	#__DECL_SIMD_©™hf64x


	)

265 
	#__DECL_SIMD_©™hf128x


	)

267 
	#__DECL_SIMD_acosh


	)

268 
	#__DECL_SIMD_acoshf


	)

269 
	#__DECL_SIMD_acoshl


	)

270 
	#__DECL_SIMD_acoshf16


	)

271 
	#__DECL_SIMD_acoshf32


	)

272 
	#__DECL_SIMD_acoshf64


	)

273 
	#__DECL_SIMD_acoshf128


	)

274 
	#__DECL_SIMD_acoshf32x


	)

275 
	#__DECL_SIMD_acoshf64x


	)

276 
	#__DECL_SIMD_acoshf128x


	)

278 
	#__DECL_SIMD_îf


	)

279 
	#__DECL_SIMD_îff


	)

280 
	#__DECL_SIMD_îÊ


	)

281 
	#__DECL_SIMD_îff16


	)

282 
	#__DECL_SIMD_îff32


	)

283 
	#__DECL_SIMD_îff64


	)

284 
	#__DECL_SIMD_îff128


	)

285 
	#__DECL_SIMD_îff32x


	)

286 
	#__DECL_SIMD_îff64x


	)

287 
	#__DECL_SIMD_îff128x


	)

289 
	#__DECL_SIMD_ènh


	)

290 
	#__DECL_SIMD_ènhf


	)

291 
	#__DECL_SIMD_ènhl


	)

292 
	#__DECL_SIMD_ènhf16


	)

293 
	#__DECL_SIMD_ènhf32


	)

294 
	#__DECL_SIMD_ènhf64


	)

295 
	#__DECL_SIMD_ènhf128


	)

296 
	#__DECL_SIMD_ènhf32x


	)

297 
	#__DECL_SIMD_ènhf64x


	)

298 
	#__DECL_SIMD_ènhf128x


	)

300 
	#__DECL_SIMD_asöh


	)

301 
	#__DECL_SIMD_asöhf


	)

302 
	#__DECL_SIMD_asöhl


	)

303 
	#__DECL_SIMD_asöhf16


	)

304 
	#__DECL_SIMD_asöhf32


	)

305 
	#__DECL_SIMD_asöhf64


	)

306 
	#__DECL_SIMD_asöhf128


	)

307 
	#__DECL_SIMD_asöhf32x


	)

308 
	#__DECL_SIMD_asöhf64x


	)

309 
	#__DECL_SIMD_asöhf128x


	)

311 
	#__DECL_SIMD_îfc


	)

312 
	#__DECL_SIMD_îfcf


	)

313 
	#__DECL_SIMD_îf˛


	)

314 
	#__DECL_SIMD_îfcf16


	)

315 
	#__DECL_SIMD_îfcf32


	)

316 
	#__DECL_SIMD_îfcf64


	)

317 
	#__DECL_SIMD_îfcf128


	)

318 
	#__DECL_SIMD_îfcf32x


	)

319 
	#__DECL_SIMD_îfcf64x


	)

320 
	#__DECL_SIMD_îfcf128x


	)

322 
	#__DECL_SIMD_èn


	)

323 
	#__DECL_SIMD_ènf


	)

324 
	#__DECL_SIMD_è∆


	)

325 
	#__DECL_SIMD_ènf16


	)

326 
	#__DECL_SIMD_ènf32


	)

327 
	#__DECL_SIMD_ènf64


	)

328 
	#__DECL_SIMD_ènf128


	)

329 
	#__DECL_SIMD_ènf32x


	)

330 
	#__DECL_SIMD_ènf64x


	)

331 
	#__DECL_SIMD_ènf128x


	)

	@/usr/include/bits/local_lim.h

24 #i‚de‡
NR_OPEN


25 
	#__undef_NR_OPEN


	)

27 #i‚de‡
LINK_MAX


28 
	#__undef_LINK_MAX


	)

30 #i‚de‡
OPEN_MAX


31 
	#__undef_OPEN_MAX


	)

33 #i‚de‡
ARG_MAX


34 
	#__undef_ARG_MAX


	)

38 
	~<löux/limôs.h
>

41 #ifde‡
__undef_NR_OPEN


42 #unde‡
NR_OPEN


43 #unde‡
__undef_NR_OPEN


46 #ifde‡
__undef_LINK_MAX


47 #unde‡
LINK_MAX


48 #unde‡
__undef_LINK_MAX


51 #ifde‡
__undef_OPEN_MAX


52 #unde‡
OPEN_MAX


53 #unde‡
__undef_OPEN_MAX


56 #ifde‡
__undef_ARG_MAX


57 #unde‡
ARG_MAX


58 #unde‡
__undef_ARG_MAX


62 
	#_POSIX_THREAD_KEYS_MAX
 128

	)

64 
	#PTHREAD_KEYS_MAX
 1024

	)

67 
	#_POSIX_THREAD_DESTRUCTOR_ITERATIONS
 4

	)

69 
	#PTHREAD_DESTRUCTOR_ITERATIONS
 
_POSIX_THREAD_DESTRUCTOR_ITERATIONS


	)

72 
	#_POSIX_THREAD_THREADS_MAX
 64

	)

74 #unde‡
PTHREAD_THREADS_MAX


78 
	#AIO_PRIO_DELTA_MAX
 20

	)

81 
	~<bôs/±hªad_°ack_mö-dy«mic.h
>

84 
	#DELAYTIMER_MAX
 2147483647

	)

87 
	#TTY_NAME_MAX
 32

	)

90 
	#LOGIN_NAME_MAX
 256

	)

93 
	#HOST_NAME_MAX
 64

	)

96 
	#MQ_PRIO_MAX
 32768

	)

99 
	#SEM_VALUE_MAX
 (2147483647)

	)

	@/usr/include/bits/mman-linux.h

19 #i‚de‡
_SYS_MMAN_H


32 
	#PROT_READ
 0x1

	)

33 
	#PROT_WRITE
 0x2

	)

34 
	#PROT_EXEC
 0x4

	)

35 
	#PROT_NONE
 0x0

	)

36 
	#PROT_GROWSDOWN
 0x01000000

	)

38 
	#PROT_GROWSUP
 0x02000000

	)

42 
	#MAP_SHARED
 0x01

	)

43 
	#MAP_PRIVATE
 0x02

	)

44 
	#MAP_SHARED_VALIDATE
 0x03

	)

46 
	#MAP_TYPE
 0x0‡

	)

49 
	#MAP_FIXED
 0x10

	)

50 
	#MAP_FILE
 0

	)

51 #ifde‡
__MAP_ANONYMOUS


52 
	#MAP_ANONYMOUS
 
__MAP_ANONYMOUS


	)

54 
	#MAP_ANONYMOUS
 0x20

	)

56 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

58 
	#MAP_HUGE_SHIFT
 26

	)

59 
	#MAP_HUGE_MASK
 0x3f

	)

62 
	#MS_ASYNC
 1

	)

63 
	#MS_SYNC
 4

	)

64 
	#MS_INVALIDATE
 2

	)

67 #ifde‡
__USE_MISC


68 
	#MADV_NORMAL
 0

	)

69 
	#MADV_RANDOM
 1

	)

70 
	#MADV_SEQUENTIAL
 2

	)

71 
	#MADV_WILLNEED
 3

	)

72 
	#MADV_DONTNEED
 4

	)

73 
	#MADV_FREE
 8

	)

74 
	#MADV_REMOVE
 9

	)

75 
	#MADV_DONTFORK
 10

	)

76 
	#MADV_DOFORK
 11

	)

77 
	#MADV_MERGEABLE
 12

	)

78 
	#MADV_UNMERGEABLE
 13

	)

79 
	#MADV_HUGEPAGE
 14

	)

80 
	#MADV_NOHUGEPAGE
 15

	)

81 
	#MADV_DONTDUMP
 16

	)

83 
	#MADV_DODUMP
 17

	)

84 
	#MADV_WIPEONFORK
 18

	)

85 
	#MADV_KEEPONFORK
 19

	)

86 
	#MADV_COLD
 20

	)

87 
	#MADV_PAGEOUT
 21

	)

88 
	#MADV_POPULATE_READ
 22

	)

90 
	#MADV_POPULATE_WRITE
 23

	)

92 
	#MADV_DONTNEED_LOCKED
 24

	)

94 
	#MADV_COLLAPSE
 25

	)

95 
	#MADV_HWPOISON
 100

	)

99 #ifde‡
__USE_XOPEN2K


100 
	#POSIX_MADV_NORMAL
 0

	)

101 
	#POSIX_MADV_RANDOM
 1

	)

102 
	#POSIX_MADV_SEQUENTIAL
 2

	)

103 
	#POSIX_MADV_WILLNEED
 3

	)

104 
	#POSIX_MADV_DONTNEED
 4

	)

108 #i‚de‡
MCL_CURRENT


109 
	#MCL_CURRENT
 1

	)

110 
	#MCL_FUTURE
 2

	)

112 
	#MCL_ONFAULT
 4

	)

116 
	~<bôs/mm™-sh¨ed.h
>

	@/usr/include/bits/mman-map-flags-generic.h

19 #i‚de‡
_SYS_MMAN_H


28 
	#MAP_GROWSDOWN
 0x00100

	)

29 
	#MAP_DENYWRITE
 0x00800

	)

30 
	#MAP_EXECUTABLE
 0x01000

	)

31 
	#MAP_LOCKED
 0x02000

	)

32 
	#MAP_NORESERVE
 0x04000

	)

33 
	#MAP_POPULATE
 0x08000

	)

34 
	#MAP_NONBLOCK
 0x10000

	)

35 
	#MAP_STACK
 0x20000

	)

36 
	#MAP_HUGETLB
 0x40000

	)

37 
	#MAP_SYNC
 0x80000

	)

39 
	#MAP_FIXED_NOREPLACE
 0x100000

	)

	@/usr/include/bits/pthreadtypes.h

19 #i‚de‡
_BITS_PTHREADTYPES_COMMON_H


20 
	#_BITS_PTHREADTYPES_COMMON_H
 1

	)

23 
	~<bôs/thªad-sh¨ed-ty≥s.h
>

27 
	t±hªad_t
;

34 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

35 
	m__Æign
;

36 } 
	t±hªad_muãx©å_t
;

43 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

44 
	m__Æign
;

45 } 
	t±hªad_c⁄d©å_t
;

49 
	t±hªad_key_t
;

53 
	t__ONCE_ALIGNMENT
 
	t±hªad_⁄˚_t
;

56 
	u±hªad_©å_t


58 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

59 
	m__Æign
;

61 #i‚de‡
__have_±hªad_©å_t


62 
±hªad_©å_t
 
	t±hªad_©å_t
;

63 
	#__have_±hªad_©å_t
 1

	)

69 
__±hªad_muãx_s
 
	m__d©a
;

70 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

71 
	m__Æign
;

72 } 
	t±hªad_muãx_t
;

77 
__±hªad_c⁄d_s
 
	m__d©a
;

78 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

79 
__exãnsi⁄__
 
	m__Æign
;

80 } 
	t±hªad_c⁄d_t
;

83 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


88 
__±hªad_rwlock_¨ch_t
 
	m__d©a
;

89 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

90 
	m__Æign
;

91 } 
	t±hªad_rwlock_t
;

95 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

96 
	m__Æign
;

97 } 
	t±hªad_rwlock©å_t
;

101 #ifde‡
__USE_XOPEN2K


103 vﬁ©ûê
	t±hªad_•ölock_t
;

110 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

111 
	m__Æign
;

112 } 
	t±hªad_b¨rõr_t
;

116 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

117 
	m__Æign
;

118 } 
	t±hªad_b¨rõøâr_t
;

	@/usr/include/bits/statx-generic.h

21 #i‚de‡
_SYS_STAT_H


22 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
°©x
-
gíîic
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

25 
	~<bôs/ty≥s/°ru˘_°©x_time°amp.h
>

26 
	~<bôs/ty≥s/°ru˘_°©x.h
>

28 #i‚de‡
STATX_TYPE


29 
	#STATX_TYPE
 0x0001U

	)

30 
	#STATX_MODE
 0x0002U

	)

31 
	#STATX_NLINK
 0x0004U

	)

32 
	#STATX_UID
 0x0008U

	)

33 
	#STATX_GID
 0x0010U

	)

34 
	#STATX_ATIME
 0x0020U

	)

35 
	#STATX_MTIME
 0x0040U

	)

36 
	#STATX_CTIME
 0x0080U

	)

37 
	#STATX_INO
 0x0100U

	)

38 
	#STATX_SIZE
 0x0200U

	)

39 
	#STATX_BLOCKS
 0x0400U

	)

40 
	#STATX_BASIC_STATS
 0x07ffU

	)

41 
	#STATX_ALL
 0x0fffU

	)

42 
	#STATX_BTIME
 0x0800U

	)

43 
	#STATX_MNT_ID
 0x1000U

	)

44 
	#STATX_DIOALIGN
 0x2000U

	)

45 
	#STATX__RESERVED
 0x80000000U

	)

47 
	#STATX_ATTR_COMPRESSED
 0x0004

	)

48 
	#STATX_ATTR_IMMUTABLE
 0x0010

	)

49 
	#STATX_ATTR_APPEND
 0x0020

	)

50 
	#STATX_ATTR_NODUMP
 0x0040

	)

51 
	#STATX_ATTR_ENCRYPTED
 0x0800

	)

52 
	#STATX_ATTR_AUTOMOUNT
 0x1000

	)

53 
	#STATX_ATTR_MOUNT_ROOT
 0x2000

	)

54 
	#STATX_ATTR_VERITY
 0x100000

	)

55 
	#STATX_ATTR_DAX
 0x200000

	)

58 
__BEGIN_DECLS


61 
	$°©x
 (
__dúfd
, c⁄° *
__ª°ri˘
 
__∑th
, 
__Êags
,

62 
__mask
, 
°©x
 *
__ª°ri˘
 
__buf
)

63 
__THROW
 
	`__n⁄nuŒ
 ((2, 5));

65 
__END_DECLS


	@/usr/include/bits/strings_fortified.h

19 #i‚de‡
__STRINGS_FORTIFIED


20 
	#__STRINGS_FORTIFIED
 1

	)

22 
__f‹tify_fun˘i⁄
 

23 
__NTH
 (
	$bc›y
 (c⁄° *
__§c
, *
__de°
, 
size_t
 
__Àn
))

25 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
,

26 
	`__glibc_objsize0
 (
__de°
));

27 
	}
}

29 
__f‹tify_fun˘i⁄
 

30 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

32 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
,

33 
	`__glibc_objsize0
 (
__de°
));

34 
	}
}

	@/usr/include/bits/struct_stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STRUCT_STAT_H


24 
	#_BITS_STRUCT_STAT_H
 1

	)

26 
	s°©


28 #ifde‡
__USE_TIME64_REDIRECTS


29 
	~<bôs/°ru˘_°©_time64_hñ≥r.h
>

31 
__dev_t
 
	m°_dev
;

32 #i‚de‡
__x86_64__


33 
	m__∑d1
;

35 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


36 
__öo_t
 
	m°_öo
;

38 
__öo_t
 
	m__°_öo
;

40 #i‚de‡
__x86_64__


41 
__mode_t
 
	m°_mode
;

42 
__∆ök_t
 
	m°_∆ök
;

44 
__∆ök_t
 
	m°_∆ök
;

45 
__mode_t
 
	m°_mode
;

47 
__uid_t
 
	m°_uid
;

48 
__gid_t
 
	m°_gid
;

49 #ifde‡
__x86_64__


50 
	m__∑d0
;

52 
__dev_t
 
	m°_rdev
;

53 #i‚de‡
__x86_64__


54 
	m__∑d2
;

56 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


57 
__off_t
 
	m°_size
;

59 
__off64_t
 
	m°_size
;

61 
__blksize_t
 
	m°_blksize
;

62 #i‡
deföed
 
__x86_64__
 || !deföed 
__USE_FILE_OFFSET64


63 
__blk˙t_t
 
	m°_blocks
;

65 
__blk˙t64_t
 
	m°_blocks
;

67 #ifde‡
__USE_XOPEN2K8


74 
time•ec
 
	m°_©im
;

75 
time•ec
 
	m°_mtim
;

76 
time•ec
 
	m°_˘im
;

77 
	#°_©ime
 
°_©im
.
tv_£c


	)

78 
	#°_mtime
 
°_mtim
.
tv_£c


	)

79 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

81 
__time_t
 
	m°_©ime
;

82 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

83 
__time_t
 
	m°_mtime
;

84 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

85 
__time_t
 
	m°_˘ime
;

86 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

88 #ifde‡
__x86_64__


89 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

91 #i‚de‡
__USE_FILE_OFFSET64


92 
	m__glibc_ª£rved4
;

93 
	m__glibc_ª£rved5
;

95 
__öo64_t
 
	m°_öo
;

101 #ifde‡
__USE_LARGEFILE64


103 
	s°©64


105 #ifde‡
__USE_TIME64_REDIRECTS


106 
	~<bôs/°ru˘_°©_time64_hñ≥r.h
>

108 
__dev_t
 
	m°_dev
;

109 #ifde‡
__x86_64__


110 
__öo64_t
 
	m°_öo
;

111 
__∆ök_t
 
	m°_∆ök
;

112 
__mode_t
 
	m°_mode
;

114 
	m__∑d1
;

115 
__öo_t
 
	m__°_öo
;

116 
__mode_t
 
	m°_mode
;

117 
__∆ök_t
 
	m°_∆ök
;

119 
__uid_t
 
	m°_uid
;

120 
__gid_t
 
	m°_gid
;

121 #ifde‡
__x86_64__


122 
	m__∑d0
;

123 
__dev_t
 
	m°_rdev
;

124 
__off_t
 
	m°_size
;

126 
__dev_t
 
	m°_rdev
;

127 
	m__∑d2
;

128 
__off64_t
 
	m°_size
;

130 
__blksize_t
 
	m°_blksize
;

131 
__blk˙t64_t
 
	m°_blocks
;

132 #ifde‡
__USE_XOPEN2K8


139 
time•ec
 
	m°_©im
;

140 
time•ec
 
	m°_mtim
;

141 
time•ec
 
	m°_˘im
;

143 
__time_t
 
	m°_©ime
;

144 
__sysˇŒ_ul⁄g_t
 
	m°_©imí£c
;

145 
__time_t
 
	m°_mtime
;

146 
__sysˇŒ_ul⁄g_t
 
	m°_mtimí£c
;

147 
__time_t
 
	m°_˘ime
;

148 
__sysˇŒ_ul⁄g_t
 
	m°_˘imí£c
;

150 #ifde‡
__x86_64__


151 
__sysˇŒ_¶⁄g_t
 
	m__glibc_ª£rved
[3];

153 
__öo64_t
 
	m°_öo
;

160 
	#_STATBUF_ST_BLKSIZE


	)

161 
	#_STATBUF_ST_RDEV


	)

163 
	#_STATBUF_ST_NSEC


	)

	@/usr/include/bits/time64.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TIME64_H


24 
	#_BITS_TIME64_H
 1

	)

28 #i‡
__TIMESIZE
 == 64

30 
	#__TIME64_T_TYPE
 
__TIME_T_TYPE


	)

33 
	#__TIME64_T_TYPE
 
__SQUAD_TYPE


	)

	@/usr/include/bits/timesize.h

19 
	~<bôs/w‹dsize.h
>

21 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


23 
	#__TIMESIZE
 64

	)

26 
	#__TIMESIZE
 
__WORDSIZE


	)

	@/usr/include/bits/timex.h

18 #i‚def 
_BITS_TIMEX_H


19 
	#_BITS_TIMEX_H
 1

	)

21 
	~<bôs/ty≥s.h
>

22 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

26 
	stimex


28 #i‡
deföed
 
__USE_TIME64_REDIRECTS
 || (
__TIMESIZE
 =64 && 
__WORDSIZE
 == 32)

29 
	mmodes
;

31 
	moff£t
;

32 
	m‰eq
;

33 
	mmaxîr‹
;

34 
	me°îr‹
;

35 
	m°©us
;

37 
	mc⁄°™t
;

38 
	m¥ecisi⁄
;

39 
	mtﬁî™˚
;

40 
timevÆ
 
	mtime
;

41 
	mtick
;

42 
	mµs‰eq
;

43 
	mjôãr
;

44 
	mshi·
;

46 
	m°abû
;

47 
	mjô˙t
;

48 
	mˇl˙t
;

49 
	mîr˙t
;

50 
	m°b˙t
;

52 
	mèi
;

58 
	mmodes
;

59 
__sysˇŒ_¶⁄g_t
 
	moff£t
;

60 
__sysˇŒ_¶⁄g_t
 
	m‰eq
;

61 
__sysˇŒ_¶⁄g_t
 
	mmaxîr‹
;

62 
__sysˇŒ_¶⁄g_t
 
	me°îr‹
;

63 
	m°©us
;

64 
__sysˇŒ_¶⁄g_t
 
	mc⁄°™t
;

65 
__sysˇŒ_¶⁄g_t
 
	m¥ecisi⁄
;

66 
__sysˇŒ_¶⁄g_t
 
	mtﬁî™˚
;

67 
timevÆ
 
	mtime
;

68 
__sysˇŒ_¶⁄g_t
 
	mtick
;

69 
__sysˇŒ_¶⁄g_t
 
	mµs‰eq
;

70 
__sysˇŒ_¶⁄g_t
 
	mjôãr
;

71 
	mshi·
;

72 
__sysˇŒ_¶⁄g_t
 
	m°abû
;

73 
__sysˇŒ_¶⁄g_t
 
	mjô˙t
;

74 
__sysˇŒ_¶⁄g_t
 
	mˇl˙t
;

75 
__sysˇŒ_¶⁄g_t
 
	mîr˙t
;

76 
__sysˇŒ_¶⁄g_t
 
	m°b˙t
;

78 
	mèi
;

88 
	#ADJ_OFFSET
 0x0001

	)

89 
	#ADJ_FREQUENCY
 0x0002

	)

90 
	#ADJ_MAXERROR
 0x0004

	)

91 
	#ADJ_ESTERROR
 0x0008

	)

92 
	#ADJ_STATUS
 0x0010

	)

93 
	#ADJ_TIMECONST
 0x0020

	)

94 
	#ADJ_TAI
 0x0080

	)

95 
	#ADJ_SETOFFSET
 0x0100

	)

96 
	#ADJ_MICRO
 0x1000

	)

97 
	#ADJ_NANO
 0x2000

	)

98 
	#ADJ_TICK
 0x4000

	)

99 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

100 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

103 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

104 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

105 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

106 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

107 
	#MOD_STATUS
 
ADJ_STATUS


	)

108 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

109 
	#MOD_CLKB
 
ADJ_TICK


	)

110 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

111 
	#MOD_TAI
 
ADJ_TAI


	)

112 
	#MOD_MICRO
 
ADJ_MICRO


	)

113 
	#MOD_NANO
 
ADJ_NANO


	)

117 
	#STA_PLL
 0x0001

	)

118 
	#STA_PPSFREQ
 0x0002

	)

119 
	#STA_PPSTIME
 0x0004

	)

120 
	#STA_FLL
 0x0008

	)

122 
	#STA_INS
 0x0010

	)

123 
	#STA_DEL
 0x0020

	)

124 
	#STA_UNSYNC
 0x0040

	)

125 
	#STA_FREQHOLD
 0x0080

	)

127 
	#STA_PPSSIGNAL
 0x0100

	)

128 
	#STA_PPSJITTER
 0x0200

	)

129 
	#STA_PPSWANDER
 0x0400

	)

130 
	#STA_PPSERROR
 0x0800

	)

132 
	#STA_CLOCKERR
 0x1000

	)

133 
	#STA_NANO
 0x2000

	)

134 
	#STA_MODE
 0x4000

	)

135 
	#STA_CLK
 0x8000

	)

138 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 \

139 | 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/types/__locale_t.h

19 #i‚de‡
_BITS_TYPES___LOCALE_T_H


20 
	#_BITS_TYPES___LOCALE_T_H
 1

	)

27 
	s__loˇÀ_°ru˘


30 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

33 c⁄° *
	m__˘y≥_b
;

34 c⁄° *
	m__˘y≥_tﬁowî
;

35 c⁄° *
	m__˘y≥_touµî
;

38 c⁄° *
	m__«mes
[13];

41 
__loˇÀ_°ru˘
 *
	t__loˇÀ_t
;

	@/usr/include/bits/types/__mbstate_t.h

1 #i‚de‡
____mb°©e_t_deföed


2 
	#____mb°©e_t_deföed
 1

	)

8 #i‚de‡
__WINT_TYPE__


9 
	#__WINT_TYPE__
 

	)

15 
	m__cou¡
;

18 
__WINT_TYPE__
 
	m__wch
;

19 
	m__wchb
[4];

20 } 
	m__vÆue
;

21 } 
	t__mb°©e_t
;

	@/usr/include/bits/typesizes.h

19 #i‚de‡
_BITS_TYPES_H


23 #i‚def 
_BITS_TYPESIZES_H


24 
	#_BITS_TYPESIZES_H
 1

	)

30 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


31 
	#__SYSCALL_SLONG_TYPE
 
__SQUAD_TYPE


	)

32 
	#__SYSCALL_ULONG_TYPE
 
__UQUAD_TYPE


	)

34 
	#__SYSCALL_SLONG_TYPE
 
__SLONGWORD_TYPE


	)

35 
	#__SYSCALL_ULONG_TYPE
 
__ULONGWORD_TYPE


	)

38 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

39 
	#__UID_T_TYPE
 
__U32_TYPE


	)

40 
	#__GID_T_TYPE
 
__U32_TYPE


	)

41 
	#__INO_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

42 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

43 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

44 #ifde‡
__x86_64__


45 
	#__NLINK_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

46 
	#__FSWORD_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

48 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

49 
	#__FSWORD_T_TYPE
 
__SWORD_TYPE


	)

51 
	#__OFF_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

52 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

53 
	#__PID_T_TYPE
 
__S32_TYPE


	)

54 
	#__RLIM_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

55 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

56 
	#__BLKCNT_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

57 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

58 
	#__FSBLKCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

59 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

60 
	#__FSFILCNT_T_TYPE
 
__SYSCALL_ULONG_TYPE


	)

61 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

62 
	#__ID_T_TYPE
 
__U32_TYPE


	)

63 
	#__CLOCK_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

64 
	#__TIME_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

65 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

66 
	#__SUSECONDS_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

67 
	#__SUSECONDS64_T_TYPE
 
__SQUAD_TYPE


	)

68 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

69 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

70 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

71 
	#__TIMER_T_TYPE
 *

	)

72 
	#__BLKSIZE_T_TYPE
 
__SYSCALL_SLONG_TYPE


	)

73 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

74 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

75 
	#__CPU_MASK_TYPE
 
__SYSCALL_ULONG_TYPE


	)

77 #ifde‡
__x86_64__


81 
	#__OFF_T_MATCHES_OFF64_T
 1

	)

84 
	#__INO_T_MATCHES_INO64_T
 1

	)

87 
	#__RLIM_T_MATCHES_RLIM64_T
 1

	)

90 
	#__STATFS_MATCHES_STATFS64
 1

	)

93 
	#__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64
 1

	)

95 
	#__RLIM_T_MATCHES_RLIM64_T
 0

	)

97 
	#__STATFS_MATCHES_STATFS64
 0

	)

99 
	#__KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64
 0

	)

103 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/unistd-decl.h

19 #i‚de‡
_BITS_UNISTD_DECL_H


20 
	#_BITS_UNISTD_DECL_H
 1

	)

22 #i‚de‡
_UNISTD_H


26 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

27 
size_t
 
__buÊí
)

28 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

29 
ssize_t
 
	`__REDIRECT_FORTIFY
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

30 
size_t
 
__nbyãs
), 
ªad
)

31 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

32 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

33 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

34 
size_t
 
__buÊí
), 
__ªad_chk
)

35 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

38 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


39 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

40 
__off_t
 
__off£t
, 
size_t
 
__bufsize
)

41 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

42 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

43 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
)

44 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

45 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

46 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

47 
__off_t
 
__off£t
), 
¥ód
)

48 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

49 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

50 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

51 
__off64_t
 
__off£t
), 
¥ód64
)

52 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

56 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

58 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

60 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

61 
__¥ód64_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

66 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


67 
ssize_t
 
	$__ªadlök_chk
 (c⁄° *
__ª°ri˘
 
__∑th
,

68 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

69 
size_t
 
__buÊí
)

70 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

71 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

72 (c⁄° *
__ª°ri˘
 
__∑th
,

73 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

74 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

75 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

76 (c⁄° *
__ª°ri˘
 
__∑th
,

77 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

78 
size_t
 
__buÊí
), 
__ªadlök_chk
)

79 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

83 #ifde‡
__USE_ATFILE


84 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

85 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

86 
size_t
 
__buÊí
)

87 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 3, 4));

88 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

89 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

90 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

91 
ªadlök©
)

92 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 3, 4));

93 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

94 (
__fd
, c⁄° *
__ª°ri˘
 
__∑th
,

95 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

96 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

97 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

102 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

103 
__THROW
 
__wur
;

104 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

105 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

106 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

107 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

108 
__gëcwd_chk
)

109 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

112 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


113 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

114 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

115 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

116 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

120 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

121 
size_t
 
__buÊí
Ë
__THROW


122 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

123 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

124 
size_t
 
__Àn
), 
c⁄f°r
)

125 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

126 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

127 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

128 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

129 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

133 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

134 
__THROW
 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 1));

135 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

136 
gëgroups
Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 1));

137 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

138 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

139 
__gëgroups_chk
)

140 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

144 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

145 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2))

146 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 2, 3));

147 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

148 
size_t
 
__buÊí
), 
ây«me_r
)

149 
	`__n⁄nuŒ
 ((2));

150 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

151 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

152 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

153 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

157 #ifde‡
__USE_POSIX199506


158 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

159 
	`__n⁄nuŒ
 ((1)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

160 
	`__REDIRECT_FORTIFY
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

161 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

162 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

163 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

164 
__gëlogö_r_chk
)

165 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

170 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_UNIX98


171 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

172 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

173 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

174 
gëho°«me
)

175 
	`__n⁄nuŒ
 ((1)Ë
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

176 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

177 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

178 
__gëho°«me_chk
)

179 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

184 #i‡
deföed
 
__USE_MISC
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

185 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

187 
	`__REDIRECT_FORTIFY_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

188 
size_t
 
__buÊí
),

189 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1))

190 
__wur
 
	`__©å_ac˚ss
 ((
__wrôe_⁄ly__
, 1, 2));

191 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

192 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

193 
__gëdomaö«me_chk
)

194 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

	@/usr/include/endian.h

18 #i‚def 
_ENDIAN_H


19 
	#_ENDIAN_H
 1

	)

21 
	~<„©uªs.h
>

24 
	~<bôs/ídün.h
>

26 #ifde‡
__USE_MISC


27 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

28 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

29 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

30 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

33 #i‡
deföed
 
__USE_MISC
 && !deföed 
__ASSEMBLER__


35 
	~<bôs/byãsw≠.h
>

36 
	~<bôs/uöä-idítôy.h
>

38 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


39 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

40 
	#htﬁe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

41 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

42 
	#À16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

44 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

45 
	#htﬁe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

46 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

47 
	#À32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

49 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

50 
	#htﬁe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

51 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

52 
	#À64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

55 
	#htobe16
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

56 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

57 
	#be16toh
(
x
Ë
	`__uöt16_idítôy
 (x)

	)

58 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

60 
	#htobe32
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

61 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

62 
	#be32toh
(
x
Ë
	`__uöt32_idítôy
 (x)

	)

63 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

65 
	#htobe64
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

66 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

67 
	#be64toh
(
x
Ë
	`__uöt64_idítôy
 (x)

	)

68 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features-time64.h

20 
	~<bôs/w‹dsize.h
>

21 
	~<bôs/timesize.h
>

23 #i‡
deföed
 
_TIME_BITS


24 #i‡
_TIME_BITS
 == 64

25 #i‡! 
deföed
 (
_FILE_OFFSET_BITS
) || _FILE_OFFSET_BITS != 64

28 
	#__USE_TIME_BITS64
 1

	)

29 #ñi‡
_TIME_BITS
 == 32

30 #i‡
__TIMESIZE
 > 32

34 #îr‹ 
InvÆid
 
_TIME_BITS
 
vÆue
 (
ˇn
 
⁄ly
 
be
 32 
‹
 64-
bô
)

36 #ñi‡
__TIMESIZE
 == 64

37 
	#__USE_TIME_BITS64
 1

	)

40 #i‡
deföed
 
__USE_TIME_BITS64
 && 
__TIMESIZE
 == 32

41 
	#__USE_TIME64_REDIRECTS
 1

	)

	@/usr/include/gnu/stubs.h

6 #i‡!
deföed
 
__x86_64__


7 
	~<gnu/°ubs-32.h
>

9 #i‡
deföed
 
__x86_64__
 && deföed 
__LP64__


10 
	~<gnu/°ubs-64.h
>

12 #i‡
deföed
 
__x86_64__
 && deföed 
__ILP32__


13 
	~<gnu/°ubs-x32.h
>

	@/usr/include/linux/close_range.h

2 #i‚de‡
_LINUX_CLOSE_RANGE_H


3 
	#_LINUX_CLOSE_RANGE_H


	)

6 
	#CLOSE_RANGE_UNSHARE
 (1U << 1)

	)

9 
	#CLOSE_RANGE_CLOEXEC
 (1U << 2)

	)

	@/usr/include/linux/stat.h

2 #i‚de‡
_LINUX_STAT_H


3 
	#_LINUX_STAT_H


	)

5 
	~<löux/ty≥s.h
>

7 #i‡
deföed
(
__KERNEL__
Ë|| !deföed(
__GLIBC__
) || (__GLIBC__ < 2)

9 
	#S_IFMT
 00170000

	)

10 
	#S_IFSOCK
 0140000

	)

11 
	#S_IFLNK
 0120000

	)

12 
	#S_IFREG
 0100000

	)

13 
	#S_IFBLK
 0060000

	)

14 
	#S_IFDIR
 0040000

	)

15 
	#S_IFCHR
 0020000

	)

16 
	#S_IFIFO
 0010000

	)

17 
	#S_ISUID
 0004000

	)

18 
	#S_ISGID
 0002000

	)

19 
	#S_ISVTX
 0001000

	)

21 
	#S_ISLNK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFLNK
)

	)

22 
	#S_ISREG
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFREG
)

	)

23 
	#S_ISDIR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFDIR
)

	)

24 
	#S_ISCHR
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFCHR
)

	)

25 
	#S_ISBLK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFBLK
)

	)

26 
	#S_ISFIFO
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFIFO
)

	)

27 
	#S_ISSOCK
(
m
Ë(((mË& 
S_IFMT
Ë=
S_IFSOCK
)

	)

29 
	#S_IRWXU
 00700

	)

30 
	#S_IRUSR
 00400

	)

31 
	#S_IWUSR
 00200

	)

32 
	#S_IXUSR
 00100

	)

34 
	#S_IRWXG
 00070

	)

35 
	#S_IRGRP
 00040

	)

36 
	#S_IWGRP
 00020

	)

37 
	#S_IXGRP
 00010

	)

39 
	#S_IRWXO
 00007

	)

40 
	#S_IROTH
 00004

	)

41 
	#S_IWOTH
 00002

	)

42 
	#S_IXOTH
 00001

	)

56 
	s°©x_time°amp
 {

57 
__s64
 
	mtv_£c
;

58 
__u32
 
	mtv_n£c
;

59 
__s32
 
	m__ª£rved
;

99 
	s°©x
 {

101 
__u32
 
	m°x_mask
;

102 
__u32
 
	m°x_blksize
;

103 
__u64
 
	m°x_©åibuãs
;

105 
__u32
 
	m°x_∆ök
;

106 
__u32
 
	m°x_uid
;

107 
__u32
 
	m°x_gid
;

108 
__u16
 
	m°x_mode
;

109 
__u16
 
	m__•¨e0
[1];

111 
__u64
 
	m°x_öo
;

112 
__u64
 
	m°x_size
;

113 
__u64
 
	m°x_blocks
;

114 
__u64
 
	m°x_©åibuãs_mask
;

116 
°©x_time°amp
 
	m°x_©ime
;

117 
°©x_time°amp
 
	m°x_btime
;

118 
°©x_time°amp
 
	m°x_˘ime
;

119 
°©x_time°amp
 
	m°x_mtime
;

121 
__u32
 
	m°x_rdev_maj‹
;

122 
__u32
 
	m°x_rdev_mö‹
;

123 
__u32
 
	m°x_dev_maj‹
;

124 
__u32
 
	m°x_dev_mö‹
;

126 
__u64
 
	m°x_m¡_id
;

127 
__u32
 
	m°x_dio_mem_Æign
;

128 
__u32
 
	m°x_dio_off£t_Æign
;

130 
__u64
 
	m°x_subvﬁ
;

131 
__u32
 
	m°x_©omic_wrôe_unô_mö
;

132 
__u32
 
	m°x_©omic_wrôe_unô_max
;

134 
__u32
 
	m°x_©omic_wrôe_£gmíts_max
;

135 
__u32
 
	m__•¨e1
[1];

137 
__u64
 
	m__•¨e3
[9];

149 
	#STATX_TYPE
 0x00000001U

	)

150 
	#STATX_MODE
 0x00000002U

	)

151 
	#STATX_NLINK
 0x00000004U

	)

152 
	#STATX_UID
 0x00000008U

	)

153 
	#STATX_GID
 0x00000010U

	)

154 
	#STATX_ATIME
 0x00000020U

	)

155 
	#STATX_MTIME
 0x00000040U

	)

156 
	#STATX_CTIME
 0x00000080U

	)

157 
	#STATX_INO
 0x00000100U

	)

158 
	#STATX_SIZE
 0x00000200U

	)

159 
	#STATX_BLOCKS
 0x00000400U

	)

160 
	#STATX_BASIC_STATS
 0x000007ffU

	)

161 
	#STATX_BTIME
 0x00000800U

	)

162 
	#STATX_MNT_ID
 0x00001000U

	)

163 
	#STATX_DIOALIGN
 0x00002000U

	)

164 
	#STATX_MNT_ID_UNIQUE
 0x00004000U

	)

165 
	#STATX_SUBVOL
 0x00008000U

	)

166 
	#STATX_WRITE_ATOMIC
 0x00010000U

	)

168 
	#STATX__RESERVED
 0x80000000U

	)

175 
	#STATX_ALL
 0x00000fffU

	)

191 
	#STATX_ATTR_COMPRESSED
 0x00000004

	)

192 
	#STATX_ATTR_IMMUTABLE
 0x00000010

	)

193 
	#STATX_ATTR_APPEND
 0x00000020

	)

194 
	#STATX_ATTR_NODUMP
 0x00000040

	)

195 
	#STATX_ATTR_ENCRYPTED
 0x00000800

	)

196 
	#STATX_ATTR_AUTOMOUNT
 0x00001000

	)

197 
	#STATX_ATTR_MOUNT_ROOT
 0x00002000

	)

198 
	#STATX_ATTR_VERITY
 0x00100000

	)

199 
	#STATX_ATTR_DAX
 0x00200000

	)

200 
	#STATX_ATTR_WRITE_ATOMIC
 0x00400000

	)

	@/usr/include/stdc-predef.h

18 #i‚def 
_STDC_PREDEF_H


19 
	#_STDC_PREDEF_H
 1

	)

36 #ifde‡
__GCC_IEC_559


37 #i‡
__GCC_IEC_559
 > 0

38 
	#__STDC_IEC_559__
 1

	)

39 
	#__STDC_IEC_60559_BFP__
 201404L

	)

42 
	#__STDC_IEC_559__
 1

	)

43 
	#__STDC_IEC_60559_BFP__
 201404L

	)

46 #ifde‡
__GCC_IEC_559_COMPLEX


47 #i‡
__GCC_IEC_559_COMPLEX
 > 0

48 
	#__STDC_IEC_559_COMPLEX__
 1

	)

49 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

52 
	#__STDC_IEC_559_COMPLEX__
 1

	)

53 
	#__STDC_IEC_60559_COMPLEX__
 201404L

	)

62 
	#__STDC_ISO_10646__
 201706L

	)

	@/usr/include/sys/cdefs.h

19 #i‚def 
_SYS_CDEFS_H


20 
	#_SYS_CDEFS_H
 1

	)

23 #i‚de‡
_FEATURES_H


24 
	~<„©uªs.h
>

30 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__
 && !deföed 
__˝lu•lus


35 #unde‡
__P


36 #unde‡
__PMT


42 #i‡(
deföed
 
__has_©åibuã
 \

43 && (!
deföed
 
	g__˛™g_mö‹__
 \

44 || 3 < 
	g__˛™g_maj‹__
 + (5 <
__˛™g_mö‹__
)))

45 
	#__glibc_has_©åibuã
(
©å
Ë
	`__has_©åibuã
 (©å)

	)

47 
	#__glibc_has_©åibuã
(
©å
Ë0

	)

49 #ifde‡
__has_buûtö


50 
	#__glibc_has_buûtö
(
«me
Ë
	`__has_buûtö
 («me)

	)

52 
	#__glibc_has_buûtö
(
«me
Ë0

	)

54 #ifde‡
__has_exãnsi⁄


55 
	#__glibc_has_exãnsi⁄
(
ext
Ë
	`__has_exãnsi⁄
 (ext)

	)

57 
	#__glibc_has_exãnsi⁄
(
ext
Ë0

	)

60 #i‡
deföed
 
__GNUC__
 || deföed 
__˛™g__


64 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


65 
	#__LEAF
 , 
__Àaf__


	)

66 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

68 
	#__LEAF


	)

69 
	#__LEAF_ATTR


	)

77 #i‡!
deföed
 
__˝lu•lus
 \

78 && (
__GNUC_PREREQ
 (3, 4Ë|| 
	$__glibc_has_©åibuã
 (
__nŸhrow__
))

79 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

80 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

81 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

82 
	#__NTHNL
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
)Ë
	)
fct

84 #i‡
deföed
 
__˝lu•lus
 && (
	`__GNUC_PREREQ
 (2,8Ë|| 
__˛™g_maj‹__
 >= 4)

85 #i‡
__˝lu•lus
 >= 201103L

86 
	#__THROW
 
	`n€x˚±
 (
åue
)

	)

88 
	#__THROW
 
	`throw
 ()

	)

90 
	#__THROWNL
 
__THROW


	)

91 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
__THROW


	)

92 
	#__NTHNL
(
f˘
Ëf˘ 
__THROW


	)

94 
	#__THROW


	)

95 
	#__THROWNL


	)

96 
	#__NTH
(
f˘
Ë
	)
fct

97 
	#__NTHNL
(
f˘
Ë
	)
fct

101 #i‡
	`__GNUC_PREREQ
 (4, 3Ë|| 
	`__glibc_has_©åibuã
 (
__cﬁd__
)

102 
	#__COLD
 
	`__©åibuã__
 ((
__cﬁd__
))

	)

104 
	#__COLD


	)

109 #i‡(
deföed
 
__˝lu•lus
 \

110 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

111 
	#__ölöe
 
ölöe


	)

113 
	#__ölöe


	)

116 
	#__THROW


	)

117 
	#__THROWNL


	)

118 
	#__NTH
(
f˘
Ë
	)
fct

119 
	#__COLD


	)

125 
	#__P
(
¨gs
Ë
	)
args

126 
	#__PMT
(
¨gs
Ë
	)
args

131 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

132 
	#__STRING
(
x
Ë#x

	)

135 
	#__±r_t
 *

	)

139 #ifdef 
__˝lu•lus


140 
	#__BEGIN_DECLS
 "C" {

	)

141 
	#__END_DECLS
 
	}

	)
}

143 
	#__BEGIN_DECLS


	)

144 
	#__END_DECLS


	)

149 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

150 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

153 #i‡
__USE_FORTIFY_LEVEL
 =3 && (
__glibc_˛™g_¥îeq
 (9, 0) \

154 || 
	$__GNUC_PREREQ
 (12, 0))

155 
	#__glibc_objsize0
(
__o
Ë
	`__buûtö_dy«mic_obje˘_size
 (__o, 0)

	)

156 
	#__glibc_objsize
(
__o
Ë
	`__buûtö_dy«mic_obje˘_size
 (__o, 1)

	)

158 
	#__glibc_objsize0
(
__o
Ë
	`__bos0
 (__o)

	)

159 
	#__glibc_objsize
(
__o
Ë
	`__bos
 (__o)

	)

162 #i‡
__USE_FORTIFY_LEVEL
 > 0

167 
	#__glibc_ß„_Àn_c⁄d
(
__l
, 
__s
, 
__osz
Ë((__lË<(__oszË/ (__s))

	)

168 
	#__glibc_unsig√d_‹_posôive
(
__l
) \

169 ((
	`__ty≥of
 (
__l
)) 0 < (__typeof (__l)) -1 \

170 || (
	`__buûtö_c⁄°™t_p
 (
__l
Ë&& (__lË> 0))

	)

174 
	#__glibc_ß„_‹_unknown_Àn
(
__l
, 
__s
, 
__osz
) \

175 ((
	`__buûtö_c⁄°™t_p
 (
__osz
Ë&& (__oszË=(
__SIZE_TYPE__
) -1) \

176 || (
	`__glibc_unsig√d_‹_posôive
 (
__l
) \

177 && 
	`__buûtö_c⁄°™t_p
 (
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), \

178 (
__s
), (
__osz
))) \

179 && 
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), (
__s
), (
__osz
))))

	)

184 
	#__glibc_unß„_Àn
(
__l
, 
__s
, 
__osz
) \

185 (
	`__glibc_unsig√d_‹_posôive
 (
__l
) \

186 && 
	`__buûtö_c⁄°™t_p
 (
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), \

187 
__s
, 
__osz
)) \

188 && !
	`__glibc_ß„_Àn_c⁄d
 ((
__SIZE_TYPE__
Ë(
__l
), 
__s
, 
__osz
))

	)

193 
	#__glibc_f‹tify
(
f
, 
__l
, 
__s
, 
__osz
, ...) \

194 (
	`__glibc_ß„_‹_unknown_Àn
 (
__l
, 
__s
, 
__osz
) \

195 ? 
__
 ## 
f
 ## 
	`_Æüs
 (
__VA_ARGS__
) \

196 : (
	`__glibc_unß„_Àn
 (
__l
, 
__s
, 
__osz
) \

197 ? 
__
 ## 
f
 ## 
	`_chk_w¨n
 (
__VA_ARGS__
, 
__osz
) \

198 : 
__
 ## 
f
 ## 
	`_chk
 (
__VA_ARGS__
, 
__osz
)))

	)

203 
	#__glibc_f‹tify_n
(
f
, 
__l
, 
__s
, 
__osz
, ...) \

204 (
	`__glibc_ß„_‹_unknown_Àn
 (
__l
, 
__s
, 
__osz
) \

205 ? 
__
 ## 
f
 ## 
	`_Æüs
 (
__VA_ARGS__
) \

206 : (
	`__glibc_unß„_Àn
 (
__l
, 
__s
, 
__osz
) \

207 ? 
__
 ## 
f
 ## 
	`_chk_w¨n
 (
__VA_ARGS__
, (
__osz
Ë/ (
__s
)) \

208 : 
__
 ## 
f
 ## 
	`_chk
 (
__VA_ARGS__
, (
__osz
Ë/ (
__s
))))

	)

211 #i‡
	`__GNUC_PREREQ
 (4,3)

212 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

213 
	#__îr‹de˛
(
«me
, 
msg
) \

214 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

216 
	#__w¨«âr
(
msg
)

	)

217 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

224 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >199901L && !deföed 
__HP_cc


225 
	#__Êex¨r
 []

	)

226 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

227 #ñi‡
	`__GNUC_PREREQ
 (2,97Ë|| 
deföed
 
__˛™g__


230 
	#__Êex¨r
 []

	)

231 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

232 #ñi‡
deföed
 
__GNUC__


235 
	#__Êex¨r
 [0]

	)

236 
	#__glibc_c99_Êex¨r_avaûabÀ
 1

	)

239 
	#__Êex¨r
 [1]

	)

240 
	#__glibc_c99_Êex¨r_avaûabÀ
 0

	)

254 #i‡(
deföed
 
__GNUC__
 && __GNUC__ >2Ë|| (
__˛™g_maj‹__
 >= 4)

256 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

257 #ifde‡
__˝lu•lus


258 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

259 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

260 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

261 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

263 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

264 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

265 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

266 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

268 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

269 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

271 #i‚de‡
__REDIRECT_FORTIFY


272 
	#__REDIRECT_FORTIFY
 
__REDIRECT


	)

275 #i‚de‡
__REDIRECT_FORTIFY_NTH


276 
	#__REDIRECT_FORTIFY_NTH
 
__REDIRECT_NTH


	)

290 #i‡!(
deföed
 
__GNUC__
 || deföed 
__˛™g__
)

291 
	#__©åibuã__
(
xyz
Ë

	)

297 #i‡
	`__GNUC_PREREQ
 (2,96Ë|| 
	`__glibc_has_©åibuã
 (
__mÆloc__
)

298 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

300 
	#__©åibuã_mÆloc__


	)

305 #i‡
	`__GNUC_PREREQ
 (4, 3)

306 
	#__©åibuã_Æloc_size__
(
∑øms
) \

307 
	`__©åibuã__
 ((
__Æloc_size__
 
∑øms
))

	)

309 
	#__©åibuã_Æloc_size__
(
∑øms
Ë

	)

314 #i‡
	`__GNUC_PREREQ
 (4, 9Ë|| 
	`__glibc_has_©åibuã
 (
__Æloc_Æign__
)

315 
	#__©åibuã_Æloc_Æign__
(
∑øm
) \

316 
	`__©åibuã__
 ((
__Æloc_Æign__
 
∑øm
))

	)

318 
	#__©åibuã_Æloc_Æign__
(
∑øm
Ë

	)

324 #i‡
	`__GNUC_PREREQ
 (2,96Ë|| 
	`__glibc_has_©åibuã
 (
__puª__
)

325 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

327 
	#__©åibuã_puª__


	)

331 #i‡
	`__GNUC_PREREQ
 (2,5Ë|| 
	`__glibc_has_©åibuã
 (
__c⁄°__
)

332 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

334 
	#__©åibuã_c⁄°__


	)

337 #i‡
	`__GNUC_PREREQ
 (2,7Ë|| 
	`__glibc_has_©åibuã
 (
__unu£d__
)

338 
	#__©åibuã_maybe_unu£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

340 
	#__©åibuã_maybe_unu£d__


	)

346 #i‡
	`__GNUC_PREREQ
 (3,1Ë|| 
	`__glibc_has_©åibuã
 (
__u£d__
)

347 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

348 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

350 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

351 
	#__©åibuã_noölöe__


	)

355 #i‡
	`__GNUC_PREREQ
 (3,2Ë|| 
	`__glibc_has_©åibuã
 (
__dïªˇãd__
)

356 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

358 
	#__©åibuã_dïªˇãd__


	)

364 #i‡
	`__GNUC_PREREQ
 (4,5) \

365 || 
	$__glibc_has_exãnsi⁄
 (
__©åibuã_dïªˇãd_wôh_mesßge__
)

366 
	#__©åibuã_dïªˇãd_msg__
(
msg
) \

367 
	`__©åibuã__
 ((
	`__dïªˇãd__
 (
msg
)))

	)

369 
	#__©åibuã_dïªˇãd_msg__
(
msg
Ë
__©åibuã_dïªˇãd__


	)

378 #i‡
	`__GNUC_PREREQ
 (2,8Ë|| 
	`__glibc_has_©åibuã
 (
__f‹m©_¨g__
)

379 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

381 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

388 #i‡
	`__GNUC_PREREQ
 (2,97Ë|| 
	`__glibc_has_©åibuã
 (
__f‹m©__
)

389 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

390 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

392 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

399 #i‚de‡
__©åibuã_n⁄nuŒ__


400 #i‡
	`__GNUC_PREREQ
 (3,3Ë|| 
	`__glibc_has_©åibuã
 (
__n⁄nuŒ__
)

401 
	#__©åibuã_n⁄nuŒ__
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

403 
	#__©åibuã_n⁄nuŒ__
(
∑øms
)

	)

406 #i‚de‡
__n⁄nuŒ


407 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã_n⁄nuŒ__
 (∑øms)

	)

412 #i‚de‡
__ªtu∫s_n⁄nuŒ


413 #i‡
	`__GNUC_PREREQ
 (4, 9Ë|| 
	`__glibc_has_©åibuã
 (
__ªtu∫s_n⁄nuŒ__
)

414 
	#__ªtu∫s_n⁄nuŒ
 
	`__©åibuã__
 ((
__ªtu∫s_n⁄nuŒ__
))

	)

416 
	#__ªtu∫s_n⁄nuŒ


	)

422 #i‡
	`__GNUC_PREREQ
 (3,4Ë|| 
	`__glibc_has_©åibuã
 (
__w¨n_unu£d_ªsu…__
)

423 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

424 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

425 #i‡
deföed
 
__USE_FORTIFY_LEVEL
 && __USE_FORTIFY_LEVEL > 0

426 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

429 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

431 #i‚de‡
__wur


432 
	#__wur


	)

436 #i‡
	`__GNUC_PREREQ
 (3,2Ë|| 
	`__glibc_has_©åibuã
 (
__Æways_ölöe__
)

440 #unde‡
__Æways_ölöe


441 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

443 #unde‡
__Æways_ölöe


444 
	#__Æways_ölöe
 
__ölöe


	)

449 #i‡
	`__GNUC_PREREQ
 (4,3Ë|| 
	`__glibc_has_©åibuã
 (
__¨tificül__
)

450 
	#__©åibuã_¨tificül__
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

452 
	#__©åibuã_¨tificül__


	)

464 #i‡(!
deföed
 
__˝lu•lus
 || 
	`__GNUC_PREREQ
 (4,3) \

465 || (
deföed
 
__˛™g__
 && (deföed 
__GNUC_STDC_INLINE__
 \

466 || 
deföed
 
__GNUC_GNU_INLINE__
)))

467 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


468 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

469 
	#__exã∫_Æways_ölöe
 \

470 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

472 
	#__exã∫_ölöe
 
__ölöe


	)

473 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

477 #ifde‡
__exã∫_Æways_ölöe


478 
	#__f‹tify_fun˘i⁄
 
__exã∫_Æways_ölöe
 
__©åibuã_¨tificül__


	)

483 #i‡
	`__GNUC_PREREQ
 (4,3)

484 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

485 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

492 #i‡!(
	`__GNUC_PREREQ
 (2,8Ë|| 
deföed
 
__˛™g__
)

493 
	#__exãnsi⁄__


	)

499 #i‡!(
	`__GNUC_PREREQ
 (2,92Ë|| 
__˛™g_maj‹__
 >= 3)

500 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

501 
	#__ª°ri˘
 
ª°ri˘


	)

503 
	#__ª°ri˘


	)

511 #i‡(
	`__GNUC_PREREQ
 (3,1Ë|| 
__˛™g_maj‹__
 >3Ë&& !
deföed
 
__˝lu•lus


512 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

514 #ifde‡
__GNUC__


515 
	#__ª°ri˘_¨r


	)

517 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

518 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

521 
	#__ª°ri˘_¨r


	)

526 #i‡(
__GNUC__
 >3Ë|| 
	`__glibc_has_buûtö
 (
__buûtö_ex≥˘
)

527 
	#__glibc_u∆ikñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 0)

	)

528 
	#__glibc_likñy
(
c⁄d
Ë
	`__buûtö_ex≥˘
 ((c⁄d), 1)

	)

530 
	#__glibc_u∆ikñy
(
c⁄d
Ë(c⁄d)

	)

531 
	#__glibc_likñy
(
c⁄d
Ë(c⁄d)

	)

534 #i‡(!
deföed
 
_N‹ëu∫
 \

535 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

536 && !(
	`__GNUC_PREREQ
 (4,7) \

537 || (3 < 
__˛™g_maj‹__
 + (5 <
__˛™g_mö‹__
))))

538 #i‡
	`__GNUC_PREREQ
 (2,8)

539 
	#_N‹ëu∫
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

	)

541 
	#_N‹ëu∫


	)

545 #i‡
	`__GNUC_PREREQ
 (8, 0)

549 
	#__©åibuã_n⁄°rög__
 
	`__©åibuã__
 ((
__n⁄°rög__
))

	)

551 
	#__©åibuã_n⁄°rög__


	)

555 #unde‡
__©åibuã_c›y__


556 #i‡
	`__GNUC_PREREQ
 (9, 0)

559 
	#__©åibuã_c›y__
(
¨g
Ë
	`__©åibuã__
 ((
	`__c›y__
 (¨g)))

	)

561 
	#__©åibuã_c›y__
(
¨g
)

	)

564 #i‡(!
deföed
 
_Sètic_as£π
 && !deföed 
__˝lu•lus
 \

565 && (
deföed
 
__STDC_VERSION__
 ? __STDC_VERSION__ : 0) < 201112 \

566 && (!(
	`__GNUC_PREREQ
 (4, 6Ë|| 
__˛™g_maj‹__
 >= 4) \

567 || 
deföed
 
__STRICT_ANSI__
))

568 
	#_Sètic_as£π
(
ex¥
, 
dügno°ic
) \

569 (*
	`__Sètic_as£π_fun˘i⁄
 ()) \

570 [!! (°ru˘ { 
__îr‹_if_√g©ive
: (
ex¥
Ë? 2 : -1; })]

	)

575 #i‚de‡
__GNULIB_CDEFS


576 
	~<bôs/w‹dsize.h
>

577 
	~<bôs/l⁄g-doubÀ.h
>

580 #i‡
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 1

581 #ifde‡
__REDIRECT


584 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë... 
unu£d__ldbl_ªdú


	)

585 
	#__LDBL_REDIR_DECL
(
«me
) \

586 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__" #«mê"õì128"));

	)

587 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

588 
«me
 
¥Ÿo
 
	`__asm
 (
	`__ASMNAME
 ("__" #Æü†"õì128"))

	)

591 
	#__LDBL_REDIR2_DECL
(
«me
) \

592 
	`__ty≥of
 (
__
##
«me
) __##name \

593 
	`__asm
 (
	`__ASMNAME
 ("__" #«mê"õì128"));

	)

596 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë... 
unu£d__ldbl_ªdú1


	)

597 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

598 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

600 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

601 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

602 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

603 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__
##
Æüs
##
õì128
)

	)

606 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë... 
unu£d__ldbl_ªdú_¡h


	)

609 
	`_Sètic_as£π
 (0, "IEEE 128-bitsÜong doubleÑequiresÑedirection onÅhisÖlatform");

611 #ñi‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


612 
	#__LDBL_COMPAT
 1

	)

613 #ifde‡
__REDIRECT


614 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

615 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

616 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

617 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

618 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

619 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

620 
	#__LDBL_REDIR2_DECL
(
«me
) \

621 
	`__ty≥of
 (
__
##
«me
Ë__##«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl___" #«me));

	)

622 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

623 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

624 
	#__LDBL_REDIR_DECL
(
«me
) \

625 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

626 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

627 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

628 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

629 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

632 #i‡(!
deföed
 
__LDBL_COMPAT
 && 
__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 == 0) \

633 || !
deföed
 
__REDIRECT


634 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

635 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

636 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

637 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

638 
	#__LDBL_REDIR2_DECL
(
«me
)

	)

639 
	#__LDBL_REDIR_DECL
(
«me
)

	)

640 #ifde‡
__REDIRECT


641 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

642 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

643 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

652 #i‡
	`__GNUC_PREREQ
 (4,8Ë|| 
	`__glibc_˛™g_¥îeq
 (3,5)

653 
	#__glibc_ma¸o_w¨nög1
(
mesßge
Ë
	`_Pøgma
 (#mesßge)

	)

654 
	#__glibc_ma¸o_w¨nög
(
mesßge
) \

655 
	`__glibc_ma¸o_w¨nög1
 (
GCC
 
w¨nög
 
mesßge
)

	)

657 
	#__glibc_ma¸o_w¨nög
(
msg
)

	)

667 #i‡!
deföed
 
__˝lu•lus
 \

668 && (
	`__GNUC_PREREQ
 (4, 9) \

669 || 
	`__glibc_has_exãnsi⁄
 (
c_gíîic_£À˘i⁄s
) \

670 || (!
deföed
 
__GNUC__
 && deföed 
__STDC_VERSION__
 \

671 && 
__STDC_VERSION__
 >= 201112L))

672 
	#__HAVE_GENERIC_SELECTION
 1

	)

674 
	#__HAVE_GENERIC_SELECTION
 0

	)

677 #i‡
	`__GNUC_PREREQ
 (10, 0)

683 
	#__©å_ac˚ss
(
x
Ë
	`__©åibuã__
 ((
__ac˚ss__
 x))

	)

688 #i‡
__USE_FORTIFY_LEVEL
 == 3

689 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
Ë
	`__©åibuã__
 ((
	`__ac˚ss__
 (a, o)))

	)

691 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
Ë
	`__©å_ac˚ss
 (◊, o, s))

	)

693 #i‡
	`__GNUC_PREREQ
 (11, 0)

694 
	#__©å_ac˚ss_n⁄e
(
¨gno
Ë
	`__©åibuã__
 ((
	`__ac˚ss__
 (
__n⁄e__
,árgno)))

	)

696 
	#__©å_ac˚ss_n⁄e
(
¨gno
)

	)

699 
	#__f‹tifõd_©å_ac˚ss
(
a
, 
o
, 
s
)

	)

700 
	#__©å_ac˚ss
(
x
)

	)

701 
	#__©å_ac˚ss_n⁄e
(
¨gno
)

	)

704 #i‡
	`__GNUC_PREREQ
 (11, 0)

707 
	#__©å_dóŒoc
(
dóŒoc
, 
¨gno
) \

708 
	`__©åibuã__
 ((
	`__mÆloc__
 (
dóŒoc
, 
¨gno
)))

	)

709 
	#__©å_dóŒoc_‰ì
 
	`__©å_dóŒoc
 (
__buûtö_‰ì
, 1)

	)

711 
	#__©å_dóŒoc
(
dóŒoc
, 
¨gno
)

	)

712 
	#__©å_dóŒoc_‰ì


	)

717 #i‡
	`__GNUC_PREREQ
 (4, 1)

718 
	#__©åibuã_ªtu∫s_twi˚__
 
	`__©åibuã__
 ((
__ªtu∫s_twi˚__
))

	)

720 
	#__©åibuã_ªtu∫s_twi˚__


	)

726 #i‡
	`__GNUC_PREREQ
 (7, 1Ë|| 
deföed
 
__˛™g__


727 
	#__©åibuã_°ru˘_may_Æüs__
 
	`__©åibuã__
 ((
__may_Æüs__
))

	)

729 
	#__©åibuã_°ru˘_may_Æüs__


	)

	@/usr/include/sys/select.h

21 #i‚de‡
_SYS_SELECT_H


22 
	#_SYS_SELECT_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	~<bôs/£À˘.h
>

33 
	~<bôs/ty≥s/sig£t_t.h
>

36 
	~<bôs/ty≥s/time_t.h
>

37 
	~<bôs/ty≥s/°ru˘_timevÆ.h
>

38 #ifde‡
__USE_XOPEN2K


39 
	~<bôs/ty≥s/°ru˘_time•ec.h
>

42 #i‚de‡
__su£c⁄ds_t_deföed


43 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

44 
	#__su£c⁄ds_t_deföed


	)

49 
	t__fd_mask
;

52 #unde‡
__NFDBITS


54 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

55 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

56 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë(1UL << ((dË% 
__NFDBITS
)))

	)

63 #ifde‡
__USE_XOPEN


64 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

65 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

67 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

68 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

70 } 
	tfd_£t
;

73 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

75 #ifde‡
__USE_MISC


77 
__fd_mask
 
	tfd_mask
;

80 
	#NFDBITS
 
__NFDBITS


	)

85 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

86 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

87 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

88 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

91 
	g__BEGIN_DECLS


101 #i‚de‡
__USE_TIME64_REDIRECTS


102 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

103 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

104 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

105 
timevÆ
 *
__ª°ri˘
 
__timeout
);

107 #ifde‡
__REDIRECT


108 
__REDIRECT
 (
£À˘
,

109 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

110 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

111 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

112 
timevÆ
 *
__ª°ri˘
 
__timeout
),

113 
__£À˘64
);

115 
	#£À˘
 
__£À˘64


	)

119 #ifde‡
__USE_XOPEN2K


126 #i‚de‡
__USE_TIME64_REDIRECTS


127 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

128 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

129 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

130 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

131 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

133 #ifde‡
__REDIRECT


134 
__REDIRECT
 (
p£À˘
,

135 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

136 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

137 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

138 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

139 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
),

140 
__p£À˘64
);

142 
	#p£À˘
 
__p£À˘64


	)

149 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


150 
	~<bôs/£À˘2.h
>

153 
	g__END_DECLS


	@/usr/include/bits/byteswap.h

19 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_BYTESWAP_H


24 
	#_BITS_BYTESWAP_H
 1

	)

26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

30 
	#__bsw≠_c⁄°™t_16
(
x
) \

31 ((
__uöt16_t
Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

33 
__ölöe
 
__uöt16_t


34 
	$__bsw≠_16
 (
__uöt16_t
 
__bsx
)

36 #i‡
	`__GNUC_PREREQ
 (4, 8)

37  
	`__buûtö_bsw≠16
 (
__bsx
);

39  
	`__bsw≠_c⁄°™t_16
 (
__bsx
);

41 
	}
}

44 
	#__bsw≠_c⁄°™t_32
(
x
) \

45 ((((
x
) & 0xff000000u) >> 24) | (((x) & 0x00ff0000u) >> 8) \

46 | (((
x
Ë& 0x0000ff00uË<< 8Ë| (((xË& 0x000000ffuË<< 24))

	)

48 
__ölöe
 
__uöt32_t


49 
	$__bsw≠_32
 (
__uöt32_t
 
__bsx
)

51 #i‡
	`__GNUC_PREREQ
 (4, 3)

52  
	`__buûtö_bsw≠32
 (
__bsx
);

54  
	`__bsw≠_c⁄°™t_32
 (
__bsx
);

56 
	}
}

59 
	#__bsw≠_c⁄°™t_64
(
x
) \

60 ((((
x
) & 0xff00000000000000ull) >> 56) \

61 | (((
x
) & 0x00ff000000000000ull) >> 40) \

62 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

63 | (((
x
) & 0x000000ff00000000ull) >> 8) \

64 | (((
x
) & 0x00000000ff000000ull) << 8) \

65 | (((
x
) & 0x0000000000ff0000ull) << 24) \

66 | (((
x
) & 0x000000000000ff00ull) << 40) \

67 | (((
x
Ë& 0x00000000000000ffuŒË<< 56))

	)

69 
__exãnsi⁄__
 
__ölöe
 
__uöt64_t


70 
	$__bsw≠_64
 (
__uöt64_t
 
__bsx
)

72 #i‡
	`__GNUC_PREREQ
 (4, 3)

73  
	`__buûtö_bsw≠64
 (
__bsx
);

75  
	`__bsw≠_c⁄°™t_64
 (
__bsx
);

77 
	}
}

	@/usr/include/bits/endianness.h

1 #i‚de‡
_BITS_ENDIANNESS_H


2 
	#_BITS_ENDIANNESS_H
 1

	)

4 #i‚de‡
_BITS_ENDIAN_H


9 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/long-double.h

21 
	#__LDOUBLE_REDIRECTS_TO_FLOAT128_ABI
 0

	)

	@/usr/include/bits/mman-shared.h

19 #i‚de‡
_SYS_MMAN_H


23 #ifde‡
__USE_GNU


25 
	#MREMAP_MAYMOVE
 1

	)

26 
	#MREMAP_FIXED
 2

	)

27 
	#MREMAP_DONTUNMAP
 4

	)

30 #i‚de‡
MFD_CLOEXEC


31 
	#MFD_CLOEXEC
 1U

	)

32 
	#MFD_ALLOW_SEALING
 2U

	)

33 
	#MFD_HUGETLB
 4U

	)

35 #i‚de‡
MFD_NOEXEC_SEAL


36 
	#MFD_NOEXEC_SEAL
 8U

	)

37 
	#MFD_EXEC
 0x10U

	)

41 #i‚de‡
MLOCK_ONFAULT


42 
	#MLOCK_ONFAULT
 1U

	)

46 #i‚de‡
PKEY_DISABLE_ACCESS


47 
	#PKEY_DISABLE_ACCESS
 0x1

	)

48 
	#PKEY_DISABLE_WRITE
 0x2

	)

51 
__BEGIN_DECLS


55 
	$memfd_¸óã
 (c⁄° *
__«me
, 
__Êags
Ë
__THROW
;

59 
	$mlock2
 (c⁄° *
__addr
, 
size_t
 
__Àngth
, 
__Êags
Ë
__THROW
;

65 
	$pkey_Æloc
 (
__Êags
, 
__ac˚ss_rights
Ë
__THROW
;

69 
	$pkey_£t
 (
__key
, 
__ac˚ss_rights
Ë
__THROW
;

73 
	$pkey_gë
 (
__key
Ë
__THROW
;

77 
	$pkey_‰ì
 (
__key
Ë
__THROW
;

81 
	$pkey_m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
, 
__pkey
Ë
__THROW
;

83 
__END_DECLS


	@/usr/include/bits/pthread_stack_min-dynamic.h

19 #i‚de‡
PTHREAD_STACK_MIN


20 #i‡
deföed
 
__USE_DYNAMIC_STACK_SIZE
 && __USE_DYNAMIC_STACK_SIZE

21 #i‚de‡
__ASSEMBLER__


22 
	#__SC_THREAD_STACK_MIN_VALUE
 75

	)

23 
__BEGIN_DECLS


24 
	$__sysc⁄f
 (
__«me
Ë
__THROW
;

25 
__END_DECLS


26 
	#PTHREAD_STACK_MIN
 
	`__sysc⁄f
 (
__SC_THREAD_STACK_MIN_VALUE
)

	)

29 
	~<bôs/±hªad_°ack_mö.h
>

	@/usr/include/bits/select.h

18 #i‚de‡
_SYS_SELECT_H


25 
	#__FD_ZERO
(
s
) \

27 
__i
; \

28 
fd_£t
 *
__¨r
 = (
s
); \

29 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

30 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

31 } 0)

	)

32 
	#__FD_SET
(
d
, 
s
) \

33 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] |
	`__FD_MASK
(d)))

	)

34 
	#__FD_CLR
(
d
, 
s
) \

35 ((Ë(
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
(
d
)] &~
	`__FD_MASK
(d)))

	)

36 
	#__FD_ISSET
(
d
, 
s
) \

37 ((
	`__FDS_BITS
 (
s
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/£À˘-de˛.h
>

25 #unde‡
__FD_ELT


26 
	#__FD_ELT
(
d
) \

27 
__exãnsi⁄__
 \

28 ({ 
__d
 = (
d
); \

29 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

30 ? (0 <
__d
 && __d < 
__FD_SETSIZE
 \

31 ? (
__d
 / 
__NFDBITS
) \

32 : 
	`__fdñt_w¨n
 (
__d
)) \

33 : 
	`__fdñt_chk
 (
__d
)); })

	)

	@/usr/include/bits/struct_stat_time64_helper.h

20 
__dev_t
 
	g°_dev
;

21 
__öo64_t
 
	g°_öo
;

22 
__mode_t
 
	g°_mode
;

23 
__∆ök_t
 
	g°_∆ök
;

24 
__uid_t
 
	g°_uid
;

25 
__gid_t
 
	g°_gid
;

26 
__dev_t
 
	g°_rdev
;

27 
__off64_t
 
	g°_size
;

28 
__blksize_t
 
	g°_blksize
;

29 
__blk˙t64_t
 
	g°_blocks
;

30 #ifde‡
__USE_XOPEN2K8


31 #i‚de‡
__°ru˘_time•ec


32 
	#__°ru˘_time•ec
 
time•ec


	)

40 
__°ru˘_time•ec
 
	g°_©im
;

41 
__°ru˘_time•ec
 
	g°_mtim
;

42 
__°ru˘_time•ec
 
	g°_˘im
;

43 
	#°_©ime
 
°_©im
.
tv_£c


	)

44 
	#°_mtime
 
°_mtim
.
tv_£c


	)

45 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

46 #unde‡
__°ru˘_time•ec


50 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


51 
	#__fõldts64
(
«me
) \

52 
__time64_t
 
«me
; 
__öt32_t
 :32; __öt32_à«mê## 
n£c


	)

54 
	#__fõldts64
(
«me
) \

55 
__time64_t
 
«me
; 
__öt32_t
Çamê## 
n£c
; __öt32_à:32

	)

58 
__fõldts64
 (
°_©ime
);

59 
__fõldts64
 (
°_mtime
);

60 
__fõldts64
 (
°_˘ime
);

62 
	g__glibc_ª£rved4
;

63 
	g__glibc_ª£rved5
;

65 #unde‡
__fõldts64


	@/usr/include/bits/thread-shared-types.h

19 #i‚de‡
_THREAD_SHARED_TYPES_H


20 
	#_THREAD_SHARED_TYPES_H
 1

	)

44 
	~<bôs/±hªadty≥s-¨ch.h
>

46 
	~<bôs/©omic_wide_cou¡î.h
>

51 
	s__±hªad_öã∫Æ_li°


53 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

54 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

55 } 
	t__±hªad_li°_t
;

57 
	s__±hªad_öã∫Æ_¶i°


59 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

60 } 
	t__±hªad_¶i°_t
;

76 
	~<bôs/°ru˘_muãx.h
>

89 
	~<bôs/°ru˘_rwlock.h
>

94 
	s__±hªad_c⁄d_s


96 
__©omic_wide_cou¡î
 
	m__w£q
;

97 
__©omic_wide_cou¡î
 
	m__g1_°¨t
;

98 
	m__g_ªfs
[2] 
	m__LOCK_ALIGNMENT
;

99 
	m__g_size
[2];

100 
	m__g1_‹ig_size
;

101 
	m__wªfs
;

102 
	m__g_sig«ls
[2];

105 
	t__tss_t
;

106 
	t__thrd_t
;

110 
__d©a
 
	m__ONCE_ALIGNMENT
;

111 } 
	t__⁄˚_Êag
;

113 
	#__ONCE_FLAG_INIT
 { 0 }

	)

	@/usr/include/bits/types/sigset_t.h

1 #i‚de‡
__sig£t_t_deföed


2 
	#__sig£t_t_deföed
 1

	)

4 
	~<bôs/ty≥s/__sig£t_t.h
>

7 
__sig£t_t
 
	tsig£t_t
;

	@/usr/include/bits/types/struct_iovec.h

19 #i‚de‡
__iovec_deföed


20 
	#__iovec_deföed
 1

	)

22 
	#__√ed_size_t


	)

23 
	~<°ddef.h
>

26 
	siovec


28 *
	miov_ba£
;

29 
size_t
 
	miov_Àn
;

	@/usr/include/bits/types/struct_statx.h

19 #i‚de‡
_SYS_STAT_H


20 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
ty≥s
/
°ru˘_°©x
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

23 #i‚de‡
__°©x_deföed


24 
	#__°©x_deföed
 1

	)

30 
	s°©x


32 
__uöt32_t
 
	m°x_mask
;

33 
__uöt32_t
 
	m°x_blksize
;

34 
__uöt64_t
 
	m°x_©åibuãs
;

35 
__uöt32_t
 
	m°x_∆ök
;

36 
__uöt32_t
 
	m°x_uid
;

37 
__uöt32_t
 
	m°x_gid
;

38 
__uöt16_t
 
	m°x_mode
;

39 
__uöt16_t
 
	m__°©x_∑d1
[1];

40 
__uöt64_t
 
	m°x_öo
;

41 
__uöt64_t
 
	m°x_size
;

42 
__uöt64_t
 
	m°x_blocks
;

43 
__uöt64_t
 
	m°x_©åibuãs_mask
;

44 
°©x_time°amp
 
	m°x_©ime
;

45 
°©x_time°amp
 
	m°x_btime
;

46 
°©x_time°amp
 
	m°x_˘ime
;

47 
°©x_time°amp
 
	m°x_mtime
;

48 
__uöt32_t
 
	m°x_rdev_maj‹
;

49 
__uöt32_t
 
	m°x_rdev_mö‹
;

50 
__uöt32_t
 
	m°x_dev_maj‹
;

51 
__uöt32_t
 
	m°x_dev_mö‹
;

52 
__uöt64_t
 
	m__°©x_∑d2
[14];

	@/usr/include/bits/types/struct_statx_timestamp.h

19 #i‚de‡
_SYS_STAT_H


20 #îr‹ 
Nevî
 
ö˛ude
 <
bôs
/
ty≥s
/
°ru˘_°©x_time°amp
.
h
> 
dúe˘ly
, in˛udê<
sys
/
°©
.h> 
ö°ód
.

23 #i‚de‡
__°©x_time°amp_deföed


24 
	#__°©x_time°amp_deföed
 1

	)

26 
	s°©x_time°amp


28 
__öt64_t
 
	mtv_£c
;

29 
__uöt32_t
 
	mtv_n£c
;

30 
__öt32_t
 
	m__°©x_time°amp_∑d1
[1];

	@/usr/include/bits/types/struct_timeval.h

1 #i‚de‡
__timevÆ_deföed


2 
	#__timevÆ_deföed
 1

	)

4 
	~<bôs/ty≥s.h
>

8 
	stimevÆ


10 #ifde‡
__USE_TIME64_REDIRECTS


11 
__time64_t
 
	mtv_£c
;

12 
__su£c⁄ds64_t
 
	mtv_u£c
;

14 
__time_t
 
	mtv_£c
;

15 
__su£c⁄ds_t
 
	mtv_u£c
;

	@/usr/include/bits/uintn-identity.h

19 #i‡!
deföed
 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


23 #i‚de‡
_BITS_UINTN_IDENTITY_H


24 
	#_BITS_UINTN_IDENTITY_H
 1

	)

26 
	~<bôs/ty≥s.h
>

32 
__ölöe
 
__uöt16_t


33 
	$__uöt16_idítôy
 (
__uöt16_t
 
__x
)

35  
__x
;

36 
	}
}

38 
__ölöe
 
__uöt32_t


39 
	$__uöt32_idítôy
 (
__uöt32_t
 
__x
)

41  
__x
;

42 
	}
}

44 
__ölöe
 
__uöt64_t


45 
	$__uöt64_idítôy
 (
__uöt64_t
 
__x
)

47  
__x
;

48 
	}
}

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub___com∑t_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_fchÊags


	)

13 
	#__°ub_gây


	)

14 
	#__°ub_ªvoke


	)

15 
	#__°ub_£éogö


	)

16 
	#__°ub_sigªtu∫


	)

17 
	#__°ub_°ty


	)

	@/usr/include/linux/falloc.h

2 #i‚de‡
_FALLOC_H_


3 
	#_FALLOC_H_


	)

5 
	#FALLOC_FL_ALLOCATE_RANGE
 0x00

	)

6 
	#FALLOC_FL_KEEP_SIZE
 0x01

	)

7 
	#FALLOC_FL_PUNCH_HOLE
 0x02

	)

8 
	#FALLOC_FL_NO_HIDE_STALE
 0x04

	)

30 
	#FALLOC_FL_COLLAPSE_RANGE
 0x08

	)

44 
	#FALLOC_FL_ZERO_RANGE
 0x10

	)

61 
	#FALLOC_FL_INSERT_RANGE
 0x20

	)

79 
	#FALLOC_FL_UNSHARE_RANGE
 0x40

	)

	@/usr/include/linux/limits.h

2 #i‚de‡
_LINUX_LIMITS_H


3 
	#_LINUX_LIMITS_H


	)

5 
	#NR_OPEN
 1024

	)

7 
	#NGROUPS_MAX
 65536

	)

8 
	#ARG_MAX
 131072

	)

9 
	#LINK_MAX
 127

	)

10 
	#MAX_CANON
 255

	)

11 
	#MAX_INPUT
 255

	)

12 
	#NAME_MAX
 255

	)

13 
	#PATH_MAX
 4096

	)

14 
	#PIPE_BUF
 4096

	)

15 
	#XATTR_NAME_MAX
 255

	)

16 
	#XATTR_SIZE_MAX
 65536

	)

17 
	#XATTR_LIST_MAX
 65536

	)

19 
	#RTSIG_MAX
 32

	)

	@/usr/include/linux/types.h

2 #i‚de‡
_LINUX_TYPES_H


3 
	#_LINUX_TYPES_H


	)

5 
	~<asm/ty≥s.h
>

7 #i‚de‡
__ASSEMBLY__


9 
	~<löux/posix_ty≥s.h
>

11 #ifde‡
__SIZEOF_INT128__


12 
__sig√d__
 
	t__öt128
 
	t__s128
 
	t__©åibuã__
((
	tÆig√d
(16)));

13 
	t__öt128
 
	t__u128
 
	t__©åibuã__
((
	tÆig√d
(16)));

22 #ifde‡
__CHECKER__


23 
	#__bôwi£
 
	`__©åibuã__
((
bôwi£
))

	)

25 
	#__bôwi£


	)

29 
	#__bôwi£__
 
__bôwi£


	)

31 
__u16
 
	t__bôwi£
 
	t__À16
;

32 
__u16
 
	t__bôwi£
 
	t__be16
;

33 
__u32
 
	t__bôwi£
 
	t__À32
;

34 
__u32
 
	t__bôwi£
 
	t__be32
;

35 
__u64
 
	t__bôwi£
 
	t__À64
;

36 
__u64
 
	t__bôwi£
 
	t__be64
;

38 
__u16
 
	t__bôwi£
 
	t__sum16
;

39 
__u32
 
	t__bôwi£
 
	t__wsum
;

50 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

51 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

52 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

54 
	t__bôwi£
 
	t__pﬁl_t
;

	@/usr/include/asm/types.h

1 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/atomic_wide_counter.h

19 #i‚de‡
_BITS_ATOMIC_WIDE_COUNTER_H


20 
	#_BITS_ATOMIC_WIDE_COUNTER_H


	)

27 
__exãnsi⁄__
 
	m__vÆue64
;

30 
	m__low
;

31 
	m__high
;

32 } 
	m__vÆue32
;

33 } 
	t__©omic_wide_cou¡î
;

	@/usr/include/bits/pthread_stack_min.h

20 
	#PTHREAD_STACK_MIN
 16384

	)

	@/usr/include/bits/pthreadtypes-arch.h

18 #i‚de‡
_BITS_PTHREADTYPES_ARCH_H


19 
	#_BITS_PTHREADTYPES_ARCH_H
 1

	)

21 
	~<bôs/w‹dsize.h
>

23 #ifde‡
__x86_64__


24 #i‡
__WORDSIZE
 == 64

25 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

28 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

30 
	#__SIZEOF_PTHREAD_MUTEX_T
 32

	)

31 
	#__SIZEOF_PTHREAD_ATTR_T
 32

	)

32 
	#__SIZEOF_PTHREAD_RWLOCK_T
 44

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

36 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

37 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

38 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

39 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

41 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

42 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

43 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

44 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

45 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

47 
	#__LOCK_ALIGNMENT


	)

48 
	#__ONCE_ALIGNMENT


	)

50 #i‚de‡
__x86_64__


52 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/select-decl.h

19 #i‚de‡
_BITS_SELECT_DECL_H


20 
	#_BITS_SELECT_DECL_H
 1

	)

22 #i‚de‡
_SYS_SELECT_H


27 
__fdñt_chk
 (
__d
);

28 
	$__fdñt_w¨n
 (
__d
)

29 
	`__w¨«âr
 ("bit outside of fd_set selected");

	@/usr/include/bits/struct_mutex.h

19 #i‚de‡
_THREAD_MUTEX_INTERNAL_H


20 
	#_THREAD_MUTEX_INTERNAL_H
 1

	)

22 
	s__±hªad_muãx_s


24 
	m__lock
;

25 
	m__cou¡
;

26 
	m__ow√r
;

27 #ifde‡
__x86_64__


28 
	m__nu£rs
;

32 
	m__köd
;

33 #ifde‡
__x86_64__


34 
	m__•ös
;

35 
	m__ñisi⁄
;

36 
__±hªad_li°_t
 
	m__li°
;

37 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

39 
	m__nu£rs
;

40 
__exãnsi⁄__
 union

44 
	m__e•ös
;

45 
	m__ìlisi⁄
;

46 
	#__•ös
 
__ñisi⁄_d©a
.
__e•ös


	)

47 
	#__ñisi⁄
 
__ñisi⁄_d©a
.
__ìlisi⁄


	)

48 } 
	m__ñisi⁄_d©a
;

49 
__±hªad_¶i°_t
 
	m__li°
;

51 
	#__PTHREAD_MUTEX_HAVE_PREV
 0

	)

55 #ifde‡
__x86_64__


56 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

57 0, 0, 0, 0, 
__köd
, 0, 0, { 0, 0 }

	)

59 
	#__PTHREAD_MUTEX_INITIALIZER
(
__köd
) \

60 0, 0, 0, 
__köd
, 0, { { 0, 0 } }

	)

	@/usr/include/bits/struct_rwlock.h

20 #i‚de‡
_RWLOCK_INTERNAL_H


21 
	#_RWLOCK_INTERNAL_H


	)

23 
	s__±hªad_rwlock_¨ch_t


25 
	m__ªadîs
;

26 
	m__wrôîs
;

27 
	m__wΩha£_fuãx
;

28 
	m__wrôîs_fuãx
;

29 
	m__∑d3
;

30 
	m__∑d4
;

31 #ifde‡
__x86_64__


32 
	m__cur_wrôî
;

33 
	m__sh¨ed
;

34 sig√d 
	m__rwñisi⁄
;

35 #ifde‡ 
__ILP32__


36 
	m__∑d1
[3];

37 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0 }

	)

39 
	m__∑d1
[7];

40 
	#__PTHREAD_RWLOCK_ELISION_EXTRA
 0, { 0, 0, 0, 0, 0, 0, 0 }

	)

42 
	m__∑d2
;

45 
	m__Êags
;

49 
	m__Êags
;

50 
	m__sh¨ed
;

51 sig√d 
	m__rwñisi⁄
;

52 
	m__∑d2
;

53 
	m__cur_wrôî
;

57 #ifde‡
__x86_64__


58 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

59 0, 0, 0, 0, 0, 0, 0, 0, 
__PTHREAD_RWLOCK_ELISION_EXTRA
, 0, 
__Êags


	)

61 
	#__PTHREAD_RWLOCK_INITIALIZER
(
__Êags
) \

62 0, 0, 0, 0, 0, 0, 
__Êags
, 0, 0, 0, 0

	)

	@/usr/include/bits/types/__sigset_t.h

1 #i‚de‡
____sig£t_t_deföed


2 
	#____sig£t_t_deföed


	)

4 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

7 
	m__vÆ
[
_SIGSET_NWORDS
];

8 } 
	t__sig£t_t
;

	@/usr/include/linux/posix_types.h

2 #i‚de‡
_LINUX_POSIX_TYPES_H


3 
	#_LINUX_POSIX_TYPES_H


	)

5 
	~<löux/°ddef.h
>

22 #unde‡
__FD_SETSIZE


23 
	#__FD_SETSIZE
 1024

	)

26 
	mfds_bôs
[
__FD_SETSIZE
 / (8 * ())];

27 } 
	t__kî√l_fd_£t
;

30 (*
	t__kî√l_sigh™dÀr_t
)();

33 
	t__kî√l_key_t
;

34 
	t__kî√l_mqd_t
;

36 
	~<asm/posix_ty≥s.h
>

	@/usr/include/asm-generic/types.h

2 #i‚de‡
_ASM_GENERIC_TYPES_H


3 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

	@/usr/include/asm/posix_types.h

2 #ifde‡
__i386__


3 
	~<asm/posix_ty≥s_32.h
>

4 #ñi‡
deföed
(
__ILP32__
)

5 
	~<asm/posix_ty≥s_x32.h
>

7 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/linux/stddef.h

2 #i‚de‡
_LINUX_STDDEF_H


3 
	#_LINUX_STDDEF_H


	)

7 #i‚de‡
__Æways_ölöe


8 
	#__Æways_ölöe
 
__ölöe__


	)

26 
	#__°ru˘_group
(
TAG
, 
NAME
, 
ATTRS
, 
MEMBERS
...) \

28 °ru˘ { 
MEMBERS
 } 
ATTRS
; \

29 
	sTAG
 { 
MEMBERS
 } 
ATTRS
 
NAME
; \

30 } 
ATTRS


	)

32 #ifde‡
__˝lu•lus


34 
	#__DECLARE_FLEX_ARRAY
(
T
, 
membî
) \

35 
T
 
membî
[0]

	)

47 
	#__DECLARE_FLEX_ARRAY
(
TYPE
, 
NAME
) \

49 °ru˘ { } 
__em±y_
 ## 
NAME
; \

50 
TYPE
 
NAME
[]; \

51 }

	)

54 #i‚de‡
__cou¡ed_by


55 
	#__cou¡ed_by
(
m
)

	)

58 #i‚de‡
__cou¡ed_by_À


59 
	#__cou¡ed_by_À
(
m
)

	)

62 #i‚de‡
__cou¡ed_by_be


63 
	#__cou¡ed_by_be
(
m
)

	)

	@/usr/include/asm-generic/int-ll64.h

9 #i‚de‡
_ASM_GENERIC_INT_LL64_H


10 
	#_ASM_GENERIC_INT_LL64_H


	)

12 
	~<asm/bô•îl⁄g.h
>

14 #i‚de‡
__ASSEMBLY__


20 
__sig√d__
 
	t__s8
;

21 
	t__u8
;

23 
__sig√d__
 
	t__s16
;

24 
	t__u16
;

26 
__sig√d__
 
	t__s32
;

27 
	t__u32
;

29 #ifde‡
__GNUC__


30 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

31 
__exãnsi⁄__
 
	t__u64
;

33 
__sig√d__
 
	t__s64
;

34 
	t__u64
;

	@/usr/include/asm/posix_types_32.h

2 #i‚de‡
_ASM_X86_POSIX_TYPES_32_H


3 
	#_ASM_X86_POSIX_TYPES_32_H


	)

11 
	t__kî√l_mode_t
;

12 
	#__kî√l_mode_t
 
__kî√l_mode_t


	)

14 
	t__kî√l_ùc_pid_t
;

15 
	#__kî√l_ùc_pid_t
 
__kî√l_ùc_pid_t


	)

17 
	t__kî√l_uid_t
;

18 
	t__kî√l_gid_t
;

19 
	#__kî√l_uid_t
 
__kî√l_uid_t


	)

21 
	t__kî√l_ﬁd_dev_t
;

22 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

24 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_64.h

2 #i‚de‡
_ASM_X86_POSIX_TYPES_64_H


3 
	#_ASM_X86_POSIX_TYPES_64_H


	)

11 
	t__kî√l_ﬁd_uid_t
;

12 
	t__kî√l_ﬁd_gid_t
;

13 
	#__kî√l_ﬁd_uid_t
 
__kî√l_ﬁd_uid_t


	)

15 
	t__kî√l_ﬁd_dev_t
;

16 
	#__kî√l_ﬁd_dev_t
 
__kî√l_ﬁd_dev_t


	)

18 
	~<asm-gíîic/posix_ty≥s.h
>

	@/usr/include/asm/posix_types_x32.h

2 #i‚de‡
_ASM_X86_POSIX_TYPES_X32_H


3 
	#_ASM_X86_POSIX_TYPES_X32_H


	)

14 
	t__kî√l_l⁄g_t
;

15 
	t__kî√l_ul⁄g_t
;

16 
	#__kî√l_l⁄g_t
 
__kî√l_l⁄g_t


	)

18 
	~<asm/posix_ty≥s_64.h
>

	@/usr/include/asm-generic/posix_types.h

2 #i‚de‡
__ASM_GENERIC_POSIX_TYPES_H


3 
	#__ASM_GENERIC_POSIX_TYPES_H


	)

5 
	~<asm/bô•îl⁄g.h
>

14 #i‚de‡
__kî√l_l⁄g_t


15 
	t__kî√l_l⁄g_t
;

16 
	t__kî√l_ul⁄g_t
;

19 #i‚de‡
__kî√l_öo_t


20 
__kî√l_ul⁄g_t
 
	t__kî√l_öo_t
;

23 #i‚de‡
__kî√l_mode_t


24 
	t__kî√l_mode_t
;

27 #i‚de‡
__kî√l_pid_t


28 
	t__kî√l_pid_t
;

31 #i‚de‡
__kî√l_ùc_pid_t


32 
	t__kî√l_ùc_pid_t
;

35 #i‚de‡
__kî√l_uid_t


36 
	t__kî√l_uid_t
;

37 
	t__kî√l_gid_t
;

40 #i‚de‡
__kî√l_su£c⁄ds_t


41 
__kî√l_l⁄g_t
 
	t__kî√l_su£c⁄ds_t
;

44 #i‚de‡
__kî√l_daddr_t


45 
	t__kî√l_daddr_t
;

48 #i‚de‡
__kî√l_uid32_t


49 
	t__kî√l_uid32_t
;

50 
	t__kî√l_gid32_t
;

53 #i‚de‡
__kî√l_ﬁd_uid_t


54 
__kî√l_uid_t
 
	t__kî√l_ﬁd_uid_t
;

55 
__kî√l_gid_t
 
	t__kî√l_ﬁd_gid_t
;

58 #i‚de‡
__kî√l_ﬁd_dev_t


59 
	t__kî√l_ﬁd_dev_t
;

66 #i‚de‡
__kî√l_size_t


67 #i‡
__BITS_PER_LONG
 != 64

68 
	t__kî√l_size_t
;

69 
	t__kî√l_ssize_t
;

70 
	t__kî√l_±rdiff_t
;

72 
__kî√l_ul⁄g_t
 
	t__kî√l_size_t
;

73 
__kî√l_l⁄g_t
 
	t__kî√l_ssize_t
;

74 
__kî√l_l⁄g_t
 
	t__kî√l_±rdiff_t
;

78 #i‚de‡
__kî√l_fsid_t


80 
	mvÆ
[2];

81 } 
	t__kî√l_fsid_t
;

87 
__kî√l_l⁄g_t
 
	t__kî√l_off_t
;

88 
	t__kî√l_loff_t
;

89 
__kî√l_l⁄g_t
 
	t__kî√l_ﬁd_time_t
;

90 
__kî√l_l⁄g_t
 
	t__kî√l_time_t
;

91 
	t__kî√l_time64_t
;

92 
__kî√l_l⁄g_t
 
	t__kî√l_˛ock_t
;

93 
	t__kî√l_timî_t
;

94 
	t__kî√l_˛ockid_t
;

95 * 
	t__kî√l_ˇddr_t
;

96 
	t__kî√l_uid16_t
;

97 
	t__kî√l_gid16_t
;

	@/usr/include/asm/bitsperlong.h

2 #i‚de‡
__ASM_X86_BITSPERLONG_H


3 
	#__ASM_X86_BITSPERLONG_H


	)

5 #i‡
deföed
(
__x86_64__
Ë&& !deföed(
__ILP32__
)

6 
	#__BITS_PER_LONG
 64

	)

8 
	#__BITS_PER_LONG
 32

	)

11 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

2 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


3 
	#__ASM_GENERIC_BITS_PER_LONG


	)

5 #i‚de‡
__BITS_PER_LONG


13 #i‡
deföed
(
__CHAR_BIT__
Ë&& deföed(
__SIZEOF_LONG__
)

14 
	#__BITS_PER_LONG
 (
__CHAR_BIT__
 * 
__SIZEOF_LONG__
)

	)

23 
	#__BITS_PER_LONG
 32

	)

27 #i‚de‡
__BITS_PER_LONG_LONG


28 
	#__BITS_PER_LONG_LONG
 64

	)

	@
1
.
1
/usr/include
177
5153
houseofmadness/matrix.h
houseofmadness/parser.h
src/base/arena.c
src/base/arena.h
src/base/base.c
src/base/base.h
src/base/def.h
src/base/math.c
src/base/math.h
src/base/random.c
src/base/random.h
src/base/string.c
src/base/string.h
src/base/vector.h
src/os/dll_main.c
src/os/file.h
src/os/file_linux.c
src/os/file_win32.c
src/os/memory.h
src/os/memory_linux.c
src/os/memory_win32.c
src/os/os.c
src/os/os.h
src/os/shared.h
src/os/shared_linux.c
src/os/shared_win32.c
src/os/time.c
src/os/time.h
/usr/include/dirent.h
/usr/include/dlfcn.h
/usr/include/fcntl.h
/usr/include/math.h
/usr/include/memory.h
/usr/include/stdint.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/mman.h
/usr/include/sys/stat.h
/usr/include/time.h
/usr/include/unistd.h
/usr/include/wchar.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/dirent.h
/usr/include/bits/dirent_ext.h
/usr/include/bits/dl_find_object.h
/usr/include/bits/dlfcn.h
/usr/include/bits/environments.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/floatn.h
/usr/include/bits/flt-eval-method.h
/usr/include/bits/fp-fast.h
/usr/include/bits/fp-logb.h
/usr/include/bits/getopt_posix.h
/usr/include/bits/iscanonical.h
/usr/include/bits/libc-header-start.h
/usr/include/bits/math-vector.h
/usr/include/bits/mathcalls-helper-functions.h
/usr/include/bits/mathcalls-narrow.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mman.h
/usr/include/bits/mman_ext.h
/usr/include/bits/posix1_lim.h
/usr/include/bits/posix_opt.h
/usr/include/bits/stat.h
/usr/include/bits/statx.h
/usr/include/bits/stdint-intn.h
/usr/include/bits/stdint-least.h
/usr/include/bits/stdint-uintn.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2-decl.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-bsearch.h
/usr/include/bits/stdlib-float.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string_fortified.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/types/FILE.h
/usr/include/bits/types/__FILE.h
/usr/include/bits/types/__fpos64_t.h
/usr/include/bits/types/__fpos_t.h
/usr/include/bits/types/clock_t.h
/usr/include/bits/types/clockid_t.h
/usr/include/bits/types/cookie_io_functions_t.h
/usr/include/bits/types/locale_t.h
/usr/include/bits/types/mbstate_t.h
/usr/include/bits/types/struct_FILE.h
/usr/include/bits/types/struct_itimerspec.h
/usr/include/bits/types/struct_timespec.h
/usr/include/bits/types/struct_tm.h
/usr/include/bits/types/time_t.h
/usr/include/bits/types/timer_t.h
/usr/include/bits/types/wint_t.h
/usr/include/bits/unistd.h
/usr/include/bits/unistd_ext.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2-decl.h
/usr/include/bits/wchar2.h
/usr/include/bits/wctype-wchar.h
/usr/include/bits/wordsize.h
/usr/include/features.h
/usr/include/strings.h
/usr/include/sys/types.h
/usr/include/bits/endian.h
/usr/include/bits/fcntl-linux.h
/usr/include/bits/floatn-common.h
/usr/include/bits/getopt_core.h
/usr/include/bits/libm-simd-decl-stubs.h
/usr/include/bits/local_lim.h
/usr/include/bits/mman-linux.h
/usr/include/bits/mman-map-flags-generic.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/statx-generic.h
/usr/include/bits/strings_fortified.h
/usr/include/bits/struct_stat.h
/usr/include/bits/time64.h
/usr/include/bits/timesize.h
/usr/include/bits/timex.h
/usr/include/bits/types/__locale_t.h
/usr/include/bits/types/__mbstate_t.h
/usr/include/bits/typesizes.h
/usr/include/bits/unistd-decl.h
/usr/include/endian.h
/usr/include/features-time64.h
/usr/include/gnu/stubs.h
/usr/include/linux/close_range.h
/usr/include/linux/stat.h
/usr/include/stdc-predef.h
/usr/include/sys/cdefs.h
/usr/include/sys/select.h
/usr/include/bits/byteswap.h
/usr/include/bits/endianness.h
/usr/include/bits/long-double.h
/usr/include/bits/mman-shared.h
/usr/include/bits/pthread_stack_min-dynamic.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/struct_stat_time64_helper.h
/usr/include/bits/thread-shared-types.h
/usr/include/bits/types/sigset_t.h
/usr/include/bits/types/struct_iovec.h
/usr/include/bits/types/struct_statx.h
/usr/include/bits/types/struct_statx_timestamp.h
/usr/include/bits/types/struct_timeval.h
/usr/include/bits/uintn-identity.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/falloc.h
/usr/include/linux/limits.h
/usr/include/linux/types.h
/usr/include/asm/types.h
/usr/include/bits/atomic_wide_counter.h
/usr/include/bits/pthread_stack_min.h
/usr/include/bits/pthreadtypes-arch.h
/usr/include/bits/select-decl.h
/usr/include/bits/struct_mutex.h
/usr/include/bits/struct_rwlock.h
/usr/include/bits/types/__sigset_t.h
/usr/include/linux/posix_types.h
/usr/include/asm-generic/types.h
/usr/include/asm/posix_types.h
/usr/include/linux/stddef.h
/usr/include/asm-generic/int-ll64.h
/usr/include/asm/posix_types_32.h
/usr/include/asm/posix_types_64.h
/usr/include/asm/posix_types_x32.h
/usr/include/asm-generic/posix_types.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
